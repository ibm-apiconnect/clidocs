"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[37817],{15473:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>n,metadata:()=>a,toc:()=>d});var i=t(74848),r=t(28453);const n={tags:["group: user-registry-settings"]},o="apic user-registry-settings",a={id:"v1008/apim/user-registry-settings/apic_user-registry-settings_update",title:"apic user-registry-settings:update",description:"Update the User Registry Setting object",source:"@site/docs/v1008/apim/user-registry-settings/apic_user-registry-settings_update.md",sourceDirName:"v1008/apim/user-registry-settings",slug:"/v1008/apim/user-registry-settings/apic_user-registry-settings_update",permalink:"/clidocs/docs/v1008/apim/user-registry-settings/apic_user-registry-settings_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/user-registry-settings/apic_user-registry-settings_update.md",tags:[{inline:!0,label:"group: user-registry-settings",permalink:"/clidocs/docs/tags/group-user-registry-settings"}],version:"current",frontMatter:{tags:["group: user-registry-settings"]},sidebar:"tutorialSidebar",previous:{title:"apic user-registry-settings:get",permalink:"/clidocs/docs/v1008/apim/user-registry-settings/apic_user-registry-settings_get"},next:{title:"apic users",permalink:"/clidocs/docs/v1008/apim/users/apic_users"}},c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsxs)(s.h1,{id:"apic-user-registry-settings",children:["apic user-registry-settings",":update"]})}),"\n",(0,i.jsx)(s.p,{children:"Update the User Registry Setting object"}),"\n",(0,i.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Update the User Registry Setting object"}),"\n",(0,i.jsx)(s.p,{children:"Fields allowed but ignored:"}),"\n",(0,i.jsxs)(s.ul,{children:["\n",(0,i.jsx)(s.li,{children:"name"}),"\n",(0,i.jsx)(s.li,{children:"type"}),"\n",(0,i.jsx)(s.li,{children:"api_version"}),"\n",(0,i.jsx)(s.li,{children:"scope"}),"\n",(0,i.jsx)(s.li,{children:"created_at"}),"\n",(0,i.jsx)(s.li,{children:"updated_at"}),"\n",(0,i.jsx)(s.li,{children:"url"}),"\n"]}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"apic user-registry-settings:update [flags]\n"})}),"\n",(0,i.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"\n      apic user-registry-settings:update [flags] USER_REGISTRY_SETTING_FILE\n\n"})}),"\n",(0,i.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,i.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>a});var i=t(96540);const r={},n=i.createContext(r);function o(e){const s=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(n.Provider,{value:s},e.children)}}}]);