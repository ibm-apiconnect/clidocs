"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[37467],{44597:(o,e,i)=>{i.r(e),i.d(e,{assets:()=>t,contentTitle:()=>p,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>r});var l=i(74848),s=i(28453);const a={tags:["group: global-policy-prehooks","scope: catalog","scope: space"]},p="apic global-policy-prehooks",n={id:"v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update",title:"apic global-policy-prehooks:update",description:"Global Policy Prehooks update operations",source:"@site/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update.md",sourceDirName:"v1008/apim/global-policy-prehooks",slug:"/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update",permalink:"/clidocs/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update.md",tags:[{inline:!0,label:"group: global-policy-prehooks",permalink:"/clidocs/docs/tags/group-global-policy-prehooks"},{inline:!0,label:"scope: catalog",permalink:"/clidocs/docs/tags/scope-catalog"},{inline:!0,label:"scope: space",permalink:"/clidocs/docs/tags/scope-space"}],version:"current",frontMatter:{tags:["group: global-policy-prehooks","scope: catalog","scope: space"]},sidebar:"tutorialSidebar",previous:{title:"apic global-policy-prehooks:get",permalink:"/clidocs/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_get"},next:{title:"apic groups",permalink:"/clidocs/docs/v1008/apim/groups/apic_groups"}},t={},r=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(o){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...o.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(e.header,{children:(0,l.jsxs)(e.h1,{id:"apic-global-policy-prehooks",children:["apic global-policy-prehooks",":update"]})}),"\n",(0,l.jsx)(e.p,{children:"Global Policy Prehooks update operations"}),"\n",(0,l.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,l.jsx)(e.p,{children:"Global Policy Prehooks update operations"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"apic global-policy-prehooks:update [flags]\n"})}),"\n",(0,l.jsx)(e.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:"\n      apic global-policy-prehooks:update [flags] --scope space GLOBAL_POLICY_PREHOOK_FILE\n      apic global-policy-prehooks:update [flags] --scope catalog GLOBAL_POLICY_PREHOOK_FILE\n\n"})}),"\n",(0,l.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for global-policy-prehooks:update\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n'})}),"\n",(0,l.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,l.jsx)(e.pre,{children:(0,l.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(o={}){const{wrapper:e}={...(0,s.R)(),...o.components};return e?(0,l.jsx)(e,{...o,children:(0,l.jsx)(c,{...o})}):c(o)}},28453:(o,e,i)=>{i.d(e,{R:()=>p,x:()=>n});var l=i(96540);const s={},a=l.createContext(s);function p(o){const e=l.useContext(a);return l.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function n(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(s):o.components||s:p(o.components),l.createElement(a.Provider,{value:e},o.children)}}}]);