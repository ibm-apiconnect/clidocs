"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[37451],{28453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>a});var i=o(96540);const r={},n=i.createContext(r);function s(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),i.createElement(n.Provider,{value:t},e.children)}},72902:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>u,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"v1009/apim/oauth-providers/apic_oauth-providers","title":"apic oauth-providers","description":"Oauth Providers operations","source":"@site/docs/v1009/apim/oauth-providers/apic_oauth-providers.md","sourceDirName":"v1009/apim/oauth-providers","slug":"/v1009/apim/oauth-providers/apic_oauth-providers","permalink":"/clidocs/docs/v1009/apim/oauth-providers/apic_oauth-providers","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/oauth-providers/apic_oauth-providers.md","tags":[{"inline":true,"label":"group: oauth-providers","permalink":"/clidocs/docs/tags/group-oauth-providers"}],"version":"current","frontMatter":{"tags":["group: oauth-providers"]},"sidebar":"tutorialSidebar","previous":{"title":"apic notification-templates:update","permalink":"/clidocs/docs/v1009/apim/notification-templates/apic_notification-templates_update"},"next":{"title":"apic oauth-providers:clear","permalink":"/clidocs/docs/v1009/apim/oauth-providers/apic_oauth-providers_clear"}}');var r=o(74848),n=o(28453);const s={tags:["group: oauth-providers"]},a="apic oauth-providers",p={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"apic-oauth-providers",children:"apic oauth-providers"})}),"\n",(0,r.jsx)(t.p,{children:"Oauth Providers operations"}),"\n",(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"Oauth Providers operations"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic oauth-providers [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for oauth-providers\n      --limit int32     Maximum number of items to return\n      --offset int32    Offset item number from list to begin return\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,r.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);