"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[40166],{19828:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var t=s(74848),i=s(28453);const a={tags:["group: backups"]},o="apic backups",c={id:"v1008/portaladmin/backups/apic_backups_list",title:"apic backups:list",description:"List the backups present on the remote backup server.",source:"@site/docs/v1008/portaladmin/backups/apic_backups_list.md",sourceDirName:"v1008/portaladmin/backups",slug:"/v1008/portaladmin/backups/apic_backups_list",permalink:"/clidocs/docs/v1008/portaladmin/backups/apic_backups_list",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/backups/apic_backups_list.md",tags:[{inline:!0,label:"group: backups",permalink:"/clidocs/docs/tags/group-backups"}],version:"current",frontMatter:{tags:["group: backups"]},sidebar:"tutorialSidebar",previous:{title:"apic backups",permalink:"/clidocs/docs/v1008/portaladmin/backups/apic_backups"},next:{title:"apic config",permalink:"/clidocs/docs/v1008/portaladmin/config/apic_config"}},r={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsxs)(n.h1,{id:"apic-backups",children:["apic backups",":list"]})}),"\n",(0,t.jsx)(n.p,{children:"List the backups present on the remote backup server."}),"\n",(0,t.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:"Lists all the backups that are currently present on the remote backup server, if one has been set."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apic backups:list --mode portaladmin [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"\n      apic backups:list --mode portaladmin [flags]\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --portal_service_name string   The name of the Portal Service (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>o,x:()=>c});var t=s(96540);const i={},a=t.createContext(i);function o(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);