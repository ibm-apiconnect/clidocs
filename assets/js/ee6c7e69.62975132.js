"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[138283],{28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var r=o(296540);const s={},t=r.createContext(s);function i(e){const n=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(t.Provider,{value:n},e.children)}},449692:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>i,metadata:()=>r,toc:()=>p});const r=JSON.parse('{"id":"v10010/apim/consumer-orgs/apic_consumer-orgs","title":"apic consumer-orgs","description":"Consumer Orgs operations","source":"@site/docs/v10010/apim/consumer-orgs/apic_consumer-orgs.md","sourceDirName":"v10010/apim/consumer-orgs","slug":"/v10010/apim/consumer-orgs/apic_consumer-orgs","permalink":"/clidocs/docs/v10010/apim/consumer-orgs/apic_consumer-orgs","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/consumer-orgs/apic_consumer-orgs.md","tags":[{"inline":true,"label":"group: consumer-orgs","permalink":"/clidocs/docs/tags/group-consumer-orgs"}],"version":"current","frontMatter":{"tags":["group: consumer-orgs"]},"sidebar":"tutorialSidebar","previous":{"title":"apic consumer-org-settings:update","permalink":"/clidocs/docs/v10010/apim/consumer-org-settings/apic_consumer-org-settings_update"},"next":{"title":"apic consumer-orgs:clear","permalink":"/clidocs/docs/v10010/apim/consumer-orgs/apic_consumer-orgs_clear"}}');var s=o(474848),t=o(28453);const i={tags:["group: consumer-orgs"]},c="apic consumer-orgs",a={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsx)(n.h1,{id:"apic-consumer-orgs",children:"apic consumer-orgs"})}),"\n",(0,s.jsx)(n.p,{children:"Consumer Orgs operations"}),"\n",(0,s.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(n.p,{children:"Consumer Orgs operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"apic consumer-orgs [flags]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'  -c, --catalog string    Catalog name or id (required)\n      --expand string     List of transient field to expand\n      --fields string     List of field names to return\n      --format string     Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help              Help for consumer-orgs\n      --limit int32       Maximum number of items to return\n      --offset int32      Offset item number from list to begin return\n  -o, --org string        Organization name or id (required)\n      --output string     Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string     management server endpoint (required)\n      --space string      Space name or id (required)\n      --space-initiated   space-initiated\n'})}),"\n",(0,s.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function m(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);