"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[672066],{28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>a});var i=n(296540);const r={},s=i.createContext(r);function o(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(s.Provider,{value:t},e.children)}},939797:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"v1005/apim/apic_entries","title":"apic entries","description":"Entries operations","source":"@site/docs/v1005/apim/apic_entries.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_entries","permalink":"/clidocs/docs/v1005/apim/apic_entries","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_entries.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic drafts:list","permalink":"/clidocs/docs/v1005/apim/apic_drafts_list"},"next":{"title":"apic entries:clear","permalink":"/clidocs/docs/v1005/apim/apic_entries_clear"}}');var r=n(474848),s=n(28453);const o={},a="apic entries",c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"apic-entries",children:"apic entries"})}),"\n",(0,r.jsx)(t.p,{children:"Entries operations"}),"\n",(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"Entries operations"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic entries [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --fields string       List of field names to return\n      --format string       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                Help for entries\n      --limit int32         Maximum number of items to return\n      --offset int32        Offset item number from list to begin return\n  -o, --org string          Organization name or id (required)\n      --output string       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string        scope\n  -s, --server string       management server endpoint (required)\n      --truststore string   Truststore name or id (required)\n'})}),"\n",(0,r.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);