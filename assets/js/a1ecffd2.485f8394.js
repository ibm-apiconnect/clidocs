"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[11859],{34924:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>d});var t=n(74848),s=n(28453);const o={},a="apic reports",i={id:"v1008/analytics/apic_reports_spaceConsumerTrendConsumerorgsLeaderboard",title:"apic reports:spaceConsumerTrendConsumerorgsLeaderboard",description:"Consumer trend report consumer org leaderboard",source:"@site/docs/v1008/analytics/apic_reports_spaceConsumerTrendConsumerorgsLeaderboard.md",sourceDirName:"v1008/analytics",slug:"/v1008/analytics/apic_reports_spaceConsumerTrendConsumerorgsLeaderboard",permalink:"/clidocs/docs/v1008/analytics/apic_reports_spaceConsumerTrendConsumerorgsLeaderboard",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/analytics/apic_reports_spaceConsumerTrendConsumerorgsLeaderboard.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic reports:spaceConsumerTrendApplicationsLeaderboard",permalink:"/clidocs/docs/v1008/analytics/apic_reports_spaceConsumerTrendApplicationsLeaderboard"},next:{title:"apic reports:spaceConsumerorgDetail",permalink:"/clidocs/docs/v1008/analytics/apic_reports_spaceConsumerorgDetail"}},c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsxs)(r.h1,{id:"apic-reports",children:["apic reports",":spaceConsumerTrendConsumerorgsLeaderboard"]})}),"\n",(0,t.jsx)(r.p,{children:"Consumer trend report consumer org leaderboard"}),"\n",(0,t.jsx)(r.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(r.p,{children:"Return the data for the consumerorg leaderboard in the consumer trend report, including top_data and bottom_data along with other metrics over time at the space scope."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"apic reports:spaceConsumerTrendConsumerorgsLeaderboard --mode analytics [flags]\n"})}),"\n",(0,t.jsx)(r.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"      apic reports:spaceConsumerTrendConsumerorgsLeaderboard --mode analytics [flags]\n"})}),"\n",(0,t.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n  -c, --catalog string             Catalog name or ID. (required)\n      --end string                 If set, only return events with a datetime equal or older than this. The date-time value must be such that the time component represents midnight. for example, 2021-07-21T00:00:000Z.\n\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string                 Provider organization name or ID. (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default \"-\")\n  -s, --server string              management server endpoint (required)\n      --space string               Space name or ID. (required)\n      --start string               If set, only return events with a date equal to or newer than this. The date-time value must be such that the time component represents midnight. for example, 2021-07-21T00:00:000Z.\n\n      --timeframe string           If set, only return events within the indicated timeframe. Timeframe values are in the format of 'last<value><unit>' where <value> is a positive integer greater than one, and <unit> can be one of day, month, quarter or year.\n\n"})}),"\n",(0,t.jsx)(r.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>a,x:()=>i});var t=n(96540);const s={},o=t.createContext(s);function a(e){const r=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function i(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),t.createElement(o.Provider,{value:r},e.children)}}}]);