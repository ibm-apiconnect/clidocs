"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[81644],{28453:(e,t,s)=>{s.d(t,{R:()=>r,x:()=>a});var n=s(96540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}},36511:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v1005/analytics/apic_clustermgmt_snapshotVerify","title":"apic clustermgmt:snapshotVerify","description":"Verify snapshot repository.","source":"@site/docs/v1005/analytics/apic_clustermgmt_snapshotVerify.md","sourceDirName":"v1005/analytics","slug":"/v1005/analytics/apic_clustermgmt_snapshotVerify","permalink":"/clidocs/docs/v1005/analytics/apic_clustermgmt_snapshotVerify","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/analytics/apic_clustermgmt_snapshotVerify.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic clustermgmt:snapshotStatusByRepositorySnapshot","permalink":"/clidocs/docs/v1005/analytics/apic_clustermgmt_snapshotStatusByRepositorySnapshot"},"next":{"title":"apic clustermgmt:splitIndex","permalink":"/clidocs/docs/v1005/analytics/apic_clustermgmt_splitIndex"}}');var i=s(74848),o=s(28453);const r={},a="apic clustermgmt",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsxs)(t.h1,{id:"apic-clustermgmt",children:["apic clustermgmt",":snapshotVerify"]})}),"\n",(0,i.jsx)(t.p,{children:"Verify snapshot repository."}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:"Verifies that a snapshot repository is functional."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic clustermgmt:snapshotVerify --mode analytics [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --analytics-service string         Analytics service name or ID. (required)\n      --cluster_manager_timeout string   Amount of time to wait for a connection to the master node. Optional, defaults to 30 seconds.\n      --format string                    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                             Help for clustermgmt:snapshotVerify\n      --output string                    Write file(s) to directory, instead of STDOUT (default "-")\n      --repository string                Comma-separated list of snapshot repository names. (required)\n  -s, --server string                    management server endpoint (required)\n      --timeout string                   Period to wait for a response. If no response is received before the timeout expires, the request fails and returns an error.\n'})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);