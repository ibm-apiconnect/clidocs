"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[603395],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(296540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}},78087:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"v10010/portaladmin/themes/apic_themes","title":"apic themes","description":"Themes operations","source":"@site/docs/v10010/portaladmin/themes/apic_themes.md","sourceDirName":"v10010/portaladmin/themes","slug":"/v10010/portaladmin/themes/apic_themes","permalink":"/clidocs/docs/v10010/portaladmin/themes/apic_themes","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/portaladmin/themes/apic_themes.md","tags":[{"inline":true,"label":"group: themes","permalink":"/clidocs/docs/tags/group-themes"}],"version":"current","frontMatter":{"tags":["group: themes"]},"sidebar":"tutorialSidebar","previous":{"title":"apic test","permalink":"/clidocs/docs/v10010/portaladmin/test/apic_test"},"next":{"title":"apic themes:delete","permalink":"/clidocs/docs/v10010/portaladmin/themes/apic_themes_delete"}}');var s=n(474848),i=n(28453);const r={tags:["group: themes"]},a="apic themes",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"apic-themes",children:"apic themes"})}),"\n",(0,s.jsx)(t.p,{children:"Themes operations"}),"\n",(0,s.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(t.p,{children:"Themes operations"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic themes --mode portaladmin [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --core             Filter out extensions that are not in Drupal Core.\n      --custom           Filter to only custom modules or themes\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for themes\n      --no-core          Filter out extensions that are provided by Drupal Core.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n      --package string   Filter by project packages. You can use multiple comma-separated values.\n  -s, --server string    management server endpoint (required)\n      --status string    Filter by extension status. Choices _ enabled, disabled and/or 'not installed'. You can use multiple comma-separated values.\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);