"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[37467],{28453:(e,o,i)=>{i.d(o,{R:()=>p,x:()=>n});var s=i(96540);const l={},a=s.createContext(l);function p(e){const o=s.useContext(a);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function n(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:p(e.components),s.createElement(a.Provider,{value:o},e.children)}},67299:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>t,contentTitle:()=>n,default:()=>d,frontMatter:()=>p,metadata:()=>s,toc:()=>r});const s=JSON.parse('{"id":"v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update","title":"apic global-policy-prehooks:update","description":"Global Policy Prehooks update operations","source":"@site/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update.md","sourceDirName":"v1008/apim/global-policy-prehooks","slug":"/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update","permalink":"/clidocs/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update.md","tags":[{"inline":true,"label":"group: global-policy-prehooks","permalink":"/clidocs/docs/tags/group-global-policy-prehooks"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: global-policy-prehooks","scope: catalog","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic global-policy-prehooks:get","permalink":"/clidocs/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_get"},"next":{"title":"apic groups","permalink":"/clidocs/docs/v1008/apim/groups/apic_groups"}}');var l=i(74848),a=i(28453);const p={tags:["group: global-policy-prehooks","scope: catalog","scope: space"]},n="apic global-policy-prehooks",t={},r=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(o.header,{children:(0,l.jsxs)(o.h1,{id:"apic-global-policy-prehooks",children:["apic global-policy-prehooks",":update"]})}),"\n",(0,l.jsx)(o.p,{children:"Global Policy Prehooks update operations"}),"\n",(0,l.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,l.jsx)(o.p,{children:"Global Policy Prehooks update operations"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{children:"apic global-policy-prehooks:update [flags]\n"})}),"\n",(0,l.jsx)(o.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{children:"\n      apic global-policy-prehooks:update [flags] --scope space GLOBAL_POLICY_PREHOOK_FILE\n      apic global-policy-prehooks:update [flags] --scope catalog GLOBAL_POLICY_PREHOOK_FILE\n\n"})}),"\n",(0,l.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for global-policy-prehooks:update\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n'})}),"\n",(0,l.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,l.jsx)(o.pre,{children:(0,l.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:o}={...(0,a.R)(),...e.components};return o?(0,l.jsx)(o,{...e,children:(0,l.jsx)(c,{...e})}):c(e)}}}]);