"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[94298],{27926:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>r,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var s=t(74848),i=t(28453);const o={},r="apic me",c={id:"v1008/consumer/apic_me_get",title:"apic me:get",description:"Get the Me object",source:"@site/docs/v1008/consumer/apic_me_get.md",sourceDirName:"v1008/consumer",slug:"/v1008/consumer/apic_me_get",permalink:"/clidocs/docs/v1008/consumer/apic_me_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/consumer/apic_me_get.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic me:delete",permalink:"/clidocs/docs/v1008/consumer/apic_me_delete"},next:{title:"apic me:update",permalink:"/clidocs/docs/v1008/consumer/apic_me_update"}},d={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"apic-me",children:["apic me",":get"]})}),"\n",(0,s.jsx)(n.p,{children:"Get the Me object"}),"\n",(0,s.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(n.p,{children:"Get the Me object"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"apic me:get --mode consumer [flags]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"      apic me:get --mode consumer [flags]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"      --expand          Expand the response object\n      --fields string   field name\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);