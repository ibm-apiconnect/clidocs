"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[364792],{28453:(s,i,e)=>{e.d(i,{R:()=>r,x:()=>l});var n=e(296540);const o={},t=n.createContext(o);function r(s){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof s?s(i):{...i,...s}}),[i,s])}function l(s){let i;return i=s.disableParentContext?"function"==typeof s.components?s.components(o):s.components||o:r(s.components),n.createElement(t.Provider,{value:i},s.children)}},623668:(s,i,e)=>{e.r(i),e.d(i,{assets:()=>p,contentTitle:()=>l,default:()=>m,frontMatter:()=>r,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"v10010/apim/permissions/apic_permissions_list","title":"apic permissions:list","description":"Permissions list operations","source":"@site/docs/v10010/apim/permissions/apic_permissions_list.md","sourceDirName":"v10010/apim/permissions","slug":"/v10010/apim/permissions/apic_permissions_list","permalink":"/clidocs/docs/v10010/apim/permissions/apic_permissions_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/permissions/apic_permissions_list.md","tags":[{"inline":true,"label":"group: permissions","permalink":"/clidocs/docs/tags/group-permissions"}],"version":"current","frontMatter":{"tags":["group: permissions"]},"sidebar":"tutorialSidebar","previous":{"title":"apic permissions:list-all","permalink":"/clidocs/docs/v10010/apim/permissions/apic_permissions_list-all"},"next":{"title":"apic policies","permalink":"/clidocs/docs/v10010/apim/policies/apic_policies"}}');var o=e(474848),t=e(28453);const r={tags:["group: permissions"]},l="apic permissions",p={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function a(s){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...s.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsxs)(i.h1,{id:"apic-permissions",children:["apic permissions",":list"]})}),"\n",(0,o.jsx)(i.p,{children:"Permissions list operations"}),"\n",(0,o.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(i.p,{children:"Permissions list operations"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"apic permissions:list [flags]\n"})}),"\n",(0,o.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"apic permissions:list [flags] --subcollection provider\napic permissions:list [flags] --subcollection org\napic permissions:list [flags] --subcollection deployment\napic permissions:list [flags] --subcollection consumer\napic permissions:list [flags] --subcollection cloud\napic permissions:list [flags] --my\n"})}),"\n",(0,o.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'      --fields string          List of field names to return\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                   Help for permissions:list\n      --limit int32            Maximum number of items to return\n      --my                     my\n      --offset int32           Offset item number from list to begin return\n      --output string          Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string          management server endpoint (required)\n      --subcollection string   subcollection\n'})}),"\n",(0,o.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function m(s={}){const{wrapper:i}={...(0,t.R)(),...s.components};return i?(0,o.jsx)(i,{...s,children:(0,o.jsx)(a,{...s})}):a(s)}}}]);