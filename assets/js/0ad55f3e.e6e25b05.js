"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[107710],{28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>r});var s=t(296540);const n={},o=s.createContext(n);function a(e){const i=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(o.Provider,{value:i},e.children)}},882556:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"v1005/apim/apic_associates_list","title":"apic associates:list","description":"Associates list operations","source":"@site/docs/v1005/apim/apic_associates_list.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_associates_list","permalink":"/clidocs/docs/v1005/apim/apic_associates_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_associates_list.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic associates:get","permalink":"/clidocs/docs/v1005/apim/apic_associates_get"},"next":{"title":"apic availability-zones","permalink":"/clidocs/docs/v1005/apim/apic_availability-zones"}}');var n=t(474848),o=t(28453);const a={},r="apic associates",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsxs)(i.h1,{id:"apic-associates",children:["apic associates",":list"]})}),"\n",(0,n.jsx)(i.p,{children:"Associates list operations"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Associates list operations"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic associates:list [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'  -c, --catalog string        Catalog name or id (required)\n      --consumer-org string   Consumer Organization name or id (required)\n      --fields string         List of field names to return\n      --format string         Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                  Help for associates:list\n      --limit int32           Maximum number of items to return\n      --offset int32          Offset item number from list to begin return\n  -o, --org string            Organization name or id (required)\n      --output string         Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string          scope\n  -s, --server string         management server endpoint (required)\n      --space string          Space name or id (required)\n      --space-initiated       space-initiated\n'})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);