"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[66119],{28453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>a});var r=s(96540);const t={},n=r.createContext(t);function o(e){const i=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(n.Provider,{value:i},e.children)}},74882:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"v1008/apim/user-registries/apic_user-registries_update","title":"apic user-registries:update","description":"Update the User Registry object by name or id","source":"@site/docs/v1008/apim/user-registries/apic_user-registries_update.md","sourceDirName":"v1008/apim/user-registries","slug":"/v1008/apim/user-registries/apic_user-registries_update","permalink":"/clidocs/docs/v1008/apim/user-registries/apic_user-registries_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/user-registries/apic_user-registries_update.md","tags":[{"inline":true,"label":"group: user-registries","permalink":"/clidocs/docs/tags/group-user-registries"}],"version":"current","frontMatter":{"tags":["group: user-registries"]},"sidebar":"tutorialSidebar","previous":{"title":"apic user-registries:test-connection","permalink":"/clidocs/docs/v1008/apim/user-registries/apic_user-registries_test-connection"},"next":{"title":"apic user-registry-settings","permalink":"/clidocs/docs/v1008/apim/user-registry-settings/apic_user-registry-settings"}}');var t=s(74848),n=s(28453);const o={tags:["group: user-registries"]},a="apic user-registries",l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsxs)(i.h1,{id:"apic-user-registries",children:["apic user-registries",":update"]})}),"\n",(0,t.jsx)(i.p,{children:"Update the User Registry object by name or id"}),"\n",(0,t.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(i.p,{children:"Update the User Registry object by name or id"}),"\n",(0,t.jsx)(i.p,{children:"Fields not allowed:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"owned"}),"\n",(0,t.jsx)(i.li,{children:"registry_type"}),"\n",(0,t.jsx)(i.li,{children:"user_registry_managed"}),"\n",(0,t.jsx)(i.li,{children:"correlation_data"}),"\n",(0,t.jsx)(i.li,{children:"integration_url"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Fields allowed but ignored:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"id"}),"\n",(0,t.jsx)(i.li,{children:"type"}),"\n",(0,t.jsx)(i.li,{children:"api_version"}),"\n",(0,t.jsx)(i.li,{children:"scope"}),"\n",(0,t.jsx)(i.li,{children:"created_at"}),"\n",(0,t.jsx)(i.li,{children:"updated_at"}),"\n",(0,t.jsx)(i.li,{children:"url"}),"\n",(0,t.jsx)(i.li,{children:"org_url"}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic user-registries:update [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"\n      apic user-registries:update [flags] USER_REGISTRY USER_REGISTRY_FILE\n\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,t.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);