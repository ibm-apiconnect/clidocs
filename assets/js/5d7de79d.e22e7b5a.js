"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[97074],{67566:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=t(74848),s=t(28453);const a={},o="apic catalogs",r={id:"v1008/apim/apic_catalogs_update",title:"apic catalogs:update",description:"Update the Catalog object by name or id",source:"@site/docs/v1008/apim/apic_catalogs_update.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_catalogs_update",permalink:"/clidocs/docs/v1008/apim/apic_catalogs_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_catalogs_update.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic catalogs:transfer-owner",permalink:"/clidocs/docs/v1008/apim/apic_catalogs_transfer-owner"},next:{title:"apic client-creds",permalink:"/clidocs/docs/v1008/apim/apic_client-creds"}},c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"apic-catalogs",children:["apic catalogs",":update"]}),"\n",(0,i.jsx)(n.p,{children:"Update the Catalog object by name or id"}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Update the Catalog object by name or id"}),"\n",(0,i.jsx)(n.p,{children:"Fields not allowed:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"name"}),"\n"]}),"\n",(0,i.jsx)(n.p,{children:"Fields allowed but ignored:"}),"\n",(0,i.jsxs)(n.ul,{children:["\n",(0,i.jsx)(n.li,{children:"id"}),"\n",(0,i.jsx)(n.li,{children:"type"}),"\n",(0,i.jsx)(n.li,{children:"api_version"}),"\n",(0,i.jsx)(n.li,{children:"scope"}),"\n",(0,i.jsx)(n.li,{children:"created_at"}),"\n",(0,i.jsx)(n.li,{children:"updated_at"}),"\n",(0,i.jsx)(n.li,{children:"url"}),"\n",(0,i.jsx)(n.li,{children:"org_url"}),"\n"]}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic catalogs:update [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"      apic catalogs:update [flags] CATALOG CATALOG_FILE\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(96540);const s={},a=i.createContext(s);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);