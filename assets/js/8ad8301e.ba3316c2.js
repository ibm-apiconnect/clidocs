"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[48001],{62390:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"v1005/analytics/apic_clustermgmt_getRecoveryByIndex","title":"apic clustermgmt:getRecoveryByIndex","description":"Use the index recovery API to get information about ongoing and completed shard recoveries.","source":"@site/docs/v1005/analytics/apic_clustermgmt_getRecoveryByIndex.md","sourceDirName":"v1005/analytics","slug":"/v1005/analytics/apic_clustermgmt_getRecoveryByIndex","permalink":"/clidocs/docs/v1005/analytics/apic_clustermgmt_getRecoveryByIndex","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/analytics/apic_clustermgmt_getRecoveryByIndex.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic clustermgmt:getRecovery","permalink":"/clidocs/docs/v1005/analytics/apic_clustermgmt_getRecovery"},"next":{"title":"apic clustermgmt:getRemoteInfo","permalink":"/clidocs/docs/v1005/analytics/apic_clustermgmt_getRemoteInfo"}}');var o=n(74848),i=n(28453);const s={},c="apic clustermgmt",a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsxs)(t.h1,{id:"apic-clustermgmt",children:["apic clustermgmt",":getRecoveryByIndex"]})}),"\n",(0,o.jsx)(t.p,{children:"Use the index recovery API to get information about ongoing and completed shard recoveries."}),"\n",(0,o.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(t.p,{children:"Returns information about ongoing and completed shard recoveries for one or more indices. For data streams, the API returns information for the stream\u2019s backing indices."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"apic clustermgmt:getRecoveryByIndex --mode analytics [flags]\n"})}),"\n",(0,o.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --active_only                If true, the response only includes ongoing shard recoveries. Defaults to false.\n      --analytics-service string   Analytics service name or ID. (required)\n      --detailed                   If true, the response includes detailed information about shard recoveries.\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                       Help for clustermgmt:getRecoveryByIndex\n      --index string               Comma-separated list or wildcard expression of index names used to limit the request. (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,o.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function m(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var r=n(96540);const o={},i=r.createContext(o);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);