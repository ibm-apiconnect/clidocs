"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[51344],{33375:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>d,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var i=o(74848),t=o(28453);const r={},s="apic role",a={id:"v1005/portaladmin/apic_role_add-permission",title:"apic role:add-permission",description:"Grant specified permission(s) to a role.",source:"@site/docs/v1005/portaladmin/apic_role_add-permission.md",sourceDirName:"v1005/portaladmin",slug:"/v1005/portaladmin/apic_role_add-permission",permalink:"/clidocs/docs/v1005/portaladmin/apic_role_add-permission",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_role_add-permission.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic role",permalink:"/clidocs/docs/v1005/portaladmin/apic_role"},next:{title:"apic role:create",permalink:"/clidocs/docs/v1005/portaladmin/apic_role_create"}},d={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"apic-role",children:["apic role",":add-permission"]}),"\n",(0,i.jsx)(n.p,{children:"Grant specified permission(s) to a role."}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Grant specified permission(s) to a role."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic role:add-permission --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"  -c, --catalog string       Name or ID of the Catalog that the site belongs to. (required)\n      --format string        Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                 Help for role:add-permission\n  -o, --org string           Name or ID of the organization that the catalog belongs to. (required)\n      --permissions string   The list of permission to grant, delimited by commas. (required)\n  -s, --server string        management server endpoint (required)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>a});var i=o(96540);const t={},r=i.createContext(t);function s(e){const n=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(r.Provider,{value:n},e.children)}}}]);