"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[53229],{28453:(n,e,i)=>{i.d(e,{R:()=>a,x:()=>s});var t=i(96540);const c={},o=t.createContext(c);function a(n){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof n?n(e):{...e,...n}}),[e,n])}function s(n){let e;return e=n.disableParentContext?"function"==typeof n.components?n.components(c):n.components||c:a(n.components),t.createElement(o.Provider,{value:e},n.children)}},59074:(n,e,i)=>{i.r(e),i.d(e,{assets:()=>r,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"v1005/analytics/apic_config","title":"apic config","description":"Manage configuration variables","source":"@site/docs/v1005/analytics/apic_config.md","sourceDirName":"v1005/analytics","slug":"/v1005/analytics/apic_config","permalink":"/clidocs/docs/v1005/analytics/apic_config","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/analytics/apic_config.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic clustermgmt:splitIndex","permalink":"/clidocs/docs/v1005/analytics/apic_clustermgmt_splitIndex"},"next":{"title":"apic config:clear","permalink":"/clidocs/docs/v1005/analytics/apic_config_clear"}}');var c=i(74848),o=i(28453);const a={},s="apic config",r={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(n){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(e.header,{children:(0,c.jsx)(e.h1,{id:"apic-config",children:"apic config"})}),"\n",(0,c.jsx)(e.p,{children:"Manage configuration variables"}),"\n",(0,c.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,c.jsx)(e.p,{children:"Manage configuration variables"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{children:"apic config --mode analytics [flags]\n"})}),"\n",(0,c.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{children:"  -g, --global   list the global configuration variables\n  -h, --help     Help for config\n  -l, --local    list the local application configuration variables\n"})}),"\n",(0,c.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,c.jsx)(e.pre,{children:(0,c.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(n={}){const{wrapper:e}={...(0,o.R)(),...n.components};return e?(0,c.jsx)(e,{...n,children:(0,c.jsx)(d,{...n})}):d(n)}}}]);