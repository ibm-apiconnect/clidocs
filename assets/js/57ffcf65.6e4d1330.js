"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[62731],{16130:(n,c,i)=>{i.r(c),i.d(c,{assets:()=>r,contentTitle:()=>t,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var e=i(74848),o=i(28453);const s={tags:["group: configsync"]},t="apic configsync",a={id:"v1008/analytics/configsync/apic_configsync",title:"apic configsync",description:"Configsync operations",source:"@site/docs/v1008/analytics/configsync/apic_configsync.md",sourceDirName:"v1008/analytics/configsync",slug:"/v1008/analytics/configsync/apic_configsync",permalink:"/clidocs/docs/v1008/analytics/configsync/apic_configsync",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/analytics/configsync/apic_configsync.md",tags:[{inline:!0,label:"group: configsync",permalink:"/clidocs/docs/tags/group-configsync"}],version:"current",frontMatter:{tags:["group: configsync"]},sidebar:"tutorialSidebar",previous:{title:"apic config:set",permalink:"/clidocs/docs/v1008/analytics/config/apic_config_set"},next:{title:"apic configsync:uploadData",permalink:"/clidocs/docs/v1008/analytics/configsync/apic_configsync_uploadData"}},r={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(n){const c={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...n.components};return(0,e.jsxs)(e.Fragment,{children:[(0,e.jsx)(c.header,{children:(0,e.jsx)(c.h1,{id:"apic-configsync",children:"apic configsync"})}),"\n",(0,e.jsx)(c.p,{children:"Configsync operations"}),"\n",(0,e.jsx)(c.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,e.jsx)(c.p,{children:"Configsync operations"}),"\n",(0,e.jsx)(c.pre,{children:(0,e.jsx)(c.code,{children:"apic configsync --mode analytics [flags]\n"})}),"\n",(0,e.jsx)(c.h2,{id:"options",children:"Options"}),"\n",(0,e.jsx)(c.pre,{children:(0,e.jsx)(c.code,{children:"  -h, --help   Help for configsync\n"})}),"\n",(0,e.jsx)(c.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,e.jsx)(c.pre,{children:(0,e.jsx)(c.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(n={}){const{wrapper:c}={...(0,o.R)(),...n.components};return c?(0,e.jsx)(c,{...n,children:(0,e.jsx)(p,{...n})}):p(n)}},28453:(n,c,i)=>{i.d(c,{R:()=>t,x:()=>a});var e=i(96540);const o={},s=e.createContext(o);function t(n){const c=e.useContext(s);return e.useMemo((function(){return"function"==typeof n?n(c):{...c,...n}}),[c,n])}function a(n){let c;return c=n.disableParentContext?"function"==typeof n.components?n.components(o):n.components||o:t(n.components),e.createElement(s.Provider,{value:c},n.children)}}}]);