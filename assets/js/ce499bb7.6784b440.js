"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[51538],{28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>o});var s=r(96540);const n={},i=s.createContext(n);function a(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),s.createElement(i.Provider,{value:t},e.children)}},97541:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"v1009/apim/drafts/apic_drafts_clear","title":"apic drafts:clear","description":"Clear the Draft objects","source":"@site/docs/v1009/apim/drafts/apic_drafts_clear.md","sourceDirName":"v1009/apim/drafts","slug":"/v1009/apim/drafts/apic_drafts_clear","permalink":"/clidocs/docs/v1009/apim/drafts/apic_drafts_clear","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/drafts/apic_drafts_clear.md","tags":[{"inline":true,"label":"group: drafts","permalink":"/clidocs/docs/tags/group-drafts"}],"version":"current","frontMatter":{"tags":["group: drafts"]},"sidebar":"tutorialSidebar","previous":{"title":"apic drafts","permalink":"/clidocs/docs/v1009/apim/drafts/apic_drafts"},"next":{"title":"apic drafts:list","permalink":"/clidocs/docs/v1009/apim/drafts/apic_drafts_list"}}');var n=r(74848),i=r(28453);const a={tags:["group: drafts"]},o="apic drafts",c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"apic-drafts",children:["apic drafts",":clear"]})}),"\n",(0,n.jsx)(t.p,{children:"Clear the Draft objects"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Clear the Draft objects"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic drafts:clear [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic drafts:clear [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --confirm string   Confirmation for critical updates (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);