"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[60196],{70212:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>m,contentTitle:()=>i,default:()=>p,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var s=t(74848),r=t(28453);const o={},i="apic members",c={id:"v1005/consumer/apic_members_get",title:"apic members:get",description:"Members get operations",source:"@site/docs/v1005/consumer/apic_members_get.md",sourceDirName:"v1005/consumer",slug:"/v1005/consumer/apic_members_get",permalink:"/clidocs/docs/v1005/consumer/apic_members_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/consumer/apic_members_get.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic members:delete",permalink:"/clidocs/docs/v1005/consumer/apic_members_delete"},next:{title:"apic members:list",permalink:"/clidocs/docs/v1005/consumer/apic_members_list"}},m={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(n.h1,{id:"apic-members",children:["apic members",":get"]}),"\n",(0,s.jsx)(n.p,{children:"Members get operations"}),"\n",(0,s.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(n.p,{children:"Members get operations"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"apic members:get --mode consumer [flags]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"      --fields string   field name\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for members:get\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --scope string    scope\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>c});var s=t(96540);const r={},o=s.createContext(r);function i(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);