"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[902760],{28453:(e,s,o)=>{o.d(s,{R:()=>p,x:()=>n});var r=o(296540);const a={},i=r.createContext(a);function p(e){const s=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function n(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:p(e.components),r.createElement(i.Provider,{value:s},e.children)}},985983:(e,s,o)=>{o.r(s),o.d(s,{assets:()=>t,contentTitle:()=>n,default:()=>d,frontMatter:()=>p,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"v1008/apim/roles/apic_roles_update","title":"apic roles:update","description":"Roles update operations","source":"@site/docs/v1008/apim/roles/apic_roles_update.md","sourceDirName":"v1008/apim/roles","slug":"/v1008/apim/roles/apic_roles_update","permalink":"/clidocs/docs/v1008/apim/roles/apic_roles_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/roles/apic_roles_update.md","tags":[{"inline":true,"label":"group: roles","permalink":"/clidocs/docs/tags/group-roles"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: org","permalink":"/clidocs/docs/tags/scope-org"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: roles","scope: catalog","scope: org","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic roles:list","permalink":"/clidocs/docs/v1008/apim/roles/apic_roles_list"},"next":{"title":"apic services","permalink":"/clidocs/docs/v1008/apim/services/apic_services"}}');var a=o(474848),i=o(28453);const p={tags:["group: roles","scope: catalog","scope: org","scope: space"]},n="apic roles",t={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"Example of role update at catalog scope.",id:"example-of-role-update-at-catalog-scope",level:4},{value:"Example of role update at org scope.",id:"example-of-role-update-at-org-scope",level:4},{value:"Example of role update at space scope.",id:"example-of-role-update-at-space-scope",level:4},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const s={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsxs)(s.h1,{id:"apic-roles",children:["apic roles",":update"]})}),"\n",(0,a.jsx)(s.p,{children:"Roles update operations"}),"\n",(0,a.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(s.p,{children:"Roles update operations"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"apic roles:update [flags]\n"})}),"\n",(0,a.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"apic roles:update [flags] --scope space ROLE ROLE_FILE\napic roles:update [flags] --scope org ROLE ROLE_FILE\napic roles:update [flags] --scope catalog ROLE ROLE_FILE\n"})}),"\n",(0,a.jsx)(s.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h4,{id:"example-of-role-update-at-catalog-scope",children:"Example of role update at catalog scope."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"external_group_mapping:\n  ldap_groups:\n  - cn=CloudAdmins,ou=groups,dc=apic,dc=com\n  user_group_filter_prefix: (&(uniquemember=\n  user_group_filter_suffix: )(objectClass=groupOfUniqueNames))\n  user_registry_url: https://acme-apim.example.com/api/user-registries/org1/user-registry-1\npermission_urls:\n- https://acme-apim.example.com/api/cloud/permissions/org/member:view\n- https://acme-apim.example.com/api/cloud/permissions/org/member:manage\nsummary: An example role update\ntitle: Acme role update\n"})}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h4,{id:"example-of-role-update-at-org-scope",children:"Example of role update at org scope."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"external_group_mapping:\n  ldap_groups:\n  - cn=CloudAdmins,ou=groups,dc=apic,dc=com\n  user_group_filter_prefix: (&(uniquemember=\n  user_group_filter_suffix: )(objectClass=groupOfUniqueNames))\n  user_registry_url: https://acme-apim.example.com/api/user-registries/org1/user-registry-1\npermission_urls:\n- https://acme-apim.example.com/api/cloud/permissions/cloud/analytics:view\n- https://acme-apim.example.com/api/cloud/permissions/org/member:view\n- https://acme-apim.example.com/api/cloud/permissions/org/member:manage\nsummary: An example role update\ntitle: Acme role update\n"})}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h4,{id:"example-of-role-update-at-space-scope",children:"Example of role update at space scope."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"external_group_mapping:\n  ldap_groups:\n  - cn=CloudAdmins,ou=groups,dc=apic,dc=com\n  user_group_filter_prefix: (&(uniquemember=\n  user_group_filter_suffix: )(objectClass=groupOfUniqueNames))\n  user_registry_url: https://acme-apim.example.com/api/user-registries/org1/user-registry-1\npermission_urls:\n- https://acme-apim.example.com/api/cloud/permissions/org/member:view\n- https://acme-apim.example.com/api/cloud/permissions/org/member:manage\nsummary: An example role update\ntitle: Acme role update\n"})}),"\n",(0,a.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for roles:update\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n      --space string     Space name or id (required)\n'})}),"\n",(0,a.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);