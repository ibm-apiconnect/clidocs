"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[937067],{28453:(e,n,i)=>{i.d(n,{R:()=>r,x:()=>s});var t=i(296540);const o={},a=t.createContext(o);function r(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function s(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(a.Provider,{value:n},e.children)}},711715:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"v10010/portaladmin/drupal-config/apic_drupal-config_set","title":"apic drupal-config:set","description":"Set a config value.","source":"@site/docs/v10010/portaladmin/drupal-config/apic_drupal-config_set.md","sourceDirName":"v10010/portaladmin/drupal-config","slug":"/v10010/portaladmin/drupal-config/apic_drupal-config_set","permalink":"/clidocs/docs/v10010/portaladmin/drupal-config/apic_drupal-config_set","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/portaladmin/drupal-config/apic_drupal-config_set.md","tags":[{"inline":true,"label":"group: drupal-config","permalink":"/clidocs/docs/tags/group-drupal-config"}],"version":"current","frontMatter":{"tags":["group: drupal-config"]},"sidebar":"tutorialSidebar","previous":{"title":"apic drupal-config:list","permalink":"/clidocs/docs/v10010/portaladmin/drupal-config/apic_drupal-config_list"},"next":{"title":"apic drupal-state","permalink":"/clidocs/docs/v10010/portaladmin/drupal-state/apic_drupal-state"}}');var o=i(474848),a=i(28453);const r={tags:["group: drupal-config"]},s="apic drupal-config",l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"apic-drupal-config",children:["apic drupal-config",":set"]})}),"\n",(0,o.jsx)(n.p,{children:"Set a config value."}),"\n",(0,o.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(n.p,{children:"Can set a new config value or update an already existing key-value."}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"apic drupal-config:set --mode portaladmin [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"apic drupal-config:set --mode portaladmin [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'  -c, --catalog string        Name or ID of the Catalog that the site belongs to. (required)\n      --config_key string     A config key, for example "page.front". (required)\n      --config_name string    The config object name, for example "system.site". (required)\n      --config_value string   The value to assign to the config key. (required)\n      --format string         Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --input_format string   The input format of the value for the config key. Values: string, yaml. Since JSON is a subset of YAML, config_value may be in JSON format [default: string] (required) (default "string")\n  -o, --org string            Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string         management server endpoint (required)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);