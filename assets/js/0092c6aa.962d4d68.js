"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[634907],{28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>c});var i=n(296540);const o={},r=i.createContext(o);function s(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),i.createElement(r.Provider,{value:t},e.children)}},300121:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>s,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"v1005/apim/apic_products_get","title":"apic products:get","description":"Products get operations","source":"@site/docs/v1005/apim/apic_products_get.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_products_get","permalink":"/clidocs/docs/v1005/apim/apic_products_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_products_get.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic products:execute-migration-target","permalink":"/clidocs/docs/v1005/apim/apic_products_execute-migration-target"},"next":{"title":"apic products:list-all","permalink":"/clidocs/docs/v1005/apim/apic_products_list-all"}}');var o=n(474848),r=n(28453);const s={},c="apic products",a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsxs)(t.h1,{id:"apic-products",children:["apic products",":get"]})}),"\n",(0,o.jsx)(t.p,{children:"Products get operations"}),"\n",(0,o.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(t.p,{children:"Products get operations"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"apic products:get [flags]\n"})}),"\n",(0,o.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return (default "add(catalog_product)")\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for products:get\n      --id               id\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n      --space string     Space name or id (required)\n'})}),"\n",(0,o.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);