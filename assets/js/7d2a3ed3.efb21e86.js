"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[1774],{2600:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>t,metadata:()=>c,toc:()=>l});var n=i(74848),r=i(28453);const t={},o="apic users",c={id:"v1008/apim/apic_users_clear",title:"apic users:clear",description:"Clear the User objects",source:"@site/docs/v1008/apim/apic_users_clear.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_users_clear",permalink:"/clidocs/docs/v1008/apim/apic_users_clear",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_users_clear.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic users",permalink:"/clidocs/docs/v1008/apim/apic_users"},next:{title:"apic users:create",permalink:"/clidocs/docs/v1008/apim/apic_users_create"}},a={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(s.h1,{id:"apic-users",children:["apic users",":clear"]}),"\n",(0,n.jsx)(s.p,{children:"Clear the User objects"}),"\n",(0,n.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(s.p,{children:"Clear the User objects"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"apic users:clear [flags]\n"})}),"\n",(0,n.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"      apic users:clear [flags]\n"})}),"\n",(0,n.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'      --confirm string         Confirmation for critical updates (required)\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string             Organization name or id (required)\n      --output string          Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string          management server endpoint (required)\n      --user-registry string   User Registry name or id (required)\n'})}),"\n",(0,n.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:s}={...(0,r.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,s,i)=>{i.d(s,{R:()=>o,x:()=>c});var n=i(96540);const r={},t=n.createContext(r);function o(e){const s=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(t.Provider,{value:s},e.children)}}}]);