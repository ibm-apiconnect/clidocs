"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[58971],{35986:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var a=n(74848),t=n(28453);const s={},o="apic apis",r={id:"v1008/apim/apic_apis_validate",title:"apic apis:validate",description:"Validate the API object",source:"@site/docs/v1008/apim/apic_apis_validate.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_apis_validate",permalink:"/clidocs/docs/v1008/apim/apic_apis_validate",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_apis_validate.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic apis:update",permalink:"/clidocs/docs/v1008/apim/apic_apis_update"},next:{title:"apic apis:wsdl",permalink:"/clidocs/docs/v1008/apim/apic_apis_wsdl"}},c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsxs)(i.h1,{id:"apic-apis",children:["apic apis",":validate"]})}),"\n",(0,a.jsx)(i.p,{children:"Validate the API object"}),"\n",(0,a.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(i.p,{children:"Validate the API object"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"apic apis:validate [flags]\n"})}),"\n",(0,a.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"      apic apis:validate [flags] DRAFT_API_FILE\n"})}),"\n",(0,a.jsx)(i.h2,{id:"examples",children:"Examples"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"Online API definition validation\n  $ apic apis:validate --org <provider-org-name-or-id> --server mgmnthost.com myapi.yaml\n"})}),"\n",(0,a.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:'      --catalog_name string            Name of a catalog\n      --format string                  Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --gateway_service_names string   Names of Gateway Services\n  -o, --org string                     Organization name or id (required)\n      --output string                  Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                   scope\n  -s, --server string                  management server endpoint (required)\n      --space_name string              Name of a space\n'})}),"\n",(0,a.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>r});var a=n(96540);const t={},s=a.createContext(t);function o(e){const i=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),a.createElement(s.Provider,{value:i},e.children)}}}]);