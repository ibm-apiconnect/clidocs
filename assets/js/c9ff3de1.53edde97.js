"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[261472],{28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>d});var i=t(296540);const a={},s=i.createContext(a);function o(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(s.Provider,{value:n},e.children)}},973645:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>r,contentTitle:()=>d,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"v10010/engagement/destinations/apic_destinations_catalogUpdate","title":"apic destinations:catalogUpdate","description":"Update an engagement destination","source":"@site/docs/v10010/engagement/destinations/apic_destinations_catalogUpdate.md","sourceDirName":"v10010/engagement/destinations","slug":"/v10010/engagement/destinations/apic_destinations_catalogUpdate","permalink":"/clidocs/docs/v10010/engagement/destinations/apic_destinations_catalogUpdate","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/engagement/destinations/apic_destinations_catalogUpdate.md","tags":[{"inline":true,"label":"group: destinations","permalink":"/clidocs/docs/tags/group-destinations"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"}],"version":"current","frontMatter":{"tags":["group: destinations","scope: catalog"]},"sidebar":"tutorialSidebar","previous":{"title":"apic destinations:catalogTest","permalink":"/clidocs/docs/v10010/engagement/destinations/apic_destinations_catalogTest"},"next":{"title":"apic destinations:orgCreate","permalink":"/clidocs/docs/v10010/engagement/destinations/apic_destinations_orgCreate"}}');var a=t(474848),s=t(28453);const o={tags:["group: destinations","scope: catalog"]},d="apic destinations",r={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"Update destination",id:"update-destination",level:4},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(n.header,{children:(0,a.jsxs)(n.h1,{id:"apic-destinations",children:["apic destinations",":catalogUpdate"]})}),"\n",(0,a.jsx)(n.p,{children:"Update an engagement destination"}),"\n",(0,a.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(n.p,{children:"Updates a single engagement destination."}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"apic destinations:catalogUpdate --mode engagement [flags]\n"})}),"\n",(0,a.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"apic destinations:catalogUpdate --mode engagement [flags] ID DESTINATION_FILE\n"})}),"\n",(0,a.jsx)(n.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.h4,{id:"update-destination",children:"Update destination"}),"\n",(0,a.jsx)(n.hr,{}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:"config_type: webhook\ndescription: the description of the target destination\nid: c941e2ad-3650-472f-a022-07d6fe5ab9b5\nis_enabled: true\ntitle: My custom server\nwebhook:\n  header_params:\n    Content-Type: application/json\n    my-header: abcd\n  method: POST\n  target: https://custom.server.example.com\n"})}),"\n",(0,a.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n  -c, --catalog string             Catalog name or ID. (required)\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string                 Provider organization name or ID. (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,a.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(n.pre,{children:(0,a.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,a.jsx)(n,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);