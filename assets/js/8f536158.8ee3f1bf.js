"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[47629],{28453:(e,n,s)=>{s.d(n,{R:()=>l,x:()=>o});var t=s(96540);const i={},r=t.createContext(i);function l(e){const n=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:l(e.components),t.createElement(r.Provider,{value:n},e.children)}},66940:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"v1008/governance/rules/apic_rules_list-all","title":"apic rules:list-all","description":"List information about all Rules of a Ruleset","source":"@site/docs/v1008/governance/rules/apic_rules_list-all.md","sourceDirName":"v1008/governance/rules","slug":"/v1008/governance/rules/apic_rules_list-all","permalink":"/clidocs/docs/v1008/governance/rules/apic_rules_list-all","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/governance/rules/apic_rules_list-all.md","tags":[{"inline":true,"label":"group: rules","permalink":"/clidocs/docs/tags/group-rules"}],"version":"current","frontMatter":{"tags":["group: rules"]},"sidebar":"tutorialSidebar","previous":{"title":"apic rules:get","permalink":"/clidocs/docs/v1008/governance/rules/apic_rules_get"},"next":{"title":"apic rules:list","permalink":"/clidocs/docs/v1008/governance/rules/apic_rules_list"}}');var i=s(74848),r=s(28453);const l={tags:["group: rules"]},o="apic rules",a={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"apic-rules",children:["apic rules",":list-all"]})}),"\n",(0,i.jsx)(n.p,{children:"List information about all Rules of a Ruleset"}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"To list all Rules of a global ruleset, you must be logged in as an Admin Organisation owner. To list all Rules of a custom ruleset, you must be logged in as a Provider Organisation owner."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic rules:list-all --mode governance [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic rules:list-all --mode governance [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --fields string            List of field names to return\n      --format string            Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --limit int32              Maximum number of items to return\n      --offset int32             Offset item number from list to begin return\n  -o, --org string               Organization name or id (required)\n      --output string            Write file(s) to directory, instead of STDOUT (default "-")\n      --ruleset string           Ruleset name or id (required)\n      --ruleset_version string   Specify an explicit Ruleset version\n  -s, --server string            management server endpoint (required)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);