"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[40517],{84996:(t,i,e)=>{e.r(i),e.d(i,{assets:()=>r,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>c,toc:()=>p});var n=e(74848),o=e(28453);const a={},s="apic activations",c={id:"v1005/apim/apic_activations",title:"apic activations",description:"Activations operations",source:"@site/docs/v1005/apim/apic_activations.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_activations",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_activations",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_activations.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic"},next:{title:"apic activations:clear",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_activations_clear"}},r={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(t){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.h1,{id:"apic-activations",children:"apic activations"}),"\n",(0,n.jsx)(i.p,{children:"Activations operations"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Activations operations"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic activations [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for activations\n      --limit int32      Maximum number of items to return\n      --offset int32     Offset item number from list to begin return\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(t={}){const{wrapper:i}={...(0,o.R)(),...t.components};return i?(0,n.jsx)(i,{...t,children:(0,n.jsx)(d,{...t})}):d(t)}},28453:(t,i,e)=>{e.d(i,{R:()=>s,x:()=>c});var n=e(96540);const o={},a=n.createContext(o);function s(t){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof t?t(i):{...i,...t}}),[i,t])}function c(t){let i;return i=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:s(t.components),n.createElement(a.Provider,{value:i},t.children)}}}]);