"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[59791],{92017:(o,e,l)=>{l.r(e),l.d(e,{assets:()=>r,contentTitle:()=>s,default:()=>d,frontMatter:()=>n,metadata:()=>c,toc:()=>t});var i=l(74848),p=l(28453);const n={tags:["group: global-policy-prehooks"]},s="apic global-policy-prehooks",c={id:"v1008/apim/global-policy-prehooks/apic_global-policy-prehooks",title:"apic global-policy-prehooks",description:"Global Policy Prehooks operations",source:"@site/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks.md",sourceDirName:"v1008/apim/global-policy-prehooks",slug:"/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks",permalink:"/clidocs/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks.md",tags:[{inline:!0,label:"group: global-policy-prehooks",permalink:"/clidocs/docs/tags/group-global-policy-prehooks"}],version:"current",frontMatter:{tags:["group: global-policy-prehooks"]},sidebar:"tutorialSidebar",previous:{title:"apic global-policy-posthooks:update",permalink:"/clidocs/docs/v1008/apim/global-policy-posthooks/apic_global-policy-posthooks_update"},next:{title:"apic global-policy-prehooks:create",permalink:"/clidocs/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_create"}},r={},t=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function a(o){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,p.R)(),...o.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"apic-global-policy-prehooks",children:"apic global-policy-prehooks"})}),"\n",(0,i.jsx)(e.p,{children:"Global Policy Prehooks operations"}),"\n",(0,i.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(e.p,{children:"Global Policy Prehooks operations"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"apic global-policy-prehooks [flags]\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"  -h, --help   Help for global-policy-prehooks\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(o={}){const{wrapper:e}={...(0,p.R)(),...o.components};return e?(0,i.jsx)(e,{...o,children:(0,i.jsx)(a,{...o})}):a(o)}},28453:(o,e,l)=>{l.d(e,{R:()=>s,x:()=>c});var i=l(96540);const p={},n=i.createContext(p);function s(o){const e=i.useContext(n);return i.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function c(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(p):o.components||p:s(o.components),i.createElement(n.Provider,{value:e},o.children)}}}]);