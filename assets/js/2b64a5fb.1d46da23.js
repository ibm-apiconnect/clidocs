"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[675283],{28453:(e,s,n)=>{n.d(s,{R:()=>o,x:()=>c});var t=n(296540);const r={},i=t.createContext(r);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),t.createElement(i.Provider,{value:s},e.children)}},843856:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"v1009/apim/subscriber-events/apic_subscriber-events","title":"apic subscriber-events","description":"Subscriber Events operations","source":"@site/docs/v1009/apim/subscriber-events/apic_subscriber-events.md","sourceDirName":"v1009/apim/subscriber-events","slug":"/v1009/apim/subscriber-events/apic_subscriber-events","permalink":"/clidocs/docs/v1009/apim/subscriber-events/apic_subscriber-events","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/subscriber-events/apic_subscriber-events.md","tags":[{"inline":true,"label":"group: subscriber-events","permalink":"/clidocs/docs/tags/group-subscriber-events"}],"version":"current","frontMatter":{"tags":["group: subscriber-events"]},"sidebar":"tutorialSidebar","previous":{"title":"apic spaces:update","permalink":"/clidocs/docs/v1009/apim/spaces/apic_spaces_update"},"next":{"title":"apic subscriber-events:get","permalink":"/clidocs/docs/v1009/apim/subscriber-events/apic_subscriber-events_get"}}');var r=n(474848),i=n(28453);const o={tags:["group: subscriber-events"]},c="apic subscriber-events",a={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function u(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsx)(s.h1,{id:"apic-subscriber-events",children:"apic subscriber-events"})}),"\n",(0,r.jsx)(s.p,{children:"Subscriber Events operations"}),"\n",(0,r.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(s.p,{children:"Subscriber Events operations"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"apic subscriber-events [flags]\n"})}),"\n",(0,r.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for subscriber-events\n      --limit int32      Maximum number of items to return\n      --offset int32     Offset item number from list to begin return\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n      --state string     State for a webhook event in subscriber queue\n      --webhook string   Webhook name or id (required)\n'})}),"\n",(0,r.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(u,{...e})}):u(e)}}}]);