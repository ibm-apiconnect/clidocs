"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[8335],{20342:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>c});var n=a(74848),i=a(28453);const o={},d="apic api",r={id:"v1008/portaladmin/apic_api_add-attachment",title:"apic api:add-attachment",description:"Add an attachment for the given api.",source:"@site/docs/v1008/portaladmin/apic_api_add-attachment.md",sourceDirName:"v1008/portaladmin",slug:"/v1008/portaladmin/apic_api_add-attachment",permalink:"/clidocs/docs/v1008/portaladmin/apic_api_add-attachment",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/apic_api_add-attachment.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic api",permalink:"/clidocs/docs/v1008/portaladmin/apic_api"},next:{title:"apic api:add-tag",permalink:"/clidocs/docs/v1008/portaladmin/apic_api_add-tag"}},s={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"apic-api",children:["apic api",":add-attachment"]})}),"\n",(0,n.jsx)(t.p,{children:"Add an attachment for the given api."}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsxs)(t.p,{children:["Add an attachment for a api within the developer portal of the provided org and catalog. A api can hold 10 attachments. The id or name",":version"," of a specific api needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'."]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic api:add-attachment --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"      apic api:add-attachment --mode portaladmin [flags] API API_FILE\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"      --attachment_description string   A description of the attachment to be displayed to users.\n      --attachment_name string          The name given to the attachment once it has been uploaded e.g. my-file.txt (required)\n  -c, --catalog string                  Name or ID of the Catalog that the site belongs to. (required)\n      --format string                   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string                      Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string                   management server endpoint (required)\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,a)=>{a.d(t,{R:()=>d,x:()=>r});var n=a(96540);const i={},o=n.createContext(i);function d(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:d(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);