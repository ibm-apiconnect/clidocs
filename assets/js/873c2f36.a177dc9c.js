"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[97665],{55361:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var r=o(74848),n=o(28453);const i={},s="apic user",a={id:"v1005/portaladmin/apic_user_information",title:"apic user:information",description:"Gets Developer Portal Drupal User information",source:"@site/docs/v1005/portaladmin/apic_user_information.md",sourceDirName:"v1005/portaladmin",slug:"/v1005/portaladmin/apic_user_information",permalink:"/clidocs/docs/v1005/portaladmin/apic_user_information",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_user_information.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic user:block",permalink:"/clidocs/docs/v1005/portaladmin/apic_user_block"},next:{title:"apic user:remove-role",permalink:"/clidocs/docs/v1005/portaladmin/apic_user_remove-role"}},l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"apic-user",children:["apic user",":information"]})}),"\n",(0,r.jsx)(t.p,{children:"Gets Developer Portal Drupal User information"}),"\n",(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"Gets Developer Portal Drupal User information. You can filter on different fields to obtain a list of users matching your criteria."}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic user:information --mode portaladmin [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"      --apic-state string     A comma-separated list of APIC states to filter Drupal Users by.\n  -c, --catalog string        Name or ID of the Catalog that the site belongs to. (required)\n      --consumer-org string   A comma-separated list of Consumer Org URLs to filter the return by.\n      --format string         Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                  Help for user:information\n      --limit int32           Limit the amount of results returned.\n      --login-after string    A date to filter Drupal Users who last logged in after the provided date. Date needs to be given in format of MM-DD-YYY or MM-DD-YY HH:MM:SS\n      --login-before string   A date to filter Drupal Users who last logged in before the provided date. Date needs to be given in format of MM-DD-YYY or MM-DD-YY HH:MM:SS\n      --mail string           A comma-separated list of Drupal User Email addresses to perform the action on.\n      --names string          A comma-separated list of names of Drupal Users to perform the action on.\n      --offset int32          Offset the results return to aid in Pagination.\n  -o, --org string            Name or ID of the organization that the catalog belongs to. (required)\n      --role string           A comma-separated list of Drupal User Roles.\n  -s, --server string         management server endpoint (required)\n      --status string         Filter by Drupal User status. Choices are 'active' or 'blocked'.\n      --uid string            A comma-separated list of UIDs of Drupal Users to perform the action on.\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>a});var r=o(96540);const n={},i=r.createContext(n);function s(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);