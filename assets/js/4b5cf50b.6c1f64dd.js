"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[11896],{28453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>a});var t=i(96540);const o={},n=t.createContext(o);function r(e){const s=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(n.Provider,{value:s},e.children)}},73134:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>t,toc:()=>l});const t=JSON.parse('{"id":"v1009/apim/task-histories/apic_task-histories_list","title":"apic task-histories:list","description":"Task Histories list operations","source":"@site/docs/v1009/apim/task-histories/apic_task-histories_list.md","sourceDirName":"v1009/apim/task-histories","slug":"/v1009/apim/task-histories/apic_task-histories_list","permalink":"/clidocs/docs/v1009/apim/task-histories/apic_task-histories_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/task-histories/apic_task-histories_list.md","tags":[{"inline":true,"label":"group: task-histories","permalink":"/clidocs/docs/tags/group-task-histories"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: task-histories","scope: catalog","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic task-histories:get","permalink":"/clidocs/docs/v1009/apim/task-histories/apic_task-histories_get"},"next":{"title":"apic task-queues","permalink":"/clidocs/docs/v1009/apim/task-queues/apic_task-queues"}}');var o=i(74848),n=i(28453);const r={tags:["group: task-histories","scope: catalog","scope: space"]},a="apic task-histories",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(s.header,{children:(0,o.jsxs)(s.h1,{id:"apic-task-histories",children:["apic task-histories",":list"]})}),"\n",(0,o.jsx)(s.p,{children:"Task Histories list operations"}),"\n",(0,o.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(s.p,{children:"Task Histories list operations"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"apic task-histories:list [flags]\n"})}),"\n",(0,o.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:"apic task-histories:list [flags] --scope space\napic task-histories:list [flags] --scope catalog\n"})}),"\n",(0,o.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for task-histories:list\n      --limit int32      Maximum number of items to return\n      --offset int32     Offset item number from list to begin return\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --query string     Add query to request\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n      --space string     Space name or id (required)\n'})}),"\n",(0,o.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(s.pre,{children:(0,o.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:s}={...(0,n.R)(),...e.components};return s?(0,o.jsx)(s,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);