"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[21922],{22441:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var n=o(74848),i=o(28453);const s={},a="apic modules",r={id:"v1005/portaladmin/apic_modules_list",title:"apic modules:list",description:"Shows a list of available modules.",source:"@site/docs/v1005/portaladmin/apic_modules_list.md",sourceDirName:"v1005/portaladmin",slug:"/v1005/portaladmin/apic_modules_list",permalink:"/clidocs/docs/v1005/portaladmin/apic_modules_list",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_modules_list.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic modules:enable",permalink:"/clidocs/docs/v1005/portaladmin/apic_modules_enable"},next:{title:"apic php-memory",permalink:"/clidocs/docs/v1005/portaladmin/apic_php-memory"}},l={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h1,{id:"apic-modules",children:["apic modules",":list"]}),"\n",(0,n.jsx)(t.p,{children:"Shows a list of available modules."}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Show a list of modules for the portal of the provided org and catalog."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic modules:list --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --core             Filter out extensions that are not in Drupal Core.\n      --custom           Filter to only custom modules or themes\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for modules:list\n      --no-core          Filter out extensions that are provided by Drupal Core.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n      --package string   Filter by project packages. You can use multiple comma-separated values.\n  -s, --server string    management server endpoint (required)\n      --status string    Filter by extension status. Choices _ enabled, disabled and/or 'not installed'. You can use multiple comma-separated values.\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>r});var n=o(96540);const i={},s=n.createContext(i);function a(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);