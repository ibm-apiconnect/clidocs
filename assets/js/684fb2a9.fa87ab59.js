"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[38697],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var i=s(96540);const a={},n=i.createContext(a);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:o(e.components),i.createElement(n.Provider,{value:t},e.children)}},84233:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"v1008/apim/catalogs/apic_catalogs_list","title":"apic catalogs:list","description":"List the Catalog objects","source":"@site/docs/v1008/apim/catalogs/apic_catalogs_list.md","sourceDirName":"v1008/apim/catalogs","slug":"/v1008/apim/catalogs/apic_catalogs_list","permalink":"/clidocs/docs/v1008/apim/catalogs/apic_catalogs_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/catalogs/apic_catalogs_list.md","tags":[{"inline":true,"label":"group: catalogs","permalink":"/clidocs/docs/tags/group-catalogs"}],"version":"current","frontMatter":{"tags":["group: catalogs"]},"sidebar":"tutorialSidebar","previous":{"title":"apic catalogs:get","permalink":"/clidocs/docs/v1008/apim/catalogs/apic_catalogs_get"},"next":{"title":"apic catalogs:transfer-owner","permalink":"/clidocs/docs/v1008/apim/catalogs/apic_catalogs_transfer-owner"}}');var a=s(74848),n=s(28453);const o={tags:["group: catalogs"]},c="apic catalogs",r={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsxs)(t.h1,{id:"apic-catalogs",children:["apic catalogs",":list"]})}),"\n",(0,a.jsx)(t.p,{children:"List the Catalog objects"}),"\n",(0,a.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(t.p,{children:"List the Catalog objects"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"apic catalogs:list [flags]\n"})}),"\n",(0,a.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"apic catalogs:list [flags] --my\napic catalogs:list [flags]\n"})}),"\n",(0,a.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --limit int32     Maximum number of items to return\n      --offset int32    Offset item number from list to begin return\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}}}]);