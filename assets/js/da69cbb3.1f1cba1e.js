"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[775375],{28453:(e,o,n)=>{n.d(o,{R:()=>r,x:()=>a});var i=n(296540);const s={},t=i.createContext(s);function r(e){const o=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(t.Provider,{value:o},e.children)}},394323:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"v1009/apim/jobs/apic_jobs_clear","title":"apic jobs:clear","description":"Clear the Job objects","source":"@site/docs/v1009/apim/jobs/apic_jobs_clear.md","sourceDirName":"v1009/apim/jobs","slug":"/v1009/apim/jobs/apic_jobs_clear","permalink":"/clidocs/docs/v1009/apim/jobs/apic_jobs_clear","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/jobs/apic_jobs_clear.md","tags":[{"inline":true,"label":"group: jobs","permalink":"/clidocs/docs/tags/group-jobs"}],"version":"current","frontMatter":{"tags":["group: jobs"]},"sidebar":"tutorialSidebar","previous":{"title":"apic jobs","permalink":"/clidocs/docs/v1009/apim/jobs/apic_jobs"},"next":{"title":"apic jobs:delete","permalink":"/clidocs/docs/v1009/apim/jobs/apic_jobs_delete"}}');var s=n(474848),t=n(28453);const r={tags:["group: jobs"]},a="apic jobs",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsxs)(o.h1,{id:"apic-jobs",children:["apic jobs",":clear"]})}),"\n",(0,s.jsx)(o.p,{children:"Clear the Job objects"}),"\n",(0,s.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(o.p,{children:"Clear the Job objects"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"apic jobs:clear [flags]\n"})}),"\n",(0,s.jsx)(o.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"apic jobs:clear [flags]\n"})}),"\n",(0,s.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'      --billing string   Billing name or id (required)\n      --confirm string   Confirmation for critical updates (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,s.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);