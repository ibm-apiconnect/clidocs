"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[50417],{28453:(e,i,s)=>{s.d(i,{R:()=>t,x:()=>a});var r=s(96540);const n={},c=r.createContext(n);function t(e){const i=r.useContext(c);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),r.createElement(c.Provider,{value:i},e.children)}},49004:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>o,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"v1008/apim/services/apic_services_clear-all","title":"apic services:clear-all","description":"Services clear-all operations","source":"@site/docs/v1008/apim/services/apic_services_clear-all.md","sourceDirName":"v1008/apim/services","slug":"/v1008/apim/services/apic_services_clear-all","permalink":"/clidocs/docs/v1008/apim/services/apic_services_clear-all","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/services/apic_services_clear-all.md","tags":[{"inline":true,"label":"group: services","permalink":"/clidocs/docs/tags/group-services"}],"version":"current","frontMatter":{"tags":["group: services"]},"sidebar":"tutorialSidebar","previous":{"title":"apic services","permalink":"/clidocs/docs/v1008/apim/services/apic_services"},"next":{"title":"apic services:clear","permalink":"/clidocs/docs/v1008/apim/services/apic_services_clear"}}');var n=s(74848),c=s(28453);const t={tags:["group: services"]},a="apic services",o={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsxs)(i.h1,{id:"apic-services",children:["apic services",":clear-all"]})}),"\n",(0,n.jsx)(i.p,{children:"Services clear-all operations"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Services clear-all operations"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic services:clear-all [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"\n      apic services:clear-all [flags] --space-initiated\n\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --confirm string                      Confirmation for critical updates (required)\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for services:clear-all\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n      --space-initiated                     space-initiated\n'})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,c.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);