"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[758211],{28453:(t,e,s)=>{s.d(e,{R:()=>r,x:()=>a});var i=s(296540);const o={},n=i.createContext(o);function r(t){const e=i.useContext(n);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),i.createElement(n.Provider,{value:e},t.children)}},564933:(t,e,s)=>{s.r(e),s.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"v1009/portaladmin/site/apic_site_get-import-status","title":"apic site:get-import-status","description":"Get the result of the site import task.","source":"@site/docs/v1009/portaladmin/site/apic_site_get-import-status.md","sourceDirName":"v1009/portaladmin/site","slug":"/v1009/portaladmin/site/apic_site_get-import-status","permalink":"/clidocs/docs/v1009/portaladmin/site/apic_site_get-import-status","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/portaladmin/site/apic_site_get-import-status.md","tags":[{"inline":true,"label":"group: site","permalink":"/clidocs/docs/tags/group-site"}],"version":"current","frontMatter":{"tags":["group: site"]},"sidebar":"tutorialSidebar","previous":{"title":"apic site:get-export","permalink":"/clidocs/docs/v1009/portaladmin/site/apic_site_get-export"},"next":{"title":"apic site:login-link","permalink":"/clidocs/docs/v1009/portaladmin/site/apic_site_login-link"}}');var o=s(474848),n=s(28453);const r={tags:["group: site"]},a="apic site",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsxs)(e.h1,{id:"apic-site",children:["apic site",":get-import-status"]})}),"\n",(0,o.jsx)(e.p,{children:"Get the result of the site import task."}),"\n",(0,o.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(e.p,{children:"Get the result of the site import task. If the import task has completed on the portal system, this command returns the result of the command. If the import task has not completed on the portal system, it returns the current status of the task."}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"apic site:get-import-status --mode portaladmin [flags]\n"})}),"\n",(0,o.jsx)(e.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"apic site:get-import-status --mode portaladmin [flags]\n"})}),"\n",(0,o.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n      --task_id string   ID of the task created on the queue. (required)\n"})}),"\n",(0,o.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(p,{...t})}):p(t)}}}]);