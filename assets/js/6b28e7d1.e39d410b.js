"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[19664],{28453:(i,e,t)=>{t.d(e,{R:()=>s,x:()=>p});var n=t(96540);const a={},o=n.createContext(a);function s(i){const e=n.useContext(o);return n.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function p(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(a):i.components||a:s(i.components),n.createElement(o.Provider,{value:e},i.children)}},33825:(i,e,t)=>{t.r(e),t.d(e,{assets:()=>l,contentTitle:()=>p,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"v1009/portaladmin/application/apic_application_list","title":"apic application:list","description":"Shows a list of applications from a site.","source":"@site/docs/v1009/portaladmin/application/apic_application_list.md","sourceDirName":"v1009/portaladmin/application","slug":"/v1009/portaladmin/application/apic_application_list","permalink":"/clidocs/docs/v1009/portaladmin/application/apic_application_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/portaladmin/application/apic_application_list.md","tags":[{"inline":true,"label":"group: application","permalink":"/clidocs/docs/tags/group-application"}],"version":"current","frontMatter":{"tags":["group: application"]},"sidebar":"tutorialSidebar","previous":{"title":"apic application:get","permalink":"/clidocs/docs/v1009/portaladmin/application/apic_application_get"},"next":{"title":"apic backups","permalink":"/clidocs/docs/v1009/portaladmin/backups/apic_backups"}}');var a=t(74848),o=t(28453);const s={tags:["group: application"]},p="apic application",l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function r(i){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...i.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsxs)(e.h1,{id:"apic-application",children:["apic application",":list"]})}),"\n",(0,a.jsx)(e.p,{children:"Shows a list of applications from a site."}),"\n",(0,a.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(e.p,{children:"Show a list of applications of the provided org and catalog."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"apic application:list --mode portaladmin [flags]\n"})}),"\n",(0,a.jsx)(e.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"apic application:list --mode portaladmin [flags]\n"})}),"\n",(0,a.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,a.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(i={}){const{wrapper:e}={...(0,o.R)(),...i.components};return e?(0,a.jsx)(e,{...i,children:(0,a.jsx)(r,{...i})}):r(i)}}}]);