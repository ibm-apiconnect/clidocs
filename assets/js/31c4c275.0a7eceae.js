"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[860117],{28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>r});var i=s(296540);const o={},t=i.createContext(o);function a(e){const n=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),i.createElement(t.Provider,{value:n},e.children)}},478878:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"v10010/apim/extensions/apic_extensions_clear","title":"apic extensions:clear","description":"Extensions clear operations","source":"@site/docs/v10010/apim/extensions/apic_extensions_clear.md","sourceDirName":"v10010/apim/extensions","slug":"/v10010/apim/extensions/apic_extensions_clear","permalink":"/clidocs/docs/v10010/apim/extensions/apic_extensions_clear","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/extensions/apic_extensions_clear.md","tags":[{"inline":true,"label":"group: extensions","permalink":"/clidocs/docs/tags/group-extensions"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: extensions","scope: catalog","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic extensions:clear-all","permalink":"/clidocs/docs/v10010/apim/extensions/apic_extensions_clear-all"},"next":{"title":"apic extensions:clone","permalink":"/clidocs/docs/v10010/apim/extensions/apic_extensions_clone"}}');var o=s(474848),t=s(28453);const a={tags:["group: extensions","scope: catalog","scope: space"]},r="apic extensions",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"apic-extensions",children:["apic extensions",":clear"]})}),"\n",(0,o.jsx)(n.p,{children:"Extensions clear operations"}),"\n",(0,o.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(n.p,{children:"Extensions clear operations"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"apic extensions:clear [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"apic extensions:clear [flags] --scope space EXTENSION_NAME\napic extensions:clear [flags] --scope catalog EXTENSION_NAME\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --confirm string                      Confirmation for critical updates (required)\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for extensions:clear\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}}}]);