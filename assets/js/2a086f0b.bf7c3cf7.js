"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[76722],{21278:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>l,contentTitle:()=>c,default:()=>a,frontMatter:()=>s,metadata:()=>r,toc:()=>d});var n=o(74848),i=o(28453);const s={},c="apic cloud-settings",r={id:"v1005/apim/apic_cloud-settings_topology",title:"apic cloud-settings:topology",description:"Return the topology of the cloud for governance",source:"@site/docs/v1005/apim/apic_cloud-settings_topology.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_cloud-settings_topology",permalink:"/clidocs/docs/v1005/apim/apic_cloud-settings_topology",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_cloud-settings_topology.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic cloud-settings:toolkit-credentials-list",permalink:"/clidocs/docs/v1005/apim/apic_cloud-settings_toolkit-credentials-list"},next:{title:"apic cloud-settings:update",permalink:"/clidocs/docs/v1005/apim/apic_cloud-settings_update"}},l={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(t){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...t.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(e.h1,{id:"apic-cloud-settings",children:["apic cloud-settings",":topology"]}),"\n",(0,n.jsx)(e.p,{children:"Return the topology of the cloud for governance"}),"\n",(0,n.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(e.p,{children:"Return the topology of the cloud for governance. You MUST supply the --format option when using this command from the API Connect toolkit."}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:"apic cloud-settings:topology [flags]\n"})}),"\n",(0,n.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for cloud-settings:topology\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,n.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(e.pre,{children:(0,n.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function a(t={}){const{wrapper:e}={...(0,i.R)(),...t.components};return e?(0,n.jsx)(e,{...t,children:(0,n.jsx)(p,{...t})}):p(t)}},28453:(t,e,o)=>{o.d(e,{R:()=>c,x:()=>r});var n=o(96540);const i={},s=n.createContext(i);function c(t){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:c(t.components),n.createElement(s.Provider,{value:e},t.children)}}}]);