"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[29191],{95054:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>d,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"v1005/consumer/apic_apis_wsdl","title":"apic apis:wsdl","description":"Get the API wsdl document","source":"@site/docs/v1005/consumer/apic_apis_wsdl.md","sourceDirName":"v1005/consumer","slug":"/v1005/consumer/apic_apis_wsdl","permalink":"/clidocs/docs/v1005/consumer/apic_apis_wsdl","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/consumer/apic_apis_wsdl.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic apis:list","permalink":"/clidocs/docs/v1005/consumer/apic_apis_list"},"next":{"title":"apic apps","permalink":"/clidocs/docs/v1005/consumer/apic_apps"}}');var i=t(74848),o=t(28453);const r={},c="apic apis",d={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"apic-apis",children:["apic apis",":wsdl"]})}),"\n",(0,i.jsx)(n.p,{children:"Get the API wsdl document"}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Get the API wsdl document"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic apis:wsdl --mode consumer [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"      --endpoint string   endpoint\n      --format string     Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help              Help for apis:wsdl\n      --output string     Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --scope string      scope\n  -s, --server string     management server endpoint (required)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>c});var s=t(96540);const i={},o=s.createContext(i);function r(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),s.createElement(o.Provider,{value:n},e.children)}}}]);