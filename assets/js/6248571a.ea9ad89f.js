"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[498725],{28453:(e,n,c)=>{c.d(n,{R:()=>s,x:()=>r});var o=c(296540);const i={},a=o.createContext(i);function s(e){const n=o.useContext(a);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(a.Provider,{value:n},e.children)}},179721:(e,n,c)=>{c.r(n),c.d(n,{assets:()=>t,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"v1008/governance/compliance/apic_compliance_rescan","title":"apic compliance:rescan","description":"Compliance rescan operations","source":"@site/docs/v1008/governance/compliance/apic_compliance_rescan.md","sourceDirName":"v1008/governance/compliance","slug":"/v1008/governance/compliance/apic_compliance_rescan","permalink":"/clidocs/docs/v1008/governance/compliance/apic_compliance_rescan","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/governance/compliance/apic_compliance_rescan.md","tags":[{"inline":true,"label":"group: compliance","permalink":"/clidocs/docs/tags/group-compliance"},{"inline":true,"label":"scope: org","permalink":"/clidocs/docs/tags/scope-org"}],"version":"current","frontMatter":{"tags":["group: compliance","scope: org"]},"sidebar":"tutorialSidebar","previous":{"title":"apic compliance","permalink":"/clidocs/docs/v1008/governance/compliance/apic_compliance"},"next":{"title":"apic compliance:scan","permalink":"/clidocs/docs/v1008/governance/compliance/apic_compliance_scan"}}');var i=c(474848),a=c(28453);const s={tags:["group: compliance","scope: org"]},r="apic compliance",t={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"apic-compliance",children:["apic compliance",":rescan"]})}),"\n",(0,i.jsx)(n.p,{children:"Compliance rescan operations"}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Compliance rescan operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic compliance:rescan --mode governance [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic compliance:rescan --mode governance [flags] --scope org\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --format string      Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help               Help for compliance:rescan\n  -o, --org string         Organization name or id (required)\n      --output string      Write file(s) to directory, instead of STDOUT (default "-")\n      --scan string        Scan name or id (required)\n      --scantitle string   Optional title for Scan\n      --scope string       scope\n  -s, --server string      management server endpoint (required)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,a.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);