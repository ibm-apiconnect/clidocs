"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[15050],{62890:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>u});var s=n(74848),i=n(28453);const o={},a="apic task-queues",r={id:"v1005/apim/apic_task-queues_get",title:"apic task-queues:get",description:"Task Queues get operations",source:"@site/docs/v1005/apim/apic_task-queues_get.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_task-queues_get",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_task-queues_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_task-queues_get.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic task-queues",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_task-queues"},next:{title:"apic task-queues:list",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_task-queues_list"}},c={},u=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(t.h1,{id:"apic-task-queues",children:["apic task-queues",":get"]}),"\n",(0,s.jsx)(t.p,{children:"Task Queues get operations"}),"\n",(0,s.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(t.p,{children:"Task Queues get operations"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic task-queues:get [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"      --cascade         Cascade the behavior\n      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for task-queues:get\n      --kind string     kind of item\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --query string    Add query to request\n      --scope string    scope\n  -s, --server string   management server endpoint (required)\n      --state string    State for a webhook event in subscriber queue\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var s=n(96540);const i={},o=s.createContext(i);function a(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);