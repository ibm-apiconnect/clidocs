"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[35172],{12121:(o,e,i)=>{i.r(e),i.d(e,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>n,metadata:()=>p,toc:()=>c});var t=i(74848),s=i(28453);const n={},a="apic global-policy-posthooks",p={id:"v1008/apim/apic_global-policy-posthooks_update",title:"apic global-policy-posthooks:update",description:"Global Policy Posthooks update operations",source:"@site/docs/v1008/apim/apic_global-policy-posthooks_update.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_global-policy-posthooks_update",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_global-policy-posthooks_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_global-policy-posthooks_update.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic global-policy-posthooks:get",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_global-policy-posthooks_get"},next:{title:"apic global-policy-prehooks",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_global-policy-prehooks"}},l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function r(o){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...o.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(e.h1,{id:"apic-global-policy-posthooks",children:["apic global-policy-posthooks",":update"]}),"\n",(0,t.jsx)(e.p,{children:"Global Policy Posthooks update operations"}),"\n",(0,t.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(e.p,{children:"Global Policy Posthooks update operations"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"apic global-policy-posthooks:update [flags]\n"})}),"\n",(0,t.jsx)(e.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:"      apic global-policy-posthooks:update [flags] --scope space GLOBAL_POLICY_POSTHOOK_FILE\n      apic global-policy-posthooks:update [flags] --scope catalog GLOBAL_POLICY_POSTHOOK_FILE\n"})}),"\n",(0,t.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for global-policy-posthooks:update\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n'})}),"\n",(0,t.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(e.pre,{children:(0,t.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(o={}){const{wrapper:e}={...(0,s.R)(),...o.components};return e?(0,t.jsx)(e,{...o,children:(0,t.jsx)(r,{...o})}):r(o)}},28453:(o,e,i)=>{i.d(e,{R:()=>a,x:()=>p});var t=i(96540);const s={},n=t.createContext(s);function a(o){const e=t.useContext(n);return t.useMemo((function(){return"function"==typeof o?o(e):{...e,...o}}),[e,o])}function p(o){let e;return e=o.disableParentContext?"function"==typeof o.components?o.components(s):o.components||s:a(o.components),t.createElement(n.Provider,{value:e},o.children)}}}]);