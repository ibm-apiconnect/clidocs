"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[364904],{28453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>a});var r=n(296540);const t={},s=r.createContext(t);function i(e){const o=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),r.createElement(s.Provider,{value:o},e.children)}},898721:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"v10010/portaladmin/user/apic_user_unblock","title":"apic user:unblock","description":"Unblock a Developer Portal Drupal User","source":"@site/docs/v10010/portaladmin/user/apic_user_unblock.md","sourceDirName":"v10010/portaladmin/user","slug":"/v10010/portaladmin/user/apic_user_unblock","permalink":"/clidocs/docs/v10010/portaladmin/user/apic_user_unblock","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/portaladmin/user/apic_user_unblock.md","tags":[{"inline":true,"label":"group: user","permalink":"/clidocs/docs/tags/group-user"}],"version":"current","frontMatter":{"tags":["group: user"]},"sidebar":"tutorialSidebar","previous":{"title":"apic user:remove-role","permalink":"/clidocs/docs/v10010/portaladmin/user/apic_user_remove-role"},"next":{"title":"apic validate","permalink":"/clidocs/docs/v10010/portaladmin/validate/apic_validate"}}');var t=n(474848),s=n(28453);const i={tags:["group: user"]},a="apic user",l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsxs)(o.h1,{id:"apic-user",children:["apic user",":unblock"]})}),"\n",(0,t.jsx)(o.p,{children:"Unblock a Developer Portal Drupal User"}),"\n",(0,t.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(o.p,{children:"Unblock a Developer Portal Drupal User. This will allow a blocked Drupal User to be able to login into the Developer Portal again. You need to provide the username of the Drupal User."}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"apic user:unblock --mode portaladmin [flags]\n"})}),"\n",(0,t.jsx)(o.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"apic user:unblock --mode portaladmin [flags]\n"})}),"\n",(0,t.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --names string     A comma-separated list of names of Drupal Users to perform the action on.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,t.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);