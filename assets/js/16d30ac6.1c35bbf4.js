"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[89411],{28453:(t,e,i)=>{i.d(e,{R:()=>a,x:()=>r});var n=i(96540);const o={},s=n.createContext(o);function a(t){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:a(t.components),n.createElement(s.Provider,{value:e},t.children)}},47109:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v1005/apim/apic_notification-templates_list","title":"apic notification-templates:list","description":"Notification Templates list operations","source":"@site/docs/v1005/apim/apic_notification-templates_list.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_notification-templates_list","permalink":"/clidocs/docs/v1005/apim/apic_notification-templates_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_notification-templates_list.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic notification-templates:list-all","permalink":"/clidocs/docs/v1005/apim/apic_notification-templates_list-all"},"next":{"title":"apic notification-templates:update","permalink":"/clidocs/docs/v1005/apim/apic_notification-templates_update"}}');var o=i(74848),s=i(28453);const a={},r="apic notification-templates",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsxs)(e.h1,{id:"apic-notification-templates",children:["apic notification-templates",":list"]})}),"\n",(0,o.jsx)(e.p,{children:"Notification Templates list operations"}),"\n",(0,o.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(e.p,{children:"Notification Templates list operations"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"apic notification-templates:list [flags]\n"})}),"\n",(0,o.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'  -c, --catalog string         Catalog name or id (required)\n      --fields string          List of field names to return\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                   Help for notification-templates:list\n      --limit int32            Maximum number of items to return\n      --offset int32           Offset item number from list to begin return\n  -o, --org string             Organization name or id (required)\n      --output string          Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string           scope\n  -s, --server string          management server endpoint (required)\n      --space string           Space name or id (required)\n      --subcollection string   subcollection\n'})}),"\n",(0,o.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,o.jsx)(e,{...t,children:(0,o.jsx)(p,{...t})}):p(t)}}}]);