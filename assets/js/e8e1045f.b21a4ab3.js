"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[586631],{28453:(e,n,t)=>{t.d(n,{R:()=>i,x:()=>l});var r=t(296540);const s={},o=r.createContext(s);function i(e){const n=r.useContext(o);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),r.createElement(o.Provider,{value:n},e.children)}},601816:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"v10010/governance/rules/apic_rules_get","title":"apic rules:get","description":"Download the Rule object as a file to the current directory by name:version or id","source":"@site/docs/v10010/governance/rules/apic_rules_get.md","sourceDirName":"v10010/governance/rules","slug":"/v10010/governance/rules/apic_rules_get","permalink":"/clidocs/docs/v10010/governance/rules/apic_rules_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/governance/rules/apic_rules_get.md","tags":[{"inline":true,"label":"group: rules","permalink":"/clidocs/docs/tags/group-rules"}],"version":"current","frontMatter":{"tags":["group: rules"]},"sidebar":"tutorialSidebar","previous":{"title":"apic rules:delete","permalink":"/clidocs/docs/v10010/governance/rules/apic_rules_delete"},"next":{"title":"apic rules:list-all","permalink":"/clidocs/docs/v10010/governance/rules/apic_rules_list-all"}}');var s=t(474848),o=t(28453);const i={tags:["group: rules"]},l="apic rules",c={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(n.header,{children:(0,s.jsxs)(n.h1,{id:"apic-rules",children:["apic rules",":get"]})}),"\n",(0,s.jsxs)(n.p,{children:["Download the Rule object as a file to the current directory by name",":version"," or id"]}),"\n",(0,s.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsxs)(n.p,{children:["Download the Rule object as a file to the current directory by name",":version",". If you would like to use the id of the Rule object the --id flag must be specified followed by the id of the Rule object."]}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"apic rules:get --mode governance [flags]\n"})}),"\n",(0,s.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"apic rules:get --mode governance [flags] --id ID\napic rules:get --mode governance [flags] NAME:VERSION\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:"      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --ruleset string   Ruleset name or id (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,s.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(n.pre,{children:(0,s.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,s.jsx)(n,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);