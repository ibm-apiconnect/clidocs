"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[66156],{78562:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"v1009/analytics/reports/apic_reports_orgPlansLeaderboard","title":"apic reports:orgPlansLeaderboard","description":"Get the data needed to populate the Plans leaderboard","source":"@site/docs/v1009/analytics/reports/apic_reports_orgPlansLeaderboard.md","sourceDirName":"v1009/analytics/reports","slug":"/v1009/analytics/reports/apic_reports_orgPlansLeaderboard","permalink":"/clidocs/docs/v1009/analytics/reports/apic_reports_orgPlansLeaderboard","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/analytics/reports/apic_reports_orgPlansLeaderboard.md","tags":[{"inline":true,"label":"group: reports","permalink":"/clidocs/docs/tags/group-reports"},{"inline":true,"label":"scope: org","permalink":"/clidocs/docs/tags/scope-org"}],"version":"current","frontMatter":{"tags":["group: reports","scope: org"]},"sidebar":"tutorialSidebar","previous":{"title":"apic reports:orgPlanDetail","permalink":"/clidocs/docs/v1009/analytics/reports/apic_reports_orgPlanDetail"},"next":{"title":"apic reports:orgProductDetail","permalink":"/clidocs/docs/v1009/analytics/reports/apic_reports_orgProductDetail"}}');var s=r(74848),o=r(28453);const a={tags:["group: reports","scope: org"]},i="apic reports",l={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"apic-reports",children:["apic reports",":orgPlansLeaderboard"]})}),"\n",(0,s.jsx)(t.p,{children:"Get the data needed to populate the Plans leaderboard"}),"\n",(0,s.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(t.p,{children:"Return the data needed to populate the Plans leaderboard at org scope."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic reports:orgPlansLeaderboard --mode analytics [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic reports:orgPlansLeaderboard --mode analytics [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n      --end string                 If set, only return events with a datetime equal or older than this. The date-time value must be such that the time component represents midnight. for example, 2021-07-21T00:00:000Z.\n                                   \n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --limit string               If set, the number of items to return when requesting a list. Maximum: 500\n      --offset string              If set, the offset to be applied when requesting a list. e.g. return events starting from the 100th result\n  -o, --org string                 Provider organization name or ID. (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default \"-\")\n      --search string              Filter results by search string\n  -s, --server string              management server endpoint (required)\n      --start string               If set, only return events with a date equal to or newer than this. The date-time value must be such that the time component represents midnight. for example, 2021-07-21T00:00:000Z.\n                                   \n      --timeframe string           If set, only return events within the indicated timeframe. Timeframe values are in the format of 'last<value><unit>' where <value> is a positive integer greater than one, and <unit> can be one of day, month, quarter or year.\n                                   \n"})}),"\n",(0,s.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>a,x:()=>i});var n=r(96540);const s={},o=n.createContext(s);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function i(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:t},e.children)}}}]);