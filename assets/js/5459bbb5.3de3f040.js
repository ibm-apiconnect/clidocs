"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[246469],{28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>r});var i=t(296540);const n={},a=i.createContext(n);function o(e){const s=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(a.Provider,{value:s},e.children)}},476826:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"v10010/apim/associates/apic_associates","title":"apic associates","description":"Associates operations","source":"@site/docs/v10010/apim/associates/apic_associates.md","sourceDirName":"v10010/apim/associates","slug":"/v10010/apim/associates/apic_associates","permalink":"/clidocs/docs/v10010/apim/associates/apic_associates","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/associates/apic_associates.md","tags":[{"inline":true,"label":"group: associates","permalink":"/clidocs/docs/tags/group-associates"}],"version":"current","frontMatter":{"tags":["group: associates"]},"sidebar":"tutorialSidebar","previous":{"title":"apic apps:update","permalink":"/clidocs/docs/v10010/apim/apps/apic_apps_update"},"next":{"title":"apic associates:get","permalink":"/clidocs/docs/v10010/apim/associates/apic_associates_get"}}');var n=t(474848),a=t(28453);const o={tags:["group: associates"]},r="apic associates",c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsx)(s.h1,{id:"apic-associates",children:"apic associates"})}),"\n",(0,n.jsx)(s.p,{children:"Associates operations"}),"\n",(0,n.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(s.p,{children:"Associates operations"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"apic associates [flags]\n"})}),"\n",(0,n.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'  -c, --catalog string        Catalog name or id (required)\n      --consumer-org string   Consumer Organization name or id (required)\n      --fields string         List of field names to return\n      --format string         Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                  Help for associates\n      --limit int32           Maximum number of items to return\n      --offset int32          Offset item number from list to begin return\n  -o, --org string            Organization name or id (required)\n      --output string         Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string          scope\n  -s, --server string         management server endpoint (required)\n      --space string          Space name or id (required)\n      --space-initiated       space-initiated\n'})}),"\n",(0,n.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);