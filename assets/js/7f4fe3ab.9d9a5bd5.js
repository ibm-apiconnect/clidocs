"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[62751],{90407:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>p});var i=t(74848),c=t(28453);const o={},s="apic test",r={id:"v1008/governance/apic_test",title:"apic test",description:"Runs a test and returns",source:"@site/docs/v1008/governance/apic_test.md",sourceDirName:"v1008/governance",slug:"/v1008/governance/apic_test",permalink:"/ibm-apiconnect/clidocs/docs/v1008/governance/apic_test",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/governance/apic_test.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic scans:update",permalink:"/ibm-apiconnect/clidocs/docs/v1008/governance/apic_scans_update"},next:{title:"apic validate",permalink:"/ibm-apiconnect/clidocs/docs/v1008/governance/apic_validate"}},a={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.h1,{id:"apic-test",children:"apic test"}),"\n",(0,i.jsx)(n.p,{children:"Runs a test and returns"}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"apic-test is a CLI for testing your APIs"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic test --mode governance [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"      --certPath string      cert path\n  -c, --config-file string   Give external cinfiguration file path\n  -h, --help                 Help for test\n  -k, --insecureSkipVerify   Skip certificate checks\n  -j, --junit                Output in junit format\n      --mTLS                 Enable mTLS\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>r});var i=t(96540);const c={},o=i.createContext(c);function s(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);