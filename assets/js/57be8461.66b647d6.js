"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[667871],{28453:(e,o,r)=>{r.d(o,{R:()=>a,x:()=>s});var n=r(296540);const t={},i=n.createContext(t);function a(e){const o=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),n.createElement(i.Provider,{value:o},e.children)}},671589:(e,o,r)=>{r.r(o),r.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"v1008/portaladmin/role/apic_role_create","title":"apic role:create","description":"Create a new role","source":"@site/docs/v1008/portaladmin/role/apic_role_create.md","sourceDirName":"v1008/portaladmin/role","slug":"/v1008/portaladmin/role/apic_role_create","permalink":"/clidocs/docs/v1008/portaladmin/role/apic_role_create","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/role/apic_role_create.md","tags":[{"inline":true,"label":"group: role","permalink":"/clidocs/docs/tags/group-role"}],"version":"current","frontMatter":{"tags":["group: role"]},"sidebar":"tutorialSidebar","previous":{"title":"apic role:add-permission","permalink":"/clidocs/docs/v1008/portaladmin/role/apic_role_add-permission"},"next":{"title":"apic role:delete","permalink":"/clidocs/docs/v1008/portaladmin/role/apic_role_delete"}}');var t=r(474848),i=r(28453);const a={tags:["group: role"]},s="apic role",l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsxs)(o.h1,{id:"apic-role",children:["apic role",":create"]})}),"\n",(0,t.jsx)(o.p,{children:"Create a new role"}),"\n",(0,t.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(o.p,{children:"Create a new role"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"apic role:create --mode portaladmin [flags]\n"})}),"\n",(0,t.jsx)(o.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"apic role:create --mode portaladmin [flags]\n"})}),"\n",(0,t.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"  -c, --catalog string               Name or ID of the Catalog that the site belongs to. (required)\n      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --human_readable_name string   A descriptive name for the Drupal role. (required)\n      --machine_name string          The symbolic machine name for the role. (required)\n  -o, --org string                   Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,t.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);