"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[17873],{14561:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>d});var i=n(74848),o=n(28453);const s={tags:["group: entity"]},r="apic entity",a={id:"v1008/portaladmin/entity/apic_entity_count",title:"apic entity:count",description:"Shows a count of entities from a site.",source:"@site/docs/v1008/portaladmin/entity/apic_entity_count.md",sourceDirName:"v1008/portaladmin/entity",slug:"/v1008/portaladmin/entity/apic_entity_count",permalink:"/clidocs/docs/v1008/portaladmin/entity/apic_entity_count",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/entity/apic_entity_count.md",tags:[{inline:!0,label:"group: entity",permalink:"/clidocs/docs/tags/group-entity"}],version:"current",frontMatter:{tags:["group: entity"]},sidebar:"tutorialSidebar",previous:{title:"apic entity",permalink:"/clidocs/docs/v1008/portaladmin/entity/apic_entity"},next:{title:"apic export-entity",permalink:"/clidocs/docs/v1008/portaladmin/export-entity/apic_export-entity"}},c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsxs)(e.h1,{id:"apic-entity",children:["apic entity",":count"]})}),"\n",(0,i.jsx)(e.p,{children:"Shows a count of entities from a site."}),"\n",(0,i.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(e.p,{children:"Show a count of entities of the provided org and catalog."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"apic entity:count --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(e.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"\n      apic entity:count --mode portaladmin [flags]\n\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(l,{...t})}):l(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>r,x:()=>a});var i=n(96540);const o={},s=i.createContext(o);function r(t){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:r(t.components),i.createElement(s.Provider,{value:e},t.children)}}}]);