"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[254472],{28453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>l});var n=o(296540);const r={},i=n.createContext(r);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(i.Provider,{value:t},e.children)}},857785:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>a,contentTitle:()=>l,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"v1008/portaladmin/role/apic_role_get","title":"apic role:get","description":"Get a role defined on the site.","source":"@site/docs/v1008/portaladmin/role/apic_role_get.md","sourceDirName":"v1008/portaladmin/role","slug":"/v1008/portaladmin/role/apic_role_get","permalink":"/clidocs/docs/v1008/portaladmin/role/apic_role_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/role/apic_role_get.md","tags":[{"inline":true,"label":"group: role","permalink":"/clidocs/docs/tags/group-role"}],"version":"current","frontMatter":{"tags":["group: role"]},"sidebar":"tutorialSidebar","previous":{"title":"apic role:delete","permalink":"/clidocs/docs/v1008/portaladmin/role/apic_role_delete"},"next":{"title":"apic role:list","permalink":"/clidocs/docs/v1008/portaladmin/role/apic_role_list"}}');var r=o(474848),i=o(28453);const s={tags:["group: role"]},l="apic role",a={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"apic-role",children:["apic role",":get"]})}),"\n",(0,r.jsx)(t.p,{children:"Get a role defined on the site."}),"\n",(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"Gets a Drupal User Role defined on the site and all the permissions it has been granted"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic role:get --mode portaladmin [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic role:get --mode portaladmin [flags] ROLE\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);