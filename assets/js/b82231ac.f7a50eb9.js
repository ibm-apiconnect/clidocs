"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[717241],{28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>a});var n=i(296540);const r={},o=n.createContext(r);function s(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:t},e.children)}},271560:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>l,frontMatter:()=>s,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"v1005/apim/apic_oauth-providers_update","title":"apic oauth-providers:update","description":"Update the Oauth Provider object by name or id","source":"@site/docs/v1005/apim/apic_oauth-providers_update.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_oauth-providers_update","permalink":"/clidocs/docs/v1005/apim/apic_oauth-providers_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_oauth-providers_update.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic oauth-providers:list","permalink":"/clidocs/docs/v1005/apim/apic_oauth-providers_list"},"next":{"title":"apic org-settings","permalink":"/clidocs/docs/v1005/apim/apic_org-settings"}}');var r=i(474848),o=i(28453);const s={},a="apic oauth-providers",d={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"apic-oauth-providers",children:["apic oauth-providers",":update"]})}),"\n",(0,r.jsx)(t.p,{children:"Update the Oauth Provider object by name or id"}),"\n",(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"Update the Oauth Provider object by name or id"}),"\n",(0,r.jsx)(t.p,{children:"Fields allowed but ignored:"}),"\n",(0,r.jsxs)(t.ul,{children:["\n",(0,r.jsx)(t.li,{children:"id"}),"\n",(0,r.jsx)(t.li,{children:"type"}),"\n",(0,r.jsx)(t.li,{children:"api_version"}),"\n",(0,r.jsx)(t.li,{children:"scope"}),"\n",(0,r.jsx)(t.li,{children:"created_at"}),"\n",(0,r.jsx)(t.li,{children:"updated_at"}),"\n",(0,r.jsx)(t.li,{children:"url"}),"\n",(0,r.jsx)(t.li,{children:"org_url"}),"\n"]}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic oauth-providers:update [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for oauth-providers:update\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,r.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);