"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[173246],{28453:(e,i,a)=>{a.d(i,{R:()=>r,x:()=>c});var n=a(296540);const t={},s=n.createContext(t);function r(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(s.Provider,{value:i},e.children)}},980784:(e,i,a)=>{a.r(i),a.d(i,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>r,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v1009/apim/gateway-services/apic_gateway-services_create","title":"apic gateway-services:create","description":"Create a Gateway Service object","source":"@site/docs/v1009/apim/gateway-services/apic_gateway-services_create.md","sourceDirName":"v1009/apim/gateway-services","slug":"/v1009/apim/gateway-services/apic_gateway-services_create","permalink":"/clidocs/docs/v1009/apim/gateway-services/apic_gateway-services_create","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/gateway-services/apic_gateway-services_create.md","tags":[{"inline":true,"label":"group: gateway-services","permalink":"/clidocs/docs/tags/group-gateway-services"}],"version":"current","frontMatter":{"tags":["group: gateway-services"]},"sidebar":"tutorialSidebar","previous":{"title":"apic gateway-services:clear","permalink":"/clidocs/docs/v1009/apim/gateway-services/apic_gateway-services_clear"},"next":{"title":"apic gateway-services:delete","permalink":"/clidocs/docs/v1009/apim/gateway-services/apic_gateway-services_delete"}}');var t=a(474848),s=a(28453);const r={tags:["group: gateway-services"]},c="apic gateway-services",o={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"Example API Gateway service with LDAP connection pool enabled.",id:"example-api-gateway-service-with-ldap-connection-pool-enabled",level:4},{value:"Example v5 Gateway service with communication of analytics set to internal service and communcation to jwt set to true.",id:"example-v5-gateway-service-with-communication-of-analytics-set-to-internal-service-and-communcation-to-jwt-set-to-true",level:4},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsxs)(i.h1,{id:"apic-gateway-services",children:["apic gateway-services",":create"]})}),"\n",(0,t.jsx)(i.p,{children:"Create a Gateway Service object"}),"\n",(0,t.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(i.p,{children:"Create a Gateway Service object"}),"\n",(0,t.jsx)(i.p,{children:"Required fields:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"endpoint"}),"\n",(0,t.jsx)(i.li,{children:"api_endpoint_base"}),"\n",(0,t.jsx)(i.li,{children:"sni"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Fields not allowed:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"owned"}),"\n",(0,t.jsx)(i.li,{children:"service_supported_features"}),"\n"]}),"\n",(0,t.jsx)(i.p,{children:"Fields allowed but ignored:"}),"\n",(0,t.jsxs)(i.ul,{children:["\n",(0,t.jsx)(i.li,{children:"id"}),"\n",(0,t.jsx)(i.li,{children:"type"}),"\n",(0,t.jsx)(i.li,{children:"api_version"}),"\n",(0,t.jsx)(i.li,{children:"scope"}),"\n",(0,t.jsx)(i.li,{children:"created_at"}),"\n",(0,t.jsx)(i.li,{children:"updated_at"}),"\n",(0,t.jsx)(i.li,{children:"url"}),"\n",(0,t.jsx)(i.li,{children:"org_url"}),"\n",(0,t.jsx)(i.li,{children:"availability_zone_url"}),"\n"]}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic gateway-services:create [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic gateway-services:create [flags] GATEWAY_SERVICE_FILE\n"})}),"\n",(0,t.jsx)(i.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h4,{id:"example-api-gateway-service-with-ldap-connection-pool-enabled",children:"Example API Gateway service with LDAP connection pool enabled."}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"api_endpoint_base: https://gw.acme-apim.example.com\nendpoint: https://gw.acme-apim.example.com\ngateway_service_type: datapower-api-gateway\nldap_cxn_pool:\n  document_cache_size: 0\n  enabled: true\n  idle_timeout: 100\n  max_pool_size: 30\nname: acme-api-gateway-service\nsni:\n- host: '*'\n  tls_server_profile_url: https://acme-apim.example.com/api/orgs/tls-server-profiles\ntitle: ACME API Gateway Service\n"})}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.h4,{id:"example-v5-gateway-service-with-communication-of-analytics-set-to-internal-service-and-communcation-to-jwt-set-to-true",children:"Example v5 Gateway service with communication of analytics set to internal service and communcation to jwt set to true."}),"\n",(0,t.jsx)(i.hr,{}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"api_endpoint_base: https://gw.acme-apim.example.com\ncommunication_kind: external\ncommunication_to_analytics_with_jwt: true\nendpoint: https://gw.acme-apim.example.com\ngateway_service_type: datapower-gateway\nname: acme-v5-gateway-service\nsni:\n- host: '*'\n  tls_server_profile_url: https://acme-apim.example.com/api/orgs/tls-server-profiles\ntitle: ACME v5 Gateway Service\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --availability-zone string   Availability Zone name or id (required)\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string                 Organization name or id (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,t.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);