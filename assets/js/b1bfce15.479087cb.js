"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[12646],{28453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>l});var i=t(96540);const n={},s=i.createContext(n);function r(e){const o=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function l(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),i.createElement(s.Provider,{value:o},e.children)}},71646:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>a,contentTitle:()=>l,default:()=>c,frontMatter:()=>r,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"v1008/portaladmin/role/apic_role_list","title":"apic role:list","description":"Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed.","source":"@site/docs/v1008/portaladmin/role/apic_role_list.md","sourceDirName":"v1008/portaladmin/role","slug":"/v1008/portaladmin/role/apic_role_list","permalink":"/clidocs/docs/v1008/portaladmin/role/apic_role_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/role/apic_role_list.md","tags":[{"inline":true,"label":"group: role","permalink":"/clidocs/docs/tags/group-role"}],"version":"current","frontMatter":{"tags":["group: role"]},"sidebar":"tutorialSidebar","previous":{"title":"apic role:get","permalink":"/clidocs/docs/v1008/portaladmin/role/apic_role_get"},"next":{"title":"apic role:remove-permission","permalink":"/clidocs/docs/v1008/portaladmin/role/apic_role_remove-permission"}}');var n=t(74848),s=t(28453);const r={tags:["group: role"]},l="apic role",a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(o.header,{children:(0,n.jsxs)(o.h1,{id:"apic-role",children:["apic role",":list"]})}),"\n",(0,n.jsx)(o.p,{children:"Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed."}),"\n",(0,n.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(o.p,{children:"Display a list of all roles defined on the system. If a role name is provided as an argument, then all of the permissions of that role will be listed. If a permission name is provided as an option, then all of the roles that have been granted that permission will be listed."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:"apic role:list --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(o.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:"apic role:list --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:"  -c, --catalog string                Name or ID of the Catalog that the site belongs to. (required)\n      --filter_by_permission string   Limits the list of roles to only those that have been assigned the specified permission. May not be specified if a role argument is provided.\n      --format string                 Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string                    Name or ID of the organization that the catalog belongs to. (required)\n      --role string                   The name of the Drupal User Role.\n  -s, --server string                 management server endpoint (required)\n"})}),"\n",(0,n.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function c(e={}){const{wrapper:o}={...(0,s.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);