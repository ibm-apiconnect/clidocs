"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[637174],{28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>o});var s=a(296540);const n={},i=s.createContext(n);function r(e){const t=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(i.Provider,{value:t},e.children)}},643661:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"v10010/analytics/summary/apic_summary_catalogGet","title":"apic summary:catalogGet","description":"Get specific summary event at catalog scope","source":"@site/docs/v10010/analytics/summary/apic_summary_catalogGet.md","sourceDirName":"v10010/analytics/summary","slug":"/v10010/analytics/summary/apic_summary_catalogGet","permalink":"/clidocs/docs/v10010/analytics/summary/apic_summary_catalogGet","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/analytics/summary/apic_summary_catalogGet.md","tags":[{"inline":true,"label":"group: summary","permalink":"/clidocs/docs/tags/group-summary"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"}],"version":"current","frontMatter":{"tags":["group: summary","scope: catalog"]},"sidebar":"tutorialSidebar","previous":{"title":"apic summary:catalogCount","permalink":"/clidocs/docs/v10010/analytics/summary/apic_summary_catalogCount"},"next":{"title":"apic summary:catalogList","permalink":"/clidocs/docs/v10010/analytics/summary/apic_summary_catalogList"}}');var n=a(474848),i=a(28453);const r={tags:["group: summary","scope: catalog"]},o="apic summary",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function m(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"apic-summary",children:["apic summary",":catalogGet"]})}),"\n",(0,n.jsx)(t.p,{children:"Get specific summary event at catalog scope"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Return a single analytics summary event by ID scoped to the catalog. The item in the result set is determined by the passed in request query to this API."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic summary:catalogGet --mode analytics [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic summary:catalogGet --mode analytics [flags] ID\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n  -c, --catalog string             Catalog name or ID. (required)\n      --fields string              A list of the event fields that you want included in each event. You can use a comma as a separator when specifying the fields. Use this parameter if you require only a subset of the event fields rather than the full set.\n                                   \n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string                 Provider organization name or ID. (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}}}]);