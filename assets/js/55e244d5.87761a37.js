"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[678677],{28453:(e,t,o)=>{o.d(t,{R:()=>a,x:()=>r});var s=o(296540);const i={},n=s.createContext(i);function a(e){const t=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),s.createElement(n.Provider,{value:t},e.children)}},670646:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>a,metadata:()=>s,toc:()=>l});const s=JSON.parse('{"id":"v10010/portaladmin/custom-module/apic_custom-module_create-import","title":"apic custom-module:create-import","description":"Create a task that imports an archive that contains the custom modules of a site.","source":"@site/docs/v10010/portaladmin/custom-module/apic_custom-module_create-import.md","sourceDirName":"v10010/portaladmin/custom-module","slug":"/v10010/portaladmin/custom-module/apic_custom-module_create-import","permalink":"/clidocs/docs/v10010/portaladmin/custom-module/apic_custom-module_create-import","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/portaladmin/custom-module/apic_custom-module_create-import.md","tags":[{"inline":true,"label":"group: custom-module","permalink":"/clidocs/docs/tags/group-custom-module"}],"version":"current","frontMatter":{"tags":["group: custom-module"]},"sidebar":"tutorialSidebar","previous":{"title":"apic custom-module:create-export","permalink":"/clidocs/docs/v10010/portaladmin/custom-module/apic_custom-module_create-export"},"next":{"title":"apic custom-module:delete-export","permalink":"/clidocs/docs/v10010/portaladmin/custom-module/apic_custom-module_delete-export"}}');var i=o(474848),n=o(28453);const a={tags:["group: custom-module"]},r="apic custom-module",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsxs)(t.h1,{id:"apic-custom-module",children:["apic custom-module",":create-import"]})}),"\n",(0,i.jsx)(t.p,{children:"Create a task that imports an archive that contains the custom modules of a site."}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:"You can create a task to import an archive of the custom modules of a site. You can use the imported archive to quickly and simply override the custom modules for the specified site."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic custom-module:create-import --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic custom-module:create-import --mode portaladmin [flags] CUSTOM_MODULE_FILE\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --no-poll          Do not poll the created task and just return the task ID\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n      --wait             Wait on the cache to be rebuilt as part of the task, otherwise it will be rebuilt in the background after the task has finished.\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function m(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);