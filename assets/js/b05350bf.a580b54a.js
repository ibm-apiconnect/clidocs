"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[375190],{28453:(t,e,i)=>{i.d(e,{R:()=>c,x:()=>s});var o=i(296540);const a={},n=o.createContext(a);function c(t){const e=o.useContext(n);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:c(t.components),o.createElement(n.Provider,{value:e},t.children)}},271637:(t,e,i)=>{i.r(e),i.d(e,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"v1009/apim/notification-templates/apic_notification-templates_update","title":"apic notification-templates:update","description":"Notification Templates update operations","source":"@site/docs/v1009/apim/notification-templates/apic_notification-templates_update.md","sourceDirName":"v1009/apim/notification-templates","slug":"/v1009/apim/notification-templates/apic_notification-templates_update","permalink":"/clidocs/docs/v1009/apim/notification-templates/apic_notification-templates_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/notification-templates/apic_notification-templates_update.md","tags":[{"inline":true,"label":"group: notification-templates","permalink":"/clidocs/docs/tags/group-notification-templates"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"}],"version":"current","frontMatter":{"tags":["group: notification-templates","scope: catalog"]},"sidebar":"tutorialSidebar","previous":{"title":"apic notification-templates:list","permalink":"/clidocs/docs/v1009/apim/notification-templates/apic_notification-templates_list"},"next":{"title":"apic oauth-providers","permalink":"/clidocs/docs/v1009/apim/oauth-providers/apic_oauth-providers"}}');var a=i(474848),n=i(28453);const c={tags:["group: notification-templates","scope: catalog"]},s="apic notification-templates",p={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function r(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsxs)(e.h1,{id:"apic-notification-templates",children:["apic notification-templates",":update"]})}),"\n",(0,a.jsx)(e.p,{children:"Notification Templates update operations"}),"\n",(0,a.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(e.p,{children:"Notification Templates update operations"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"apic notification-templates:update [flags]\n"})}),"\n",(0,a.jsx)(e.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"apic notification-templates:update [flags] --scope space --subcollection space NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope space --subcollection consumer NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope org --subcollection space NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope org --subcollection provider NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope org --subcollection consumer NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope org --subcollection catalog NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope org --subcollection admin NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope cloud --subcollection space NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope cloud --subcollection provider NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope cloud --subcollection consumer NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope cloud --subcollection cloud NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope cloud --subcollection catalog NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope cloud --subcollection admin NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope catalog --subcollection space NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope catalog --subcollection consumer NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\napic notification-templates:update [flags] --scope catalog --subcollection catalog NOTIFICATION_TEMPLATE NOTIFICATION_TEMPLATE_FILE\n"})}),"\n",(0,a.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'  -c, --catalog string         Catalog name or id (required)\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                   Help for notification-templates:update\n  -o, --org string             Organization name or id (required)\n      --output string          Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string           scope\n  -s, --server string          management server endpoint (required)\n      --space string           Space name or id (required)\n      --subcollection string   subcollection\n'})}),"\n",(0,a.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(t={}){const{wrapper:e}={...(0,n.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(r,{...t})}):r(t)}}}]);