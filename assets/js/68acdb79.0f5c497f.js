"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[5051],{28453:(e,i,s)=>{s.d(i,{R:()=>a,x:()=>o});var r=s(96540);const n={},t=r.createContext(n);function a(e){const i=r.useContext(t);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),r.createElement(t.Provider,{value:i},e.children)}},78199:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"v1008/apim/mail-servers/apic_mail-servers_update","title":"apic mail-servers:update","description":"Update the Mail Server object by name or id","source":"@site/docs/v1008/apim/mail-servers/apic_mail-servers_update.md","sourceDirName":"v1008/apim/mail-servers","slug":"/v1008/apim/mail-servers/apic_mail-servers_update","permalink":"/clidocs/docs/v1008/apim/mail-servers/apic_mail-servers_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/mail-servers/apic_mail-servers_update.md","tags":[{"inline":true,"label":"group: mail-servers","permalink":"/clidocs/docs/tags/group-mail-servers"}],"version":"current","frontMatter":{"tags":["group: mail-servers"]},"sidebar":"tutorialSidebar","previous":{"title":"apic mail-servers:test-connection","permalink":"/clidocs/docs/v1008/apim/mail-servers/apic_mail-servers_test-connection"},"next":{"title":"apic me","permalink":"/clidocs/docs/v1008/apim/me/apic_me"}}');var n=s(74848),t=s(28453);const a={tags:["group: mail-servers"]},o="apic mail-servers",l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsxs)(i.h1,{id:"apic-mail-servers",children:["apic mail-servers",":update"]})}),"\n",(0,n.jsx)(i.p,{children:"Update the Mail Server object by name or id"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Update the Mail Server object by name or id"}),"\n",(0,n.jsx)(i.p,{children:"Fields allowed but ignored:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"id"}),"\n",(0,n.jsx)(i.li,{children:"type"}),"\n",(0,n.jsx)(i.li,{children:"api_version"}),"\n",(0,n.jsx)(i.li,{children:"scope"}),"\n",(0,n.jsx)(i.li,{children:"created_at"}),"\n",(0,n.jsx)(i.li,{children:"updated_at"}),"\n",(0,n.jsx)(i.li,{children:"url"}),"\n"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic mail-servers:update [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"\n      apic mail-servers:update [flags] MAIL_SERVER MAIL_SERVER_FILE\n\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);