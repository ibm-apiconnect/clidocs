"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[99393],{28453:(e,i,o)=>{o.d(i,{R:()=>n,x:()=>t});var l=o(96540);const s={},a=l.createContext(s);function n(e){const i=l.useContext(a);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function t(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:n(e.components),l.createElement(a.Provider,{value:i},e.children)}},75155:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>c,contentTitle:()=>t,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>p});const l=JSON.parse('{"id":"v1008/apim/global-policies/apic_global-policies_update","title":"apic global-policies:update","description":"Global Policies update operations","source":"@site/docs/v1008/apim/global-policies/apic_global-policies_update.md","sourceDirName":"v1008/apim/global-policies","slug":"/v1008/apim/global-policies/apic_global-policies_update","permalink":"/clidocs/docs/v1008/apim/global-policies/apic_global-policies_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/global-policies/apic_global-policies_update.md","tags":[{"inline":true,"label":"group: global-policies","permalink":"/clidocs/docs/tags/group-global-policies"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: global-policies","scope: catalog","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic global-policies:list","permalink":"/clidocs/docs/v1008/apim/global-policies/apic_global-policies_list"},"next":{"title":"apic global-policy-errors","permalink":"/clidocs/docs/v1008/apim/global-policy-errors/apic_global-policy-errors"}}');var s=o(74848),a=o(28453);const n={tags:["group: global-policies","scope: catalog","scope: space"]},t="apic global-policies",c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function r(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsxs)(i.h1,{id:"apic-global-policies",children:["apic global-policies",":update"]})}),"\n",(0,s.jsx)(i.p,{children:"Global Policies update operations"}),"\n",(0,s.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(i.p,{children:"Global Policies update operations"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"apic global-policies:update [flags]\n"})}),"\n",(0,s.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"apic global-policies:update [flags] --id --scope space ID GLOBAL_POLICY_FILE\napic global-policies:update [flags] --id --scope catalog ID GLOBAL_POLICY_FILE\napic global-policies:update [flags] --scope space NAME:VERSION GLOBAL_POLICY_FILE\napic global-policies:update [flags] --scope catalog NAME:VERSION GLOBAL_POLICY_FILE\n"})}),"\n",(0,s.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for global-policies:update\n      --id                                  id\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n'})}),"\n",(0,s.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(r,{...e})}):r(e)}}}]);