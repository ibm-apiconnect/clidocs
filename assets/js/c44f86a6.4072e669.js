"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[62099],{28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>a});var r=i(96540);const n={},s=r.createContext(n);function o(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),r.createElement(s.Provider,{value:t},e.children)}},36264:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>o,metadata:()=>r,toc:()=>d});const r=JSON.parse('{"id":"v1005/apim/apic_draft-products_publish","title":"apic draft-products:publish","description":"Publish a draft product","source":"@site/docs/v1005/apim/apic_draft-products_publish.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_draft-products_publish","permalink":"/clidocs/docs/v1005/apim/apic_draft-products_publish","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_draft-products_publish.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic draft-products:list","permalink":"/clidocs/docs/v1005/apim/apic_draft-products_list"},"next":{"title":"apic draft-products:update","permalink":"/clidocs/docs/v1005/apim/apic_draft-products_update"}}');var n=i(74848),s=i(28453);const o={},a="apic draft-products",c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"apic-draft-products",children:["apic draft-products",":publish"]})}),"\n",(0,n.jsx)(t.p,{children:"Publish a draft product"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Publish a draft product"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic draft-products:publish [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'  -c, --catalog string            Catalog name or id (required)\n      --format string             Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --gateway_services string   The list of gateway service names to support partial publishing\n  -h, --help                      Help for draft-products:publish\n      --migrate_subscriptions     Migrate subscription when republish product\n  -o, --org string                Organization name or id (required)\n      --output string             Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string              scope\n  -s, --server string             management server endpoint (required)\n      --space string              Space name or id (required)\n      --stage                     stage\n'})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);