"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[142009],{28453:(e,n,o)=>{o.d(n,{R:()=>i,x:()=>c});var s=o(296540);const r={},t=s.createContext(r);function i(e){const n=s.useContext(t);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),s.createElement(t.Provider,{value:n},e.children)}},89728:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>a,contentTitle:()=>c,default:()=>u,frontMatter:()=>i,metadata:()=>s,toc:()=>d});const s=JSON.parse('{"id":"v1008/apim/consumer-orgs/apic_consumer-orgs_get","title":"apic consumer-orgs:get","description":"Get the Consumer Organization object by name or id","source":"@site/docs/v1008/apim/consumer-orgs/apic_consumer-orgs_get.md","sourceDirName":"v1008/apim/consumer-orgs","slug":"/v1008/apim/consumer-orgs/apic_consumer-orgs_get","permalink":"/clidocs/docs/v1008/apim/consumer-orgs/apic_consumer-orgs_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/consumer-orgs/apic_consumer-orgs_get.md","tags":[{"inline":true,"label":"group: consumer-orgs","permalink":"/clidocs/docs/tags/group-consumer-orgs"}],"version":"current","frontMatter":{"tags":["group: consumer-orgs"]},"sidebar":"tutorialSidebar","previous":{"title":"apic consumer-orgs:delete","permalink":"/clidocs/docs/v1008/apim/consumer-orgs/apic_consumer-orgs_delete"},"next":{"title":"apic consumer-orgs:list","permalink":"/clidocs/docs/v1008/apim/consumer-orgs/apic_consumer-orgs_list"}}');var r=o(474848),t=o(28453);const i={tags:["group: consumer-orgs"]},c="apic consumer-orgs",a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"apic-consumer-orgs",children:["apic consumer-orgs",":get"]})}),"\n",(0,r.jsx)(n.p,{children:"Get the Consumer Organization object by name or id"}),"\n",(0,r.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(n.p,{children:"Get the Consumer Organization object by name or id"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apic consumer-orgs:get [flags]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apic consumer-orgs:get [flags] --space-initiated CONSUMER_ORG\napic consumer-orgs:get [flags] CONSUMER_ORG\n"})}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,r.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);