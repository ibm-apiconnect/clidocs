"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[33047],{28453:(i,t,e)=>{e.d(t,{R:()=>r,x:()=>a});var n=e(96540);const s={},o=n.createContext(s);function r(i){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof i?i(t):{...t,...i}}),[t,i])}function a(i){let t;return t=i.disableParentContext?"function"==typeof i.components?i.components(s):i.components||s:r(i.components),n.createElement(o.Provider,{value:t},i.children)}},74040:(i,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"v1005/apim/apic_invitations_list","title":"apic invitations:list","description":"Invitations list operations","source":"@site/docs/v1005/apim/apic_invitations_list.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_invitations_list","permalink":"/clidocs/docs/v1005/apim/apic_invitations_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_invitations_list.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic invitations:get","permalink":"/clidocs/docs/v1005/apim/apic_invitations_get"},"next":{"title":"apic invitations:update","permalink":"/clidocs/docs/v1005/apim/apic_invitations_update"}}');var s=e(74848),o=e(28453);const r={},a="apic invitations",c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(i){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...i.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"apic-invitations",children:["apic invitations",":list"]})}),"\n",(0,s.jsx)(t.p,{children:"Invitations list operations"}),"\n",(0,s.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(t.p,{children:"Invitations list operations"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic invitations:list [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'  -c, --catalog string    Catalog name or id (required)\n      --fields string     List of field names to return\n      --format string     Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help              Help for invitations:list\n      --limit int32       Maximum number of items to return\n      --offset int32      Offset item number from list to begin return\n  -o, --org string        Organization name or id (required)\n      --output string     Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string      scope\n  -s, --server string     management server endpoint (required)\n      --space string      Space name or id (required)\n      --space-initiated   space-initiated\n'})}),"\n",(0,s.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(i={}){const{wrapper:t}={...(0,o.R)(),...i.components};return t?(0,s.jsx)(t,{...i,children:(0,s.jsx)(d,{...i})}):d(i)}}}]);