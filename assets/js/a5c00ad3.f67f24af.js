"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[60782],{77199:(e,t,o)=>{o.r(t),o.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>a,toc:()=>c});var n=o(74848),i=o(28453);const r={},s="apic role",a={id:"v1005/portaladmin/apic_role",title:"apic role",description:"Role operations",source:"@site/docs/v1005/portaladmin/apic_role.md",sourceDirName:"v1005/portaladmin",slug:"/v1005/portaladmin/apic_role",permalink:"/clidocs/docs/v1005/portaladmin/apic_role",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_role.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic queue:list",permalink:"/clidocs/docs/v1005/portaladmin/apic_queue_list"},next:{title:"apic role:add-permission",permalink:"/clidocs/docs/v1005/portaladmin/apic_role_add-permission"}},l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"apic-role",children:"apic role"})}),"\n",(0,n.jsx)(t.p,{children:"Role operations"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Role operations"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic role --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"  -c, --catalog string                Name or ID of the Catalog that the site belongs to. (required)\n      --filter_by_permission string   Limits the list of roles to only those that have been assigned the specified permission. May not be specified if a role argument is provided.\n      --format string                 Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                          Help for role\n  -o, --org string                    Name or ID of the organization that the catalog belongs to. (required)\n      --role string                   The name of the Drupal User Role.\n  -s, --server string                 management server endpoint (required)\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,o)=>{o.d(t,{R:()=>s,x:()=>a});var n=o(96540);const i={},r=n.createContext(i);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);