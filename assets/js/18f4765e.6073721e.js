"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[23131],{38479:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>u,frontMatter:()=>r,metadata:()=>c,toc:()=>a});var o=t(74848),i=t(28453);const r={},s="apic rules",c={id:"v1008/governance/apic_rules_get",title:"apic rules:get",description:"Download the Rule object as a file to the current directory by name:version or id",source:"@site/docs/v1008/governance/apic_rules_get.md",sourceDirName:"v1008/governance",slug:"/v1008/governance/apic_rules_get",permalink:"/clidocs/docs/v1008/governance/apic_rules_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/governance/apic_rules_get.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic rules:delete",permalink:"/clidocs/docs/v1008/governance/apic_rules_delete"},next:{title:"apic rules:list-all",permalink:"/clidocs/docs/v1008/governance/apic_rules_list-all"}},l={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(n.h1,{id:"apic-rules",children:["apic rules",":get"]}),"\n",(0,o.jsxs)(n.p,{children:["Download the Rule object as a file to the current directory by name",":version"," or id"]}),"\n",(0,o.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsxs)(n.p,{children:["Download the Rule object as a file to the current directory by name",":version",". If you would like to use the id of the Rule object the --id flag must be specified followed by the id of the Rule object."]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"apic rules:get --mode governance [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"      apic rules:get --mode governance [flags] --id ID\n      apic rules:get --mode governance [flags] NAME:VERSION\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --ruleset string   Ruleset name or id (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>s,x:()=>c});var o=t(96540);const i={},r=o.createContext(i);function s(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:s(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);