"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[98509],{3063:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var n=t(74848),i=t(28453);const s={},r="apic webhooks",a={id:"v1005/apim/apic_webhooks_update",title:"apic webhooks:update",description:"Webhooks update operations",source:"@site/docs/v1005/apim/apic_webhooks_update.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_webhooks_update",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_webhooks_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_webhooks_update.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic webhooks:list",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_webhooks_list"},next:{title:"apic wsdl",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_wsdl"}},c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.h1,{id:"apic-webhooks",children:["apic webhooks",":update"]}),"\n",(0,n.jsx)(o.p,{children:"Webhooks update operations"}),"\n",(0,n.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(o.p,{children:"Webhooks update operations"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:"apic webhooks:update [flags]\n"})}),"\n",(0,n.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for webhooks:update\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,n.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>r,x:()=>a});var n=t(96540);const i={},s=n.createContext(i);function r(e){const o=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(s.Provider,{value:o},e.children)}}}]);