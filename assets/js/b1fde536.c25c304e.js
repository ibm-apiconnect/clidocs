"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[74611],{28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>a});var o=s(296540);const i={},r=o.createContext(i);function n(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:n(e.components),o.createElement(r.Provider,{value:t},e.children)}},748887:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>n,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"v1009/apim/products/apic_products_set-migration-target","title":"apic products:set-migration-target","description":"Products set-migration-target operations","source":"@site/docs/v1009/apim/products/apic_products_set-migration-target.md","sourceDirName":"v1009/apim/products","slug":"/v1009/apim/products/apic_products_set-migration-target","permalink":"/clidocs/docs/v1009/apim/products/apic_products_set-migration-target","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/products/apic_products_set-migration-target.md","tags":[{"inline":true,"label":"group: products","permalink":"/clidocs/docs/tags/group-products"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: products","scope: catalog","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic products:replace","permalink":"/clidocs/docs/v1009/apim/products/apic_products_replace"},"next":{"title":"apic products:supersede","permalink":"/clidocs/docs/v1009/apim/products/apic_products_supersede"}}');var i=s(474848),r=s(28453);const n={tags:["group: products","scope: catalog","scope: space"]},a="apic products",c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsxs)(t.h1,{id:"apic-products",children:["apic products",":set-migration-target"]})}),"\n",(0,i.jsx)(t.p,{children:"Products set-migration-target operations"}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:"Products set-migration-target operations"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic products:set-migration-target [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic products:set-migration-target [flags] --id --scope space ID PRODUCT_PLAN_MAPPING_FILE\napic products:set-migration-target [flags] --id --scope catalog ID PRODUCT_PLAN_MAPPING_FILE\napic products:set-migration-target [flags] --scope space NAME:VERSION PRODUCT_PLAN_MAPPING_FILE\napic products:set-migration-target [flags] --scope catalog NAME:VERSION PRODUCT_PLAN_MAPPING_FILE\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for products:set-migration-target\n      --id               id\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n      --space string     Space name or id (required)\n'})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);