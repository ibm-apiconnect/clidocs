"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[32281],{28453:(e,t,a)=>{a.d(t,{R:()=>r,x:()=>d});var n=a(96540);const i={},o=n.createContext(i);function r(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function d(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:r(e.components),n.createElement(o.Provider,{value:t},e.children)}},66270:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>s,contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"v1005/portaladmin/apic_api_add-tag","title":"apic api:add-tag","description":"Add a tag for the given api.","source":"@site/docs/v1005/portaladmin/apic_api_add-tag.md","sourceDirName":"v1005/portaladmin","slug":"/v1005/portaladmin/apic_api_add-tag","permalink":"/clidocs/docs/v1005/portaladmin/apic_api_add-tag","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_api_add-tag.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic api:add-attachment","permalink":"/clidocs/docs/v1005/portaladmin/apic_api_add-attachment"},"next":{"title":"apic api:get-document","permalink":"/clidocs/docs/v1005/portaladmin/apic_api_get-document"}}');var i=a(74848),o=a(28453);const r={},d="apic api",s={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsxs)(t.h1,{id:"apic-api",children:["apic api",":add-tag"]})}),"\n",(0,i.jsx)(t.p,{children:"Add a tag for the given api."}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsxs)(t.p,{children:["Add a tag for a api within the developer portal of the provided org and catalog. The id or name",":version"," of a specific api needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'."]}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic api:add-tag --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"  -c, --catalog string    Name or ID of the Catalog that the site belongs to. (required)\n      --format string     Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help              Help for api:add-tag\n  -o, --org string        Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string     management server endpoint (required)\n      --tag_name string   The tag name e.g. top_level_element/next_level_element (required)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(c,{...e})}):c(e)}}}]);