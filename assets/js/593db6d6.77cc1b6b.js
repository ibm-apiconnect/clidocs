"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[256526],{28453:(e,n,s)=>{s.d(n,{R:()=>t,x:()=>a});var r=s(296540);const o={},i=r.createContext(o);function t(e){const n=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:t(e.components),r.createElement(i.Provider,{value:n},e.children)}},928028:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>t,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"v10010/apim/consumer-orgs/apic_consumer-orgs_update","title":"apic consumer-orgs:update","description":"Update the Consumer Organization object by name or id","source":"@site/docs/v10010/apim/consumer-orgs/apic_consumer-orgs_update.md","sourceDirName":"v10010/apim/consumer-orgs","slug":"/v10010/apim/consumer-orgs/apic_consumer-orgs_update","permalink":"/clidocs/docs/v10010/apim/consumer-orgs/apic_consumer-orgs_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/consumer-orgs/apic_consumer-orgs_update.md","tags":[{"inline":true,"label":"group: consumer-orgs","permalink":"/clidocs/docs/tags/group-consumer-orgs"}],"version":"current","frontMatter":{"tags":["group: consumer-orgs"]},"sidebar":"tutorialSidebar","previous":{"title":"apic consumer-orgs:transfer-owner","permalink":"/clidocs/docs/v10010/apim/consumer-orgs/apic_consumer-orgs_transfer-owner"},"next":{"title":"apic create","permalink":"/clidocs/docs/v10010/apim/create/apic_create"}}');var o=s(474848),i=s(28453);const t={tags:["group: consumer-orgs"]},a="apic consumer-orgs",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"Example consumer org update at space scope.",id:"example-consumer-org-update-at-space-scope",level:4},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"apic-consumer-orgs",children:["apic consumer-orgs",":update"]})}),"\n",(0,o.jsx)(n.p,{children:"Update the Consumer Organization object by name or id"}),"\n",(0,o.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(n.p,{children:"Update the Consumer Organization object by name or id"}),"\n",(0,o.jsx)(n.p,{children:"Fields allowed but ignored:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"id"}),"\n",(0,o.jsx)(n.li,{children:"type"}),"\n",(0,o.jsx)(n.li,{children:"api_version"}),"\n",(0,o.jsx)(n.li,{children:"scope"}),"\n",(0,o.jsx)(n.li,{children:"created_at"}),"\n",(0,o.jsx)(n.li,{children:"updated_at"}),"\n",(0,o.jsx)(n.li,{children:"url"}),"\n",(0,o.jsx)(n.li,{children:"org_url"}),"\n",(0,o.jsx)(n.li,{children:"catalog_url"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"apic consumer-orgs:update [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"apic consumer-orgs:update [flags] --space-initiated CONSUMER_ORG CONSUMER_ORG_FILE\napic consumer-orgs:update [flags] CONSUMER_ORG CONSUMER_ORG_FILE\n"})}),"\n",(0,o.jsx)(n.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.h4,{id:"example-consumer-org-update-at-space-scope",children:"Example consumer org update at space scope."}),"\n",(0,o.jsx)(n.hr,{}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"summary: An example consumer org update\ntitle: ACME Consumer Org Updated\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);