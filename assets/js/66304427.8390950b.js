"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[87771],{64756:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>a,contentTitle:()=>s,default:()=>l,frontMatter:()=>o,metadata:()=>d,toc:()=>c});var n=t(74848),r=t(28453);const o={},s="apic oauth-providers",d={id:"v1008/apim/apic_oauth-providers_update",title:"apic oauth-providers:update",description:"Update the Oauth Provider object by name or id",source:"@site/docs/v1008/apim/apic_oauth-providers_update.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_oauth-providers_update",permalink:"/clidocs/docs/v1008/apim/apic_oauth-providers_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_oauth-providers_update.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic oauth-providers:list",permalink:"/clidocs/docs/v1008/apim/apic_oauth-providers_list"},next:{title:"apic org-settings",permalink:"/clidocs/docs/v1008/apim/apic_org-settings"}},a={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsxs)(i.h1,{id:"apic-oauth-providers",children:["apic oauth-providers",":update"]})}),"\n",(0,n.jsx)(i.p,{children:"Update the Oauth Provider object by name or id"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Update the Oauth Provider object by name or id"}),"\n",(0,n.jsx)(i.p,{children:"Fields allowed but ignored:"}),"\n",(0,n.jsxs)(i.ul,{children:["\n",(0,n.jsx)(i.li,{children:"id"}),"\n",(0,n.jsx)(i.li,{children:"type"}),"\n",(0,n.jsx)(i.li,{children:"api_version"}),"\n",(0,n.jsx)(i.li,{children:"scope"}),"\n",(0,n.jsx)(i.li,{children:"created_at"}),"\n",(0,n.jsx)(i.li,{children:"updated_at"}),"\n",(0,n.jsx)(i.li,{children:"url"}),"\n",(0,n.jsx)(i.li,{children:"org_url"}),"\n"]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic oauth-providers:update [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"      apic oauth-providers:update [flags] OAUTH_PROVIDER OAUTH_PROVIDER_FILE\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>d});var n=t(96540);const r={},o=n.createContext(r);function s(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(o.Provider,{value:i},e.children)}}}]);