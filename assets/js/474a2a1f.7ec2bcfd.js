"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[27939],{84898:(n,i,e)=>{e.r(i),e.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>p,frontMatter:()=>t,metadata:()=>s,toc:()=>g});var o=e(74848),a=e(28453);const t={tags:["group: notification-languages","scope: catalog"]},c="apic notification-languages",s={id:"v1008/apim/notification-languages/apic_notification-languages_get",title:"apic notification-languages:get",description:"Notification Languages get operations",source:"@site/docs/v1008/apim/notification-languages/apic_notification-languages_get.md",sourceDirName:"v1008/apim/notification-languages",slug:"/v1008/apim/notification-languages/apic_notification-languages_get",permalink:"/clidocs/docs/v1008/apim/notification-languages/apic_notification-languages_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/notification-languages/apic_notification-languages_get.md",tags:[{inline:!0,label:"group: notification-languages",permalink:"/clidocs/docs/tags/group-notification-languages"},{inline:!0,label:"scope: catalog",permalink:"/clidocs/docs/tags/scope-catalog"}],version:"current",frontMatter:{tags:["group: notification-languages","scope: catalog"]},sidebar:"tutorialSidebar",previous:{title:"apic notification-languages",permalink:"/clidocs/docs/v1008/apim/notification-languages/apic_notification-languages"},next:{title:"apic notification-languages:list",permalink:"/clidocs/docs/v1008/apim/notification-languages/apic_notification-languages_list"}},l={},g=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function r(n){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...n.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsxs)(i.h1,{id:"apic-notification-languages",children:["apic notification-languages",":get"]})}),"\n",(0,o.jsx)(i.p,{children:"Notification Languages get operations"}),"\n",(0,o.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(i.p,{children:"Notification Languages get operations"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"apic notification-languages:get [flags]\n"})}),"\n",(0,o.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"\n      apic notification-languages:get [flags] --scope space --subcollection space NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope space --subcollection consumer NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope org --subcollection space NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope org --subcollection provider NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope org --subcollection consumer NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope org --subcollection catalog NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope org --subcollection admin NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope cloud --subcollection space NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope cloud --subcollection provider NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope cloud --subcollection consumer NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope cloud --subcollection cloud NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope cloud --subcollection catalog NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope cloud --subcollection admin NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope catalog --subcollection space NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope catalog --subcollection consumer NOTIFICATION_LANGUAGE\n      apic notification-languages:get [flags] --scope catalog --subcollection catalog NOTIFICATION_LANGUAGE\n\n"})}),"\n",(0,o.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"  -c, --catalog string                 Catalog name or id (required)\n      --format string                  Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                           Help for notification-languages:get\n      --notification-template string   Notification Template name or id (required)\n  -o, --org string                     Organization name or id (required)\n      --output string                  Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --scope string                   scope\n  -s, --server string                  management server endpoint (required)\n      --space string                   Space name or id (required)\n      --subcollection string           subcollection\n"})}),"\n",(0,o.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(n={}){const{wrapper:i}={...(0,a.R)(),...n.components};return i?(0,o.jsx)(i,{...n,children:(0,o.jsx)(r,{...n})}):r(n)}},28453:(n,i,e)=>{e.d(i,{R:()=>c,x:()=>s});var o=e(96540);const a={},t=o.createContext(a);function c(n){const i=o.useContext(t);return o.useMemo((function(){return"function"==typeof n?n(i):{...i,...n}}),[i,n])}function s(n){let i;return i=n.disableParentContext?"function"==typeof n.components?n.components(a):n.components||a:c(n.components),o.createElement(t.Provider,{value:i},n.children)}}}]);