"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[75849],{28453:(e,l,i)=>{i.d(l,{R:()=>c,x:()=>n});var o=i(96540);const a={},s=o.createContext(a);function c(e){const l=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(l):{...l,...e}}),[l,e])}function n(e){let l;return l=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:c(e.components),o.createElement(s.Provider,{value:l},e.children)}},53351:(e,l,i)=>{i.r(l),i.d(l,{assets:()=>r,contentTitle:()=>n,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>t});const o=JSON.parse('{"id":"v1008/apim/global-policies/apic_global-policies_clear-all","title":"apic global-policies:clear-all","description":"Global Policies clear-all operations","source":"@site/docs/v1008/apim/global-policies/apic_global-policies_clear-all.md","sourceDirName":"v1008/apim/global-policies","slug":"/v1008/apim/global-policies/apic_global-policies_clear-all","permalink":"/clidocs/docs/v1008/apim/global-policies/apic_global-policies_clear-all","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/global-policies/apic_global-policies_clear-all.md","tags":[{"inline":true,"label":"group: global-policies","permalink":"/clidocs/docs/tags/group-global-policies"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: global-policies","scope: catalog","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic global-policies","permalink":"/clidocs/docs/v1008/apim/global-policies/apic_global-policies"},"next":{"title":"apic global-policies:clear","permalink":"/clidocs/docs/v1008/apim/global-policies/apic_global-policies_clear"}}');var a=i(74848),s=i(28453);const c={tags:["group: global-policies","scope: catalog","scope: space"]},n="apic global-policies",r={},t=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const l={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(l.header,{children:(0,a.jsxs)(l.h1,{id:"apic-global-policies",children:["apic global-policies",":clear-all"]})}),"\n",(0,a.jsx)(l.p,{children:"Global Policies clear-all operations"}),"\n",(0,a.jsx)(l.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(l.p,{children:"Global Policies clear-all operations"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{children:"apic global-policies:clear-all [flags]\n"})}),"\n",(0,a.jsx)(l.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{children:"apic global-policies:clear-all [flags] --scope space\napic global-policies:clear-all [flags] --scope catalog\n"})}),"\n",(0,a.jsx)(l.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --confirm string                      Confirmation for critical updates (required)\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for global-policies:clear-all\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n'})}),"\n",(0,a.jsx)(l.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(l.pre,{children:(0,a.jsx)(l.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:l}={...(0,s.R)(),...e.components};return l?(0,a.jsx)(l,{...e,children:(0,a.jsx)(p,{...e})}):p(e)}}}]);