"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[59579],{28453:(t,i,e)=>{e.d(i,{R:()=>a,x:()=>r});var n=e(96540);const s={},o=n.createContext(s);function a(t){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof t?t(i):{...i,...t}}),[i,t])}function r(t){let i;return i=t.disableParentContext?"function"==typeof t.components?t.components(s):t.components||s:a(t.components),n.createElement(o.Provider,{value:i},t.children)}},55482:(t,i,e)=>{e.r(i),e.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v1005/apim/apic_activations_list","title":"apic activations:list","description":"Activations list operations","source":"@site/docs/v1005/apim/apic_activations_list.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_activations_list","permalink":"/clidocs/docs/v1005/apim/apic_activations_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_activations_list.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic activations:get","permalink":"/clidocs/docs/v1005/apim/apic_activations_get"},"next":{"title":"apic analytics-services","permalink":"/clidocs/docs/v1005/apim/apic_analytics-services"}}');var s=e(74848),o=e(28453);const a={},r="apic activations",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(t){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsxs)(i.h1,{id:"apic-activations",children:["apic activations",":list"]})}),"\n",(0,s.jsx)(i.p,{children:"Activations list operations"}),"\n",(0,s.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(i.p,{children:"Activations list operations"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"apic activations:list [flags]\n"})}),"\n",(0,s.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for activations:list\n      --limit int32      Maximum number of items to return\n      --offset int32     Offset item number from list to begin return\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,s.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(t={}){const{wrapper:i}={...(0,o.R)(),...t.components};return i?(0,s.jsx)(i,{...t,children:(0,s.jsx)(p,{...t})}):p(t)}}}]);