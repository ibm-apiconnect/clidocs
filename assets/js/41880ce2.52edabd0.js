"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[45904],{28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const o={},s=i.createContext(o);function r(e){const t=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:t},e.children)}},76938:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"v1008/portaladmin/site/apic_site_content-refresh","title":"apic site:content-refresh","description":"Triggers a site level content refresh of the Developer Portal configuration from API Manager.","source":"@site/docs/v1008/portaladmin/site/apic_site_content-refresh.md","sourceDirName":"v1008/portaladmin/site","slug":"/v1008/portaladmin/site/apic_site_content-refresh","permalink":"/clidocs/docs/v1008/portaladmin/site/apic_site_content-refresh","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/site/apic_site_content-refresh.md","tags":[{"inline":true,"label":"group: site","permalink":"/clidocs/docs/tags/group-site"}],"version":"current","frontMatter":{"tags":["group: site"]},"sidebar":"tutorialSidebar","previous":{"title":"apic site:content-refresh-status","permalink":"/clidocs/docs/v1008/portaladmin/site/apic_site_content-refresh-status"},"next":{"title":"apic site:create-export","permalink":"/clidocs/docs/v1008/portaladmin/site/apic_site_create-export"}}');var o=n(74848),s=n(28453);const r={tags:["group: site"]},a="apic site",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsxs)(t.h1,{id:"apic-site",children:["apic site",":content-refresh"]})}),"\n",(0,o.jsx)(t.p,{children:"Triggers a site level content refresh of the Developer Portal configuration from API Manager."}),"\n",(0,o.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(t.p,{children:"Triggers a site level content refresh of the Developer Portal configuration from API Manager."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"apic site:content-refresh --mode portaladmin [flags]\n"})}),"\n",(0,o.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"apic site:content-refresh --mode portaladmin [flags]\n"})}),"\n",(0,o.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,o.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}}}]);