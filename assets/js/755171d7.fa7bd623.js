"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[86010],{8651:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>t,contentTitle:()=>i,default:()=>d,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var c=s(74848),o=s(28453);const a={},i="apic scans",r={id:"v1008/governance/apic_scans_clear",title:"apic scans:clear",description:"Scans clear operations",source:"@site/docs/v1008/governance/apic_scans_clear.md",sourceDirName:"v1008/governance",slug:"/v1008/governance/apic_scans_clear",permalink:"/ibm-apiconnect/clidocs/docs/v1008/governance/apic_scans_clear",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/governance/apic_scans_clear.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic scans",permalink:"/ibm-apiconnect/clidocs/docs/v1008/governance/apic_scans"},next:{title:"apic scans:delete",permalink:"/ibm-apiconnect/clidocs/docs/v1008/governance/apic_scans_delete"}},t={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsxs)(n.h1,{id:"apic-scans",children:["apic scans",":clear"]}),"\n",(0,c.jsx)(n.p,{children:"Scans clear operations"}),"\n",(0,c.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,c.jsx)(n.p,{children:"Scans clear operations"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"apic scans:clear --mode governance [flags]\n"})}),"\n",(0,c.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"      apic scans:clear --mode governance [flags] --scope space\n      apic scans:clear --mode governance [flags] --scope org\n      apic scans:clear --mode governance [flags] --scope catalog\n"})}),"\n",(0,c.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'  -c, --catalog string    Catalog name or id (required)\n      --confirm string    Confirmation for critical updates (required)\n      --format string     Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help              Help for scans:clear\n  -o, --org string        Organization name or id (required)\n      --output string     Write file(s) to directory, instead of STDOUT (default "-")\n      --scan_ids string   Optional comma separated list of Scan IDs to perform bulk operations.\n      --scope string      scope\n  -s, --server string     management server endpoint (required)\n      --space string      Space name or id (required)\n'})}),"\n",(0,c.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(p,{...e})}):p(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>i,x:()=>r});var c=s(96540);const o={},a=c.createContext(o);function i(e){const n=c.useContext(a);return c.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:i(e.components),c.createElement(a.Provider,{value:n},e.children)}}}]);