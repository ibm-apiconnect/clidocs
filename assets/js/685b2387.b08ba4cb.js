"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[45778],{24021:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>s,contentTitle:()=>d,default:()=>p,frontMatter:()=>a,metadata:()=>c,toc:()=>l});var t=i(74848),o=i(28453);const a={},d="apic validate",c={id:"v1008/governance/apic_validate",title:"apic validate",description:"Validate an API or product definition",source:"@site/docs/v1008/governance/apic_validate.md",sourceDirName:"v1008/governance",slug:"/v1008/governance/apic_validate",permalink:"/clidocs/docs/v1008/governance/apic_validate",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/governance/apic_validate.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic test",permalink:"/clidocs/docs/v1008/governance/apic_test"},next:{title:"apic version",permalink:"/clidocs/docs/v1008/governance/apic_version"}},s={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function r(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.h1,{id:"apic-validate",children:"apic validate"}),"\n",(0,t.jsx)(n.p,{children:"Validate an API or product definition"}),"\n",(0,t.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsxs)(n.p,{children:[(0,t.jsx)(n.code,{children:"apic validate"})," does offline validation. For online validation, use ",(0,t.jsx)(n.code,{children:"draft-apis:validate"}),", which does additional validation as would be done during stage/publish time."]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apic validate [FILE] --mode governance [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"Validate an API definition\n  $ apic validate routes.yaml\n  Validated routes.yaml API definition [routes:1.0]\nValidate an API definition without IBM extensions\n  $ apic validate --no-extensions routes.yaml\n  Validated routes.yaml API definition [routes:1.0]\nValidate a product definition and its referenced APIs\n  $ apic validate climb-on.yaml\n  Validated climb-on.yaml product definition [climb-on:1.0.0]\n  Validated routes.yaml API definition [valid:1.0]\nValidate a product definition without validating its referenced APIs\n  $ apic validate --product-only climb-on.yaml\n  Validated climb-on.yaml product definition [climb-on:1.0.0]\n\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -h, --help            Help for validate\n      --no-extensions   for API definitions, do not validate against IBM Swagger extensions\n  -p, --product-only    for products definitions, do not validate referenced APIs\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(r,{...e})}):r(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>d,x:()=>c});var t=i(96540);const o={},a=t.createContext(o);function d(e){const n=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:d(e.components),t.createElement(a.Provider,{value:n},e.children)}}}]);