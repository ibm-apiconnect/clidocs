"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[56029],{28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>o});var n=a(96540);const s={},r=n.createContext(s);function i(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),n.createElement(r.Provider,{value:t},e.children)}},65447:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>l,contentTitle:()=>o,default:()=>c,frontMatter:()=>i,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"v1008/portaladmin/drupal-state/apic_drupal-state_set","title":"apic drupal-state:set","description":"Set a state key value.","source":"@site/docs/v1008/portaladmin/drupal-state/apic_drupal-state_set.md","sourceDirName":"v1008/portaladmin/drupal-state","slug":"/v1008/portaladmin/drupal-state/apic_drupal-state_set","permalink":"/clidocs/docs/v1008/portaladmin/drupal-state/apic_drupal-state_set","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/drupal-state/apic_drupal-state_set.md","tags":[{"inline":true,"label":"group: drupal-state","permalink":"/clidocs/docs/tags/group-drupal-state"}],"version":"current","frontMatter":{"tags":["group: drupal-state"]},"sidebar":"tutorialSidebar","previous":{"title":"apic drupal-state:get","permalink":"/clidocs/docs/v1008/portaladmin/drupal-state/apic_drupal-state_get"},"next":{"title":"apic entity","permalink":"/clidocs/docs/v1008/portaladmin/entity/apic_entity"}}');var s=a(74848),r=a(28453);const i={tags:["group: drupal-state"]},o="apic drupal-state",l={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"apic-drupal-state",children:["apic drupal-state",":set"]})}),"\n",(0,s.jsx)(t.p,{children:"Set a state key value."}),"\n",(0,s.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(t.p,{children:"Can set a new state value or update an already existing key-value."}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic drupal-state:set --mode portaladmin [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic drupal-state:set --mode portaladmin [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'  -c, --catalog string        Name or ID of the Catalog that the site belongs to. (required)\n      --format string         Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --input_format string   The input format of the value for the state key. Values: string, integer, float, boolean, json, yaml. [default: auto]\n  -o, --org string            Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string         management server endpoint (required)\n      --state_key string      The state key, for example "system.cron_last". (required)\n      --state_value string    The value to assign to the state key. (required)\n'})}),"\n",(0,s.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function c(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}}}]);