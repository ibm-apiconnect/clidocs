"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[50333],{42217:(i,t,e)=>{e.r(t),e.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>p});var n=e(74848),o=e(28453);const a={},s="apic invitations",r={id:"v1005/apim/apic_invitations_update",title:"apic invitations:update",description:"Invitations update operations",source:"@site/docs/v1005/apim/apic_invitations_update.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_invitations_update",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_invitations_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_invitations_update.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic invitations:list",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_invitations_list"},next:{title:"apic jobs",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_jobs"}},c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(i){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...i.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h1,{id:"apic-invitations",children:["apic invitations",":update"]}),"\n",(0,n.jsx)(t.p,{children:"Invitations update operations"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Invitations update operations"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic invitations:update [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'  -c, --catalog string    Catalog name or id (required)\n      --format string     Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help              Help for invitations:update\n  -o, --org string        Organization name or id (required)\n      --output string     Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string      scope\n  -s, --server string     management server endpoint (required)\n      --space string      Space name or id (required)\n      --space-initiated   space-initiated\n'})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(i={}){const{wrapper:t}={...(0,o.R)(),...i.components};return t?(0,n.jsx)(t,{...i,children:(0,n.jsx)(d,{...i})}):d(i)}},28453:(i,t,e)=>{e.d(t,{R:()=>s,x:()=>r});var n=e(96540);const o={},a=n.createContext(o);function s(i){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof i?i(t):{...t,...i}}),[t,i])}function r(i){let t;return t=i.disableParentContext?"function"==typeof i.components?i.components(o):i.components||o:s(i.components),n.createElement(a.Provider,{value:t},i.children)}}}]);