"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[70318],{28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var o=r(96540);const n={},i=o.createContext(n);function s(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),o.createElement(i.Provider,{value:t},e.children)}},73815:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>d,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"v1005/portaladmin/apic_user_add-role","title":"apic user:add-role","description":"Add a singular or multiple roles to the specified Drupal User accounts.","source":"@site/docs/v1005/portaladmin/apic_user_add-role.md","sourceDirName":"v1005/portaladmin","slug":"/v1005/portaladmin/apic_user_add-role","permalink":"/clidocs/docs/v1005/portaladmin/apic_user_add-role","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_user_add-role.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic user","permalink":"/clidocs/docs/v1005/portaladmin/apic_user"},"next":{"title":"apic user:block","permalink":"/clidocs/docs/v1005/portaladmin/apic_user_block"}}');var n=r(74848),i=r(28453);const s={},a="apic user",d={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"apic-user",children:["apic user",":add-role"]})}),"\n",(0,n.jsx)(t.p,{children:"Add a singular or multiple roles to the specified Drupal User accounts."}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Add a singular or multiple roles to the specified Drupal User accounts. You need to provide either the mail, username, or the UID of the Drupal User account."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic user:add-role --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for user:add-role\n      --mail string      A comma-separated list of Drupal User Email addresses to perform the action on.\n      --names string     A comma-separated list of names of Drupal Users to perform the action on.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n      --role string      The name of the Drupal User Role. (required)\n  -s, --server string    management server endpoint (required)\n      --uid string       A comma-separated list of UIDs of Drupal Users to perform the action on.\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);