"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[27081],{87786:(e,n,o)=>{o.r(n),o.d(n,{assets:()=>p,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>r});const i=JSON.parse('{"id":"v1009/apim/completion/apic_completion_zsh","title":"apic completion zsh","description":"Generate the autocompletion script for zsh","source":"@site/docs/v1009/apim/completion/apic_completion_zsh.md","sourceDirName":"v1009/apim/completion","slug":"/v1009/apim/completion/apic_completion_zsh","permalink":"/clidocs/docs/v1009/apim/completion/apic_completion_zsh","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/completion/apic_completion_zsh.md","tags":[{"inline":true,"label":"group: completion","permalink":"/clidocs/docs/tags/group-completion"}],"version":"current","frontMatter":{"tags":["group: completion"]},"sidebar":"tutorialSidebar","previous":{"title":"apic completion powershell","permalink":"/clidocs/docs/v1009/apim/completion/apic_completion_powershell"},"next":{"title":"apic config","permalink":"/clidocs/docs/v1009/apim/config/apic_config"}}');var t=o(74848),c=o(28453);const s={tags:["group: completion"]},l="apic completion zsh",p={},r=[{value:"Synopsis",id:"synopsis",level:2},{value:"Linux",id:"linux",level:3},{value:"macOS",id:"macos",level:3},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function a(e){const n={code:"code",h1:"h1",h2:"h2",h3:"h3",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsx)(n.h1,{id:"apic-completion-zsh",children:"apic completion zsh"})}),"\n",(0,t.jsx)(n.p,{children:"Generate the autocompletion script for zsh"}),"\n",(0,t.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:"Generate the autocompletion script for the zsh shell."}),"\n",(0,t.jsx)(n.p,{children:"If shell completion is not already enabled in your environment you will need\nto enable it.  You can execute the following once:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'echo "autoload -U compinit; compinit" >> ~/.zshrc'})}),"\n",(0,t.jsx)(n.p,{children:"To load completions in your current shell session:"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"source <(apic completion zsh)"})}),"\n",(0,t.jsx)(n.p,{children:"To load completions for every new session, execute once:"}),"\n",(0,t.jsx)(n.h3,{id:"linux",children:"Linux"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:'apic completion zsh > "${fpath[1]}/_apic"'})}),"\n",(0,t.jsx)(n.h3,{id:"macos",children:"macOS"}),"\n",(0,t.jsx)(n.p,{children:(0,t.jsx)(n.code,{children:"apic completion zsh > $(brew --prefix)/share/zsh/site-functions/_apic"})}),"\n",(0,t.jsx)(n.p,{children:"You will need to start a new shell for this setup to take effect."}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apic completion zsh [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -h, --help              help for zsh\n      --no-descriptions   disable completion descriptions\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(a,{...e})}):a(e)}},28453:(e,n,o)=>{o.d(n,{R:()=>s,x:()=>l});var i=o(96540);const t={},c=i.createContext(t);function s(e){const n=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:s(e.components),i.createElement(c.Provider,{value:n},e.children)}}}]);