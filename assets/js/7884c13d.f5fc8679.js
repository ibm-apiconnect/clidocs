"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[105511],{28453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>s});var o=n(296540);const i={},r=o.createContext(i);function a(t){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function s(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),o.createElement(r.Provider,{value:e},t.children)}},856732:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>s,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>c});const o=JSON.parse('{"id":"v1005/portaladmin/apic_export-entity_add-content","title":"apic export-entity:add-content","description":"Add content to an export entity","source":"@site/docs/v1005/portaladmin/apic_export-entity_add-content.md","sourceDirName":"v1005/portaladmin","slug":"/v1005/portaladmin/apic_export-entity_add-content","permalink":"/clidocs/docs/v1005/portaladmin/apic_export-entity_add-content","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_export-entity_add-content.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic export-entity","permalink":"/clidocs/docs/v1005/portaladmin/apic_export-entity"},"next":{"title":"apic export-entity:create","permalink":"/clidocs/docs/v1005/portaladmin/apic_export-entity_create"}}');var i=n(474848),r=n(28453);const a={},s="apic export-entity",d={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsxs)(e.h1,{id:"apic-export-entity",children:["apic export-entity",":add-content"]})}),"\n",(0,i.jsx)(e.p,{children:"Add content to an export entity"}),"\n",(0,i.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(e.p,{children:"Add content to an existing export entity. Provide the content type and IDs that you wish to add to this export entity."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"apic export-entity:add-content --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"  -c, --catalog string            Name or ID of the Catalog that the site belongs to. (required)\n      --entity_ids string         A comma-separated list of Content IDs.\n      --entity_type string        Type of content you want to perform this operation on. To find out content types see the content list-types route. (required)\n      --export_entity_id string   ID of the export entity (required)\n      --format string             Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                      Help for export-entity:add-content\n  -o, --org string                Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string             management server endpoint (required)\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(p,{...t})}):p(t)}}}]);