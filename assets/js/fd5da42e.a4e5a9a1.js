"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[988918],{28453:(e,r,o)=>{o.d(r,{R:()=>t,x:()=>a});var s=o(296540);const n={},i=s.createContext(n);function t(e){const r=s.useContext(i);return s.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),s.createElement(i.Provider,{value:r},e.children)}},188801:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"v10010/apim/roles/apic_roles_create","title":"apic roles:create","description":"Roles create operations","source":"@site/docs/v10010/apim/roles/apic_roles_create.md","sourceDirName":"v10010/apim/roles","slug":"/v10010/apim/roles/apic_roles_create","permalink":"/clidocs/docs/v10010/apim/roles/apic_roles_create","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/roles/apic_roles_create.md","tags":[{"inline":true,"label":"group: roles","permalink":"/clidocs/docs/tags/group-roles"},{"inline":true,"label":"scope: org","permalink":"/clidocs/docs/tags/scope-org"}],"version":"current","frontMatter":{"tags":["group: roles","scope: org"]},"sidebar":"tutorialSidebar","previous":{"title":"apic roles:clear","permalink":"/clidocs/docs/v10010/apim/roles/apic_roles_clear"},"next":{"title":"apic roles:delete","permalink":"/clidocs/docs/v10010/apim/roles/apic_roles_delete"}}');var n=o(474848),i=o(28453);const t={tags:["group: roles","scope: org"]},a="apic roles",l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"Example of role creation at org scope with external_group_mapping enabled.",id:"example-of-role-creation-at-org-scope-with-external_group_mapping-enabled",level:4},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const r={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsxs)(r.h1,{id:"apic-roles",children:["apic roles",":create"]})}),"\n",(0,n.jsx)(r.p,{children:"Roles create operations"}),"\n",(0,n.jsx)(r.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(r.p,{children:"Roles create operations"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"apic roles:create [flags]\n"})}),"\n",(0,n.jsx)(r.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"apic roles:create [flags] --scope org ROLE_FILE\n"})}),"\n",(0,n.jsx)(r.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h4,{id:"example-of-role-creation-at-org-scope-with-external_group_mapping-enabled",children:"Example of role creation at org scope with external_group_mapping enabled."}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"external_group_mapping:\n  ldap_groups:\n  - cn=CloudAdmins,ou=groups,dc=apic,dc=com\n  user_group_filter_prefix: (&(uniquemember=\n  user_group_filter_suffix: )(objectClass=groupOfUniqueNames))\n  user_registry_url: https://acme-apim.example.com/api/user-registries/org1/user-registry-1\nname: acme-role\npermission_urls:\n- https://acme-apim.example.com/api/cloud/permissions/cloud/analytics:view\n- https://acme-apim.example.com/api/cloud/permissions/org/member:view\nsummary: An example role\ntitle: Acme role\n"})}),"\n",(0,n.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for roles:create\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string    scope\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,n.jsx)(r.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:r}={...(0,i.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}}}]);