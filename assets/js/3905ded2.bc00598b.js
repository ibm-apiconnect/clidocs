"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[270217],{28453:(e,o,n)=>{n.d(o,{R:()=>i,x:()=>c});var s=n(296540);const t={},r=s.createContext(t);function i(e){const o=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:i(e.components),s.createElement(r.Provider,{value:o},e.children)}},936347:(e,o,n)=>{n.r(o),n.d(o,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>i,metadata:()=>s,toc:()=>a});const s=JSON.parse('{"id":"v1009/consumer/groups/apic_groups_get","title":"apic groups:get","description":"Get the Group object by name or id","source":"@site/docs/v1009/consumer/groups/apic_groups_get.md","sourceDirName":"v1009/consumer/groups","slug":"/v1009/consumer/groups/apic_groups_get","permalink":"/clidocs/docs/v1009/consumer/groups/apic_groups_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/consumer/groups/apic_groups_get.md","tags":[{"inline":true,"label":"group: groups","permalink":"/clidocs/docs/tags/group-groups"}],"version":"current","frontMatter":{"tags":["group: groups"]},"sidebar":"tutorialSidebar","previous":{"title":"apic groups","permalink":"/clidocs/docs/v1009/consumer/groups/apic_groups"},"next":{"title":"apic iam-apikey","permalink":"/clidocs/docs/v1009/consumer/iam-apikey/apic_iam-apikey"}}');var t=n(474848),r=n(28453);const i={tags:["group: groups"]},c="apic groups",p={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function u(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(o.header,{children:(0,t.jsxs)(o.h1,{id:"apic-groups",children:["apic groups",":get"]})}),"\n",(0,t.jsx)(o.p,{children:"Get the Group object by name or id"}),"\n",(0,t.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(o.p,{children:"Get the Group object by name or id"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"apic groups:get --mode consumer [flags]\n"})}),"\n",(0,t.jsx)(o.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"apic groups:get --mode consumer [flags] GROUP\n"})}),"\n",(0,t.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:"      --fields string   field name\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,t.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(o.pre,{children:(0,t.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,t.jsx)(o,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);