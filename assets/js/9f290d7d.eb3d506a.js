"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[28960],{28453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>r});var s=n(296540);const i={},o=s.createContext(i);function a(t){const e=s.useContext(o);return s.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:a(t.components),s.createElement(o.Provider,{value:e},t.children)}},162467:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"v10010/apim/watsonx-settings/apic_watsonx-settings","title":"apic watsonx-settings","description":"Watsonx Settings operations","source":"@site/docs/v10010/apim/watsonx-settings/apic_watsonx-settings.md","sourceDirName":"v10010/apim/watsonx-settings","slug":"/v10010/apim/watsonx-settings/apic_watsonx-settings","permalink":"/clidocs/docs/v10010/apim/watsonx-settings/apic_watsonx-settings","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/watsonx-settings/apic_watsonx-settings.md","tags":[{"inline":true,"label":"group: watsonx-settings","permalink":"/clidocs/docs/tags/group-watsonx-settings"}],"version":"current","frontMatter":{"tags":["group: watsonx-settings"]},"sidebar":"tutorialSidebar","previous":{"title":"apic version","permalink":"/clidocs/docs/v10010/apim/version/apic_version"},"next":{"title":"apic watsonx-settings:create","permalink":"/clidocs/docs/v10010/apim/watsonx-settings/apic_watsonx-settings_create"}}');var i=n(474848),o=n(28453);const a={tags:["group: watsonx-settings"]},r="apic watsonx-settings",c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"apic-watsonx-settings",children:"apic watsonx-settings"})}),"\n",(0,i.jsx)(e.p,{children:"Watsonx Settings operations"}),"\n",(0,i.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(e.p,{children:"Watsonx Settings operations"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"apic watsonx-settings [flags]\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for watsonx-settings\n      --limit int32     Maximum number of items to return\n      --offset int32    Offset item number from list to begin return\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string    scope\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}}}]);