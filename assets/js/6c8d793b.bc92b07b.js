"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[71961],{36097:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>p,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var n=i(74848),r=i(28453);const s={},o="apic queries",a={id:"v1005/analytics/apic_queries_orgList",title:"apic queries:orgList",description:"List saved queries at org scope.",source:"@site/docs/v1005/analytics/apic_queries_orgList.md",sourceDirName:"v1005/analytics",slug:"/v1005/analytics/apic_queries_orgList",permalink:"/ibm-apiconnect/clidocs/docs/v1005/analytics/apic_queries_orgList",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/analytics/apic_queries_orgList.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic queries:orgGet",permalink:"/ibm-apiconnect/clidocs/docs/v1005/analytics/apic_queries_orgGet"},next:{title:"apic queries:orgListShared",permalink:"/ibm-apiconnect/clidocs/docs/v1005/analytics/apic_queries_orgListShared"}},c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h1,{id:"apic-queries",children:["apic queries",":orgList"]}),"\n",(0,n.jsx)(t.p,{children:"List saved queries at org scope."}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"List saved queries owned by the user making the request, at org scope."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic queries:orgList --mode analytics [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                       Help for queries:orgList\n      --limit string               If set, the number of items to return when requesting a list. Maximum: 500\n      --offset string              If set, the offset to be applied when requesting a list. e.g. return events starting from the 100th result\n  -o, --org string                 Provider organization name or ID. (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n      --search string              Search for a saved query by either title, description or query_string.\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>a});var n=i(96540);const r={},s=n.createContext(r);function o(e){const t=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(s.Provider,{value:t},e.children)}}}]);