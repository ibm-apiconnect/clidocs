"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[71116],{73883:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"v1005/consumer/apic_permissions_get","title":"apic permissions:get","description":"Permissions get operations","source":"@site/docs/v1005/consumer/apic_permissions_get.md","sourceDirName":"v1005/consumer","slug":"/v1005/consumer/apic_permissions_get","permalink":"/clidocs/docs/v1005/consumer/apic_permissions_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/consumer/apic_permissions_get.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic permissions","permalink":"/clidocs/docs/v1005/consumer/apic_permissions"},"next":{"title":"apic permissions:list-all","permalink":"/clidocs/docs/v1005/consumer/apic_permissions_list-all"}}');var t=n(74848),o=n(28453);const r={},c="apic permissions",p={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsxs)(s.h1,{id:"apic-permissions",children:["apic permissions",":get"]})}),"\n",(0,t.jsx)(s.p,{children:"Permissions get operations"}),"\n",(0,t.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(s.p,{children:"Permissions get operations"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"apic permissions:get --mode consumer [flags]\n"})}),"\n",(0,t.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"      --fields string          field name\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                   Help for permissions:get\n      --output string          Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string          management server endpoint (required)\n      --subcollection string   subcollection\n"})}),"\n",(0,t.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var i=n(96540);const t={},o=i.createContext(t);function r(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:s},e.children)}}}]);