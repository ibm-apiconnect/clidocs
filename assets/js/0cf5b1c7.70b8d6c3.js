"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[99438],{28453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>a});var o=n(96540);const i={},r=o.createContext(i);function c(t){const e=o.useContext(r);return o.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(i):t.components||i:c(t.components),o.createElement(r.Provider,{value:e},t.children)}},79982:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>s,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"v1008/portaladmin/content/apic_content","title":"apic content","description":"Content operations","source":"@site/docs/v1008/portaladmin/content/apic_content.md","sourceDirName":"v1008/portaladmin/content","slug":"/v1008/portaladmin/content/apic_content","permalink":"/clidocs/docs/v1008/portaladmin/content/apic_content","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/content/apic_content.md","tags":[{"inline":true,"label":"group: content","permalink":"/clidocs/docs/tags/group-content"}],"version":"current","frontMatter":{"tags":["group: content"]},"sidebar":"tutorialSidebar","previous":{"title":"apic consumer-org:list","permalink":"/clidocs/docs/v1008/portaladmin/consumer-org/apic_consumer-org_list"},"next":{"title":"apic content:create-export","permalink":"/clidocs/docs/v1008/portaladmin/content/apic_content_create-export"}}');var i=n(74848),r=n(28453);const c={tags:["group: content"]},a="apic content",s={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsx)(e.h1,{id:"apic-content",children:"apic content"})}),"\n",(0,i.jsx)(e.p,{children:"Content operations"}),"\n",(0,i.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(e.p,{children:"Content operations"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"apic content --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --bundle string        The Bundle type for a given Entity type. E.g. "page" for the "node" Entity type.\n  -c, --catalog string       Name or ID of the Catalog that the site belongs to. (required)\n      --entity_type string   Type of entity you want to perform this operation on. To find out entity/content types see the content list-types route. (required)\n      --format string        Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                 Help for content\n  -o, --org string           Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string        management server endpoint (required)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(t={}){const{wrapper:e}={...(0,r.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(l,{...t})}):l(t)}}}]);