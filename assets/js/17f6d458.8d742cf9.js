"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[3132],{58594:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>r,metadata:()=>c,toc:()=>l});var t=s(74848),n=s(28453);const r={tags:["group: services"]},o="apic services",c={id:"v1008/apim/services/apic_services_list-all",title:"apic services:list-all",description:"Services list-all operations",source:"@site/docs/v1008/apim/services/apic_services_list-all.md",sourceDirName:"v1008/apim/services",slug:"/v1008/apim/services/apic_services_list-all",permalink:"/clidocs/docs/v1008/apim/services/apic_services_list-all",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/services/apic_services_list-all.md",tags:[{inline:!0,label:"group: services",permalink:"/clidocs/docs/tags/group-services"}],version:"current",frontMatter:{tags:["group: services"]},sidebar:"tutorialSidebar",previous:{title:"apic services:get",permalink:"/clidocs/docs/v1008/apim/services/apic_services_get"},next:{title:"apic services:list",permalink:"/clidocs/docs/v1008/apim/services/apic_services_list"}},a={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsxs)(i.h1,{id:"apic-services",children:["apic services",":list-all"]})}),"\n",(0,t.jsx)(i.p,{children:"Services list-all operations"}),"\n",(0,t.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(i.p,{children:"Services list-all operations"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic services:list-all [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"\n      apic services:list-all [flags] --space-initiated\n\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --fields string                       List of field names to return\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for services:list-all\n      --limit int32                         Maximum number of items to return\n      --offset int32                        Offset item number from list to begin return\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n      --space-initiated                     space-initiated\n'})}),"\n",(0,t.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>c});var t=s(96540);const n={},r=t.createContext(n);function o(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(r.Provider,{value:i},e.children)}}}]);