"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[87551],{44022:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>a,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>l});var r=n(74848),o=n(28453);const i={},a="apic role",c={id:"v1005/portaladmin/apic_role_create",title:"apic role:create",description:"Create a new role",source:"@site/docs/v1005/portaladmin/apic_role_create.md",sourceDirName:"v1005/portaladmin",slug:"/v1005/portaladmin/apic_role_create",permalink:"/clidocs/docs/v1005/portaladmin/apic_role_create",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_role_create.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic role:add-permission",permalink:"/clidocs/docs/v1005/portaladmin/apic_role_add-permission"},next:{title:"apic role:delete",permalink:"/clidocs/docs/v1005/portaladmin/apic_role_delete"}},s={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"apic-role",children:["apic role",":create"]})}),"\n",(0,r.jsx)(t.p,{children:"Create a new role"}),"\n",(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"Create a new role"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic role:create --mode portaladmin [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"  -c, --catalog string               Name or ID of the Catalog that the site belongs to. (required)\n      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                         Help for role:create\n      --human_readable_name string   A descriptive name for the Drupal role. (required)\n      --machine_name string          The symbolic machine name for the role. (required)\n  -o, --org string                   Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>c});var r=n(96540);const o={},i=r.createContext(o);function a(e){const t=r.useContext(i);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),r.createElement(i.Provider,{value:t},e.children)}}}]);