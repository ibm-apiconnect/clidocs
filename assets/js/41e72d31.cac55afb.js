"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[35332],{28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>a});var n=s(96540);const i={},r=n.createContext(i);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(r.Provider,{value:t},e.children)}},58783:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"v1008/apim/jwk-sets/apic_jwk-sets_generate","title":"apic jwk-sets:generate","description":"Generate a Jwk Set","source":"@site/docs/v1008/apim/jwk-sets/apic_jwk-sets_generate.md","sourceDirName":"v1008/apim/jwk-sets","slug":"/v1008/apim/jwk-sets/apic_jwk-sets_generate","permalink":"/clidocs/docs/v1008/apim/jwk-sets/apic_jwk-sets_generate","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/jwk-sets/apic_jwk-sets_generate.md","tags":[{"inline":true,"label":"group: jwk-sets","permalink":"/clidocs/docs/tags/group-jwk-sets"}],"version":"current","frontMatter":{"tags":["group: jwk-sets"]},"sidebar":"tutorialSidebar","previous":{"title":"apic jwk-sets:delete","permalink":"/clidocs/docs/v1008/apim/jwk-sets/apic_jwk-sets_delete"},"next":{"title":"apic jwk-sets:get","permalink":"/clidocs/docs/v1008/apim/jwk-sets/apic_jwk-sets_get"}}');var i=s(74848),r=s(28453);const o={tags:["group: jwk-sets"]},a="apic jwk-sets",c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsxs)(t.h1,{id:"apic-jwk-sets",children:["apic jwk-sets",":generate"]})}),"\n",(0,i.jsx)(t.p,{children:"Generate a Jwk Set"}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:"Generate a Jwk Set"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic jwk-sets:generate [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic jwk-sets:generate [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}}}]);