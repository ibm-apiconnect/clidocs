"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[96334],{87383:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>c,contentTitle:()=>d,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>a});const i=JSON.parse('{"id":"v1005/consumer/apic_payment-methods_update","title":"apic payment-methods:update","description":"Update the Payment Method object by name or id","source":"@site/docs/v1005/consumer/apic_payment-methods_update.md","sourceDirName":"v1005/consumer","slug":"/v1005/consumer/apic_payment-methods_update","permalink":"/clidocs/docs/v1005/consumer/apic_payment-methods_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/consumer/apic_payment-methods_update.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic payment-methods:list","permalink":"/clidocs/docs/v1005/consumer/apic_payment-methods_list"},"next":{"title":"apic permissions","permalink":"/clidocs/docs/v1005/consumer/apic_permissions"}}');var o=t(74848),s=t(28453);const r={},d="apic payment-methods",c={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"apic-payment-methods",children:["apic payment-methods",":update"]})}),"\n",(0,o.jsx)(n.p,{children:"Update the Payment Method object by name or id"}),"\n",(0,o.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(n.p,{children:"Update the Payment Method object by name or id"}),"\n",(0,o.jsx)(n.p,{children:"Fields allowed but ignored:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"id"}),"\n",(0,o.jsx)(n.li,{children:"type"}),"\n",(0,o.jsx)(n.li,{children:"api_version"}),"\n",(0,o.jsx)(n.li,{children:"scope"}),"\n",(0,o.jsx)(n.li,{children:"created_at"}),"\n",(0,o.jsx)(n.li,{children:"updated_at"}),"\n",(0,o.jsx)(n.li,{children:"url"}),"\n",(0,o.jsx)(n.li,{children:"consumer_org_url"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"apic payment-methods:update --mode consumer [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for payment-methods:update\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>r,x:()=>d});var i=t(96540);const o={},s=i.createContext(o);function r(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function d(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),i.createElement(s.Provider,{value:n},e.children)}}}]);