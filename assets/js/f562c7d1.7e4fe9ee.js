"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[35111],{16842:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>p,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>o,toc:()=>c});var i=s(74848),n=s(28453);const r={},a="apic sites",o={id:"v1008/portaladmin/apic_sites_reset-upgrade-attempts",title:"apic sites:reset-upgrade-attempts",description:"Resets the Developer Portal site upgrade attempts.",source:"@site/docs/v1008/portaladmin/apic_sites_reset-upgrade-attempts.md",sourceDirName:"v1008/portaladmin",slug:"/v1008/portaladmin/apic_sites_reset-upgrade-attempts",permalink:"/ibm-apiconnect/clidocs/docs/v1008/portaladmin/apic_sites_reset-upgrade-attempts",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/apic_sites_reset-upgrade-attempts.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic sites:list",permalink:"/ibm-apiconnect/clidocs/docs/v1008/portaladmin/apic_sites_list"},next:{title:"apic test",permalink:"/ibm-apiconnect/clidocs/docs/v1008/portaladmin/apic_test"}},p={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(t.h1,{id:"apic-sites",children:["apic sites",":reset-upgrade-attempts"]}),"\n",(0,i.jsx)(t.p,{children:"Resets the Developer Portal site upgrade attempts."}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:"Resets the Developer Portal site upgrade attempts. Useful when upgrade has been attempted multiple times and has failed."}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic sites:reset-upgrade-attempts --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"      apic sites:reset-upgrade-attempts --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --portal_service_name string   The name of the Portal Service (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>o});var i=s(96540);const n={},r=i.createContext(n);function a(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);