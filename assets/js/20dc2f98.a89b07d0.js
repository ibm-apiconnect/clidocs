"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[305765],{28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>r});var n=t(296540);const i={},a=n.createContext(i);function o(e){const s=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function r(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(a.Provider,{value:s},e.children)}},269900:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>c,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v10010/analytics/summary/apic_summary_cloudGet","title":"apic summary:cloudGet","description":"Get specific summary event at cloud scope","source":"@site/docs/v10010/analytics/summary/apic_summary_cloudGet.md","sourceDirName":"v10010/analytics/summary","slug":"/v10010/analytics/summary/apic_summary_cloudGet","permalink":"/clidocs/docs/v10010/analytics/summary/apic_summary_cloudGet","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/analytics/summary/apic_summary_cloudGet.md","tags":[{"inline":true,"label":"group: summary","permalink":"/clidocs/docs/tags/group-summary"},{"inline":true,"label":"scope: cloud","permalink":"/clidocs/docs/tags/scope-cloud"}],"version":"current","frontMatter":{"tags":["group: summary","scope: cloud"]},"sidebar":"tutorialSidebar","previous":{"title":"apic summary:cloudCount","permalink":"/clidocs/docs/v10010/analytics/summary/apic_summary_cloudCount"},"next":{"title":"apic summary:cloudList","permalink":"/clidocs/docs/v10010/analytics/summary/apic_summary_cloudList"}}');var i=t(474848),a=t(28453);const o={tags:["group: summary","scope: cloud"]},r="apic summary",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function u(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsxs)(s.h1,{id:"apic-summary",children:["apic summary",":cloudGet"]})}),"\n",(0,i.jsx)(s.p,{children:"Get specific summary event at cloud scope"}),"\n",(0,i.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Return a single analytics summary event by ID scoped to the cloud. The item in the result set is determined by the passed in request query to this API."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"apic summary:cloudGet --mode analytics [flags]\n"})}),"\n",(0,i.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"apic summary:cloudGet --mode analytics [flags] ID\n"})}),"\n",(0,i.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n      --fields string              A list of the event fields that you want included in each event. You can use a comma as a separator when specifying the fields. Use this parameter if you require only a subset of the event fields rather than the full set.\n                                   \n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,i.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:s}={...(0,a.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);