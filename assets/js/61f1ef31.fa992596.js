"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[952326],{28453:(e,s,r)=>{r.d(s,{R:()=>o,x:()=>c});var t=r(296540);const n={},i=t.createContext(n);function o(e){const s=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(i.Provider,{value:s},e.children)}},35503:(e,s,r)=>{r.r(s),r.d(s,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>t,toc:()=>u});const t=JSON.parse('{"id":"v10010/consumer/users/apic_users_get","title":"apic users:get","description":"Get the User object by name or id","source":"@site/docs/v10010/consumer/users/apic_users_get.md","sourceDirName":"v10010/consumer/users","slug":"/v10010/consumer/users/apic_users_get","permalink":"/clidocs/docs/v10010/consumer/users/apic_users_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/consumer/users/apic_users_get.md","tags":[{"inline":true,"label":"group: users","permalink":"/clidocs/docs/tags/group-users"}],"version":"current","frontMatter":{"tags":["group: users"]},"sidebar":"tutorialSidebar","previous":{"title":"apic users:activate","permalink":"/clidocs/docs/v10010/consumer/users/apic_users_activate"},"next":{"title":"apic users:request-password-reset","permalink":"/clidocs/docs/v10010/consumer/users/apic_users_request-password-reset"}}');var n=r(474848),i=r(28453);const o={tags:["group: users"]},c="apic users",a={},u=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(s.header,{children:(0,n.jsxs)(s.h1,{id:"apic-users",children:["apic users",":get"]})}),"\n",(0,n.jsx)(s.p,{children:"Get the User object by name or id"}),"\n",(0,n.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(s.p,{children:"Get the User object by name or id"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"apic users:get --mode consumer [flags]\n"})}),"\n",(0,n.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"apic users:get --mode consumer [flags] USER\n"})}),"\n",(0,n.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:"      --fields string          field name\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string          Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string          management server endpoint (required)\n      --user-registry string   User Registry name or id (required)\n"})}),"\n",(0,n.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(s.pre,{children:(0,n.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,n.jsx)(s,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);