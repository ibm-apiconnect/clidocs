"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[65882],{63320:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>p,metadata:()=>o,toc:()=>c});var t=s(74848),n=s(28453);const p={tags:["group: apps"]},a="apic apps",o={id:"v1008/apim/apps/apic_apps_list",title:"apic apps:list",description:"List the Application objects",source:"@site/docs/v1008/apim/apps/apic_apps_list.md",sourceDirName:"v1008/apim/apps",slug:"/v1008/apim/apps/apic_apps_list",permalink:"/clidocs/docs/v1008/apim/apps/apic_apps_list",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apps/apic_apps_list.md",tags:[{inline:!0,label:"group: apps",permalink:"/clidocs/docs/tags/group-apps"}],version:"current",frontMatter:{tags:["group: apps"]},sidebar:"tutorialSidebar",previous:{title:"apic apps:get",permalink:"/clidocs/docs/v1008/apim/apps/apic_apps_get"},next:{title:"apic apps:update",permalink:"/clidocs/docs/v1008/apim/apps/apic_apps_update"}},r={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsxs)(i.h1,{id:"apic-apps",children:["apic apps",":list"]})}),"\n",(0,t.jsx)(i.p,{children:"List the Application objects"}),"\n",(0,t.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(i.p,{children:"List the Application objects"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic apps:list [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"\n      apic apps:list [flags] --space-initiated\n      apic apps:list [flags] --scope space\n      apic apps:list [flags] --scope catalog\n      apic apps:list [flags]\n\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'  -c, --catalog string        Catalog name or id (required)\n      --consumer-org string   Consumer Organization name or id (required)\n      --fields string         List of field names to return\n      --format string         Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --limit int32           Maximum number of items to return\n      --offset int32          Offset item number from list to begin return\n  -o, --org string            Organization name or id (required)\n      --output string         Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string         management server endpoint (required)\n'})}),"\n",(0,t.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>a,x:()=>o});var t=s(96540);const n={},p=t.createContext(n);function a(e){const i=t.useContext(p);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),t.createElement(p.Provider,{value:i},e.children)}}}]);