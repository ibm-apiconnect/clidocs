"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[949532],{28453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>r});var n=t(296540);const s={},a=n.createContext(s);function o(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:i},e.children)}},257345:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"v1008/apim/api-keys/apic_api-keys","title":"apic api-keys","description":"Api Keys operations","source":"@site/docs/v1008/apim/api-keys/apic_api-keys.md","sourceDirName":"v1008/apim/api-keys","slug":"/v1008/apim/api-keys/apic_api-keys","permalink":"/clidocs/docs/v1008/apim/api-keys/apic_api-keys","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/api-keys/apic_api-keys.md","tags":[{"inline":true,"label":"group: api-keys","permalink":"/clidocs/docs/tags/group-api-keys"}],"version":"current","frontMatter":{"tags":["group: api-keys"]},"sidebar":"tutorialSidebar","previous":{"title":"apic analytics-services:update","permalink":"/clidocs/docs/v1008/apim/analytics-services/apic_analytics-services_update"},"next":{"title":"apic api-keys:create","permalink":"/clidocs/docs/v1008/apim/api-keys/apic_api-keys_create"}}');var s=t(474848),a=t(28453);const o={tags:["group: api-keys"]},r="apic api-keys",p={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"apic-api-keys",children:"apic api-keys"})}),"\n",(0,s.jsx)(i.p,{children:"Api Keys operations"}),"\n",(0,s.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(i.p,{children:"Api Keys operations"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"apic api-keys [flags]\n"})}),"\n",(0,s.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for api-keys\n      --limit int32     Maximum number of items to return\n      --offset int32    Offset item number from list to begin return\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,s.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);