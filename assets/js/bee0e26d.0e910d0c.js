"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[19356],{65746:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>p,frontMatter:()=>i,metadata:()=>c,toc:()=>d});var o=s(74848),t=s(28453);const i={tags:["group: orgs"]},r="apic orgs",c={id:"v1008/consumer/orgs/apic_orgs_update",title:"apic orgs:update",description:"Update the Organization object by name or id",source:"@site/docs/v1008/consumer/orgs/apic_orgs_update.md",sourceDirName:"v1008/consumer/orgs",slug:"/v1008/consumer/orgs/apic_orgs_update",permalink:"/clidocs/docs/v1008/consumer/orgs/apic_orgs_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/consumer/orgs/apic_orgs_update.md",tags:[{inline:!0,label:"group: orgs",permalink:"/clidocs/docs/tags/group-orgs"}],version:"current",frontMatter:{tags:["group: orgs"]},sidebar:"tutorialSidebar",previous:{title:"apic orgs:transfer-owner",permalink:"/clidocs/docs/v1008/consumer/orgs/apic_orgs_transfer-owner"},next:{title:"apic payment-method-types",permalink:"/clidocs/docs/v1008/consumer/payment-method-types/apic_payment-method-types"}},a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(n.header,{children:(0,o.jsxs)(n.h1,{id:"apic-orgs",children:["apic orgs",":update"]})}),"\n",(0,o.jsx)(n.p,{children:"Update the Organization object by name or id"}),"\n",(0,o.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(n.p,{children:"Update the Organization object by name or id"}),"\n",(0,o.jsx)(n.p,{children:"Fields allowed but ignored:"}),"\n",(0,o.jsxs)(n.ul,{children:["\n",(0,o.jsx)(n.li,{children:"id"}),"\n",(0,o.jsx)(n.li,{children:"type"}),"\n",(0,o.jsx)(n.li,{children:"api_version"}),"\n",(0,o.jsx)(n.li,{children:"scope"}),"\n",(0,o.jsx)(n.li,{children:"created_at"}),"\n",(0,o.jsx)(n.li,{children:"updated_at"}),"\n",(0,o.jsx)(n.li,{children:"url"}),"\n"]}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"apic orgs:update --mode consumer [flags]\n"})}),"\n",(0,o.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:"\n      apic orgs:update --mode consumer [flags] ORG ORG_FILE\n\n"})}),"\n",(0,o.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --fields string   field name\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,o.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(n.pre,{children:(0,o.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,o.jsx)(n,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var o=s(96540);const t={},i=o.createContext(t);function r(e){const n=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),o.createElement(i.Provider,{value:n},e.children)}}}]);