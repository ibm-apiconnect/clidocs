"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[37538],{28453:(e,s,i)=>{i.d(s,{R:()=>r,x:()=>c});var n=i(296540);const t={},o=n.createContext(t);function r(e){const s=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),n.createElement(o.Provider,{value:s},e.children)}},698984:(e,s,i)=>{i.r(s),i.d(s,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"v1008/consumer/subscriptions/apic_subscriptions_get","title":"apic subscriptions:get","description":"Get the Subscription object by name or id","source":"@site/docs/v1008/consumer/subscriptions/apic_subscriptions_get.md","sourceDirName":"v1008/consumer/subscriptions","slug":"/v1008/consumer/subscriptions/apic_subscriptions_get","permalink":"/clidocs/docs/v1008/consumer/subscriptions/apic_subscriptions_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/consumer/subscriptions/apic_subscriptions_get.md","tags":[{"inline":true,"label":"group: subscriptions","permalink":"/clidocs/docs/tags/group-subscriptions"}],"version":"current","frontMatter":{"tags":["group: subscriptions"]},"sidebar":"tutorialSidebar","previous":{"title":"apic subscriptions:delete","permalink":"/clidocs/docs/v1008/consumer/subscriptions/apic_subscriptions_delete"},"next":{"title":"apic subscriptions:list","permalink":"/clidocs/docs/v1008/consumer/subscriptions/apic_subscriptions_list"}}');var t=i(474848),o=i(28453);const r={tags:["group: subscriptions"]},c="apic subscriptions",p={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function u(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsxs)(s.h1,{id:"apic-subscriptions",children:["apic subscriptions",":get"]})}),"\n",(0,t.jsx)(s.p,{children:"Get the Subscription object by name or id"}),"\n",(0,t.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(s.p,{children:"Get the Subscription object by name or id"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"apic subscriptions:get --mode consumer [flags]\n"})}),"\n",(0,t.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"apic subscriptions:get --mode consumer [flags] SUBSCRIPTION\n"})}),"\n",(0,t.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"  -a, --app string      Application name or id (required)\n      --fields string   field name\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,t.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(u,{...e})}):u(e)}}}]);