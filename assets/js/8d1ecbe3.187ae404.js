"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[73422],{8876:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>l,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"v1009/apim/policies/apic_policies_list-all","title":"apic policies:list-all","description":"Policies list-all operations","source":"@site/docs/v1009/apim/policies/apic_policies_list-all.md","sourceDirName":"v1009/apim/policies","slug":"/v1009/apim/policies/apic_policies_list-all","permalink":"/clidocs/docs/v1009/apim/policies/apic_policies_list-all","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/policies/apic_policies_list-all.md","tags":[{"inline":true,"label":"group: policies","permalink":"/clidocs/docs/tags/group-policies"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: org","permalink":"/clidocs/docs/tags/scope-org"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: policies","scope: catalog","scope: org","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic policies:implementation","permalink":"/clidocs/docs/v1009/apim/policies/apic_policies_implementation"},"next":{"title":"apic policies:list","permalink":"/clidocs/docs/v1009/apim/policies/apic_policies_list"}}');var n=s(74848),t=s(28453);const l={tags:["group: policies","scope: catalog","scope: org","scope: space"]},c="apic policies",a={},r=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsxs)(i.h1,{id:"apic-policies",children:["apic policies",":list-all"]})}),"\n",(0,n.jsx)(i.p,{children:"Policies list-all operations"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Policies list-all operations"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic policies:list-all [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic policies:list-all [flags] --scope space\napic policies:list-all [flags] --scope org\napic policies:list-all [flags] --scope catalog\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --availability-zone string            Availability Zone name or id (required)\n  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --fields string                       List of field names to return\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --gateway-service string              Gateway Service name or id (required)\n  -h, --help                                Help for policies:list-all\n      --limit int32                         Maximum number of items to return\n      --offset int32                        Offset item number from list to begin return\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n'})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>l,x:()=>c});var o=s(96540);const n={},t=o.createContext(n);function l(e){const i=o.useContext(t);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),o.createElement(t.Provider,{value:i},e.children)}}}]);