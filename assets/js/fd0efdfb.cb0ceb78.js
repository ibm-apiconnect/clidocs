"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[86494],{11985:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>n,metadata:()=>l,toc:()=>c});var r=t(74848),i=t(28453);const n={},o="apic tls-server-profiles",l={id:"v1008/apim/apic_tls-server-profiles_get",title:"apic tls-server-profiles:get",description:"Get the TLS Server Profile object by name and version",source:"@site/docs/v1008/apim/apic_tls-server-profiles_get.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_tls-server-profiles_get",permalink:"/clidocs/docs/v1008/apim/apic_tls-server-profiles_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_tls-server-profiles_get.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic tls-server-profiles:delete",permalink:"/clidocs/docs/v1008/apim/apic_tls-server-profiles_delete"},next:{title:"apic tls-server-profiles:list-all",permalink:"/clidocs/docs/v1008/apim/apic_tls-server-profiles_list-all"}},a={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(s.header,{children:(0,r.jsxs)(s.h1,{id:"apic-tls-server-profiles",children:["apic tls-server-profiles",":get"]})}),"\n",(0,r.jsx)(s.p,{children:"Get the TLS Server Profile object by name and version"}),"\n",(0,r.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(s.p,{children:"Get the TLS Server Profile object by name and version"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"apic tls-server-profiles:get [flags]\n"})}),"\n",(0,r.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"      apic tls-server-profiles:get [flags] --id ID\n      apic tls-server-profiles:get [flags] NAME:VERSION\n"})}),"\n",(0,r.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:"      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,r.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(s.pre,{children:(0,r.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:s}={...(0,i.R)(),...e.components};return s?(0,r.jsx)(s,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>o,x:()=>l});var r=t(96540);const i={},n=r.createContext(i);function o(e){const s=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function l(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(n.Provider,{value:s},e.children)}}}]);