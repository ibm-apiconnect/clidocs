"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[175677],{28453:(e,a,c)=>{c.d(a,{R:()=>s,x:()=>o});var i=c(296540);const n={},t=i.createContext(n);function s(e){const a=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:s(e.components),i.createElement(t.Provider,{value:a},e.children)}},929004:(e,a,c)=>{c.r(a),c.d(a,{assets:()=>r,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"v1009/portaladmin/memcache/apic_memcache_disable","title":"apic memcache:disable","description":"Disables memcache on a specific Developer Portal site.","source":"@site/docs/v1009/portaladmin/memcache/apic_memcache_disable.md","sourceDirName":"v1009/portaladmin/memcache","slug":"/v1009/portaladmin/memcache/apic_memcache_disable","permalink":"/clidocs/docs/v1009/portaladmin/memcache/apic_memcache_disable","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/portaladmin/memcache/apic_memcache_disable.md","tags":[{"inline":true,"label":"group: memcache","permalink":"/clidocs/docs/tags/group-memcache"}],"version":"current","frontMatter":{"tags":["group: memcache"]},"sidebar":"tutorialSidebar","previous":{"title":"apic memcache","permalink":"/clidocs/docs/v1009/portaladmin/memcache/apic_memcache"},"next":{"title":"apic memcache:enable","permalink":"/clidocs/docs/v1009/portaladmin/memcache/apic_memcache_enable"}}');var n=c(474848),t=c(28453);const s={tags:["group: memcache"]},o="apic memcache",r={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function m(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(a.header,{children:(0,n.jsxs)(a.h1,{id:"apic-memcache",children:["apic memcache",":disable"]})}),"\n",(0,n.jsx)(a.p,{children:"Disables memcache on a specific Developer Portal site."}),"\n",(0,n.jsx)(a.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(a.p,{children:"Disables memcache on a specific Developer Portal site. This sets Drupal to use the database as it's cache."}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:"apic memcache:disable --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(a.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:"apic memcache:disable --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(a.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,n.jsx)(a.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(a.pre,{children:(0,n.jsx)(a.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:a}={...(0,t.R)(),...e.components};return a?(0,n.jsx)(a,{...e,children:(0,n.jsx)(m,{...e})}):m(e)}}}]);