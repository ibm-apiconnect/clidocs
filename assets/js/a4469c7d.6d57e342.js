"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[42955],{36096:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>p,frontMatter:()=>r,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"v1008/apim/org-settings/apic_org-settings_get","title":"apic org-settings:get","description":"Get the Organization Setting object","source":"@site/docs/v1008/apim/org-settings/apic_org-settings_get.md","sourceDirName":"v1008/apim/org-settings","slug":"/v1008/apim/org-settings/apic_org-settings_get","permalink":"/clidocs/docs/v1008/apim/org-settings/apic_org-settings_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/org-settings/apic_org-settings_get.md","tags":[{"inline":true,"label":"group: org-settings","permalink":"/clidocs/docs/tags/group-org-settings"}],"version":"current","frontMatter":{"tags":["group: org-settings"]},"sidebar":"tutorialSidebar","previous":{"title":"apic org-settings","permalink":"/clidocs/docs/v1008/apim/org-settings/apic_org-settings"},"next":{"title":"apic org-settings:update","permalink":"/clidocs/docs/v1008/apim/org-settings/apic_org-settings_update"}}');var s=n(74848),o=n(28453);const r={tags:["group: org-settings"]},a="apic org-settings",c={},g=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"apic-org-settings",children:["apic org-settings",":get"]})}),"\n",(0,s.jsx)(t.p,{children:"Get the Organization Setting object"}),"\n",(0,s.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(t.p,{children:"Get the Organization Setting object"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic org-settings:get [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"\n      apic org-settings:get [flags]\n\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var i=n(96540);const s={},o=i.createContext(s);function r(e){const t=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),i.createElement(o.Provider,{value:t},e.children)}}}]);