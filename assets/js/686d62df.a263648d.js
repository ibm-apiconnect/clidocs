"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[61757],{97004:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>o,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v1009/analytics/queries/apic_queries_cloudTransferOwner","title":"apic queries:cloudTransferOwner","description":"Transfer ownership of a saved query to a different user","source":"@site/docs/v1009/analytics/queries/apic_queries_cloudTransferOwner.md","sourceDirName":"v1009/analytics/queries","slug":"/v1009/analytics/queries/apic_queries_cloudTransferOwner","permalink":"/clidocs/docs/v1009/analytics/queries/apic_queries_cloudTransferOwner","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/analytics/queries/apic_queries_cloudTransferOwner.md","tags":[{"inline":true,"label":"group: queries","permalink":"/clidocs/docs/tags/group-queries"},{"inline":true,"label":"scope: cloud","permalink":"/clidocs/docs/tags/scope-cloud"}],"version":"current","frontMatter":{"tags":["group: queries","scope: cloud"]},"sidebar":"tutorialSidebar","previous":{"title":"apic queries:cloudShare","permalink":"/clidocs/docs/v1009/analytics/queries/apic_queries_cloudShare"},"next":{"title":"apic queries:cloudUnshare","permalink":"/clidocs/docs/v1009/analytics/queries/apic_queries_cloudUnshare"}}');var i=s(74848),t=s(28453);const o={tags:["group: queries","scope: cloud"]},a="apic queries",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(r.header,{children:(0,i.jsxs)(r.h1,{id:"apic-queries",children:["apic queries",":cloudTransferOwner"]})}),"\n",(0,i.jsx)(r.p,{children:"Transfer ownership of a saved query to a different user"}),"\n",(0,i.jsx)(r.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsxs)(r.p,{children:["Provide a body with new_owner_user_url: ",(0,i.jsx)(r.code,{children:"/api/user-registries/{org}/{user-registry}/users/{user}"})," to transfer this query to a new owner."]}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"apic queries:cloudTransferOwner --mode analytics [flags]\n"})}),"\n",(0,i.jsx)(r.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:"apic queries:cloudTransferOwner --mode analytics [flags] ID NEW_OWNER_USER_URL\n"})}),"\n",(0,i.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,i.jsx)(r.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(r.pre,{children:(0,i.jsx)(r.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:r}={...(0,t.R)(),...e.components};return r?(0,i.jsx)(r,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,r,s)=>{s.d(r,{R:()=>o,x:()=>a});var n=s(96540);const i={},t=n.createContext(i);function o(e){const r=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),n.createElement(t.Provider,{value:r},e.children)}}}]);