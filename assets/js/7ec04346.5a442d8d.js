"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[6723],{28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>a});var i=n(96540);const t={},o=i.createContext(t);function r(e){const s=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:s},e.children)}},98993:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"v1008/consumer/apis/apic_apis_wsdl","title":"apic apis:wsdl","description":"Get the API wsdl document","source":"@site/docs/v1008/consumer/apis/apic_apis_wsdl.md","sourceDirName":"v1008/consumer/apis","slug":"/v1008/consumer/apis/apic_apis_wsdl","permalink":"/clidocs/docs/v1008/consumer/apis/apic_apis_wsdl","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/consumer/apis/apic_apis_wsdl.md","tags":[{"inline":true,"label":"group: apis","permalink":"/clidocs/docs/tags/group-apis"}],"version":"current","frontMatter":{"tags":["group: apis"]},"sidebar":"tutorialSidebar","previous":{"title":"apic apis:list","permalink":"/clidocs/docs/v1008/consumer/apis/apic_apis_list"},"next":{"title":"apic apps","permalink":"/clidocs/docs/v1008/consumer/apps/apic_apps"}}');var t=n(74848),o=n(28453);const r={tags:["group: apis"]},a="apic apis",c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(s.header,{children:(0,t.jsxs)(s.h1,{id:"apic-apis",children:["apic apis",":wsdl"]})}),"\n",(0,t.jsx)(s.p,{children:"Get the API wsdl document"}),"\n",(0,t.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(s.p,{children:"Get the API wsdl document"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"apic apis:wsdl --mode consumer [flags]\n"})}),"\n",(0,t.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"\n      apic apis:wsdl --mode consumer [flags] --scope org ID\n      apic apis:wsdl --mode consumer [flags] ID\n\n"})}),"\n",(0,t.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:"      --endpoint string   endpoint\n      --format string     Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string     Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string     management server endpoint (required)\n"})}),"\n",(0,t.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(s.pre,{children:(0,t.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:s}={...(0,o.R)(),...e.components};return s?(0,t.jsx)(s,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);