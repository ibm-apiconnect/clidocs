"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[16845],{28453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>r});var t=s(96540);const n={},a=t.createContext(n);function o(e){const i=t.useContext(a);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),t.createElement(a.Provider,{value:i},e.children)}},53138:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>l,contentTitle:()=>r,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"v1008/apim/apis/apic_apis_list-all","title":"apic apis:list-all","description":"Apis list-all operations","source":"@site/docs/v1008/apim/apis/apic_apis_list-all.md","sourceDirName":"v1008/apim/apis","slug":"/v1008/apim/apis/apic_apis_list-all","permalink":"/clidocs/docs/v1008/apim/apis/apic_apis_list-all","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apis/apic_apis_list-all.md","tags":[{"inline":true,"label":"group: apis","permalink":"/clidocs/docs/tags/group-apis"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: apis","scope: catalog","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic apis:get","permalink":"/clidocs/docs/v1008/apim/apis/apic_apis_get"},"next":{"title":"apic apis:list","permalink":"/clidocs/docs/v1008/apim/apis/apic_apis_list"}}');var n=s(74848),a=s(28453);const o={tags:["group: apis","scope: catalog","scope: space"]},r="apic apis",l={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsxs)(i.h1,{id:"apic-apis",children:["apic apis",":list-all"]})}),"\n",(0,n.jsx)(i.p,{children:"Apis list-all operations"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Apis list-all operations"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic apis:list-all [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic apis:list-all [flags] --scope space\napic apis:list-all [flags] --scope catalog\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --api_type string           The type of api (asyncapi, rest, graphql, wsdl_to_rest, or wsdl)\n      --base_path string          Base path of the API\n  -c, --catalog string            Catalog name or id (required)\n      --consumer_org_url string   Consumer Org Url\n      --enforced                  Whether the API is enforced or not\n      --expand string             List of transient field to expand\n      --fields string             List of field names to return\n      --format string             Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                      Help for apis:list-all\n      --limit int32               Maximum number of items to return\n      --metadata string           List of metadata fields in the api to filter on\n      --offset int32              Offset item number from list to begin return\n  -o, --org string                Organization name or id (required)\n      --output string             Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string              scope\n  -s, --server string             management server endpoint (required)\n      --space string              Space name or id (required)\n      --states string             The list states of the queried resources\n'})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}}}]);