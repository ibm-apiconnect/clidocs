"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[114779],{28453:(e,t,a)=>{a.d(t,{R:()=>i,x:()=>c});var o=a(296540);const s={},n=o.createContext(s);function i(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),o.createElement(n.Provider,{value:t},e.children)}},962137:(e,t,a)=>{a.r(t),a.d(t,{assets:()=>r,contentTitle:()=>c,default:()=>p,frontMatter:()=>i,metadata:()=>o,toc:()=>l});const o=JSON.parse('{"id":"v1008/apim/catalogs/apic_catalogs_get","title":"apic catalogs:get","description":"Get the Catalog object by name or id","source":"@site/docs/v1008/apim/catalogs/apic_catalogs_get.md","sourceDirName":"v1008/apim/catalogs","slug":"/v1008/apim/catalogs/apic_catalogs_get","permalink":"/clidocs/docs/v1008/apim/catalogs/apic_catalogs_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/catalogs/apic_catalogs_get.md","tags":[{"inline":true,"label":"group: catalogs","permalink":"/clidocs/docs/tags/group-catalogs"}],"version":"current","frontMatter":{"tags":["group: catalogs"]},"sidebar":"tutorialSidebar","previous":{"title":"apic catalogs:email-to-owners","permalink":"/clidocs/docs/v1008/apim/catalogs/apic_catalogs_email-to-owners"},"next":{"title":"apic catalogs:list","permalink":"/clidocs/docs/v1008/apim/catalogs/apic_catalogs_list"}}');var s=a(474848),n=a(28453);const i={tags:["group: catalogs"]},c="apic catalogs",r={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsxs)(t.h1,{id:"apic-catalogs",children:["apic catalogs",":get"]})}),"\n",(0,s.jsx)(t.p,{children:"Get the Catalog object by name or id"}),"\n",(0,s.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(t.p,{children:"Get the Catalog object by name or id"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic catalogs:get [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic catalogs:get [flags] CATALOG\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);