"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[428649],{28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>a});var o=s(296540);const r={},n=o.createContext(r);function i(e){const t=o.useContext(n);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),o.createElement(n.Provider,{value:t},e.children)}},389599:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>a,default:()=>u,frontMatter:()=>i,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"v1008/discovery/data-sources/apic_data-sources","title":"apic data-sources","description":"Data Sources operations","source":"@site/docs/v1008/discovery/data-sources/apic_data-sources.md","sourceDirName":"v1008/discovery/data-sources","slug":"/v1008/discovery/data-sources/apic_data-sources","permalink":"/clidocs/docs/v1008/discovery/data-sources/apic_data-sources","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/discovery/data-sources/apic_data-sources.md","tags":[{"inline":true,"label":"group: data-sources","permalink":"/clidocs/docs/tags/group-data-sources"}],"version":"current","frontMatter":{"tags":["group: data-sources"]},"sidebar":"tutorialSidebar","previous":{"title":"apic","permalink":"/clidocs/docs/v1008/discovery/apic/"},"next":{"title":"apic data-sources:clear","permalink":"/clidocs/docs/v1008/discovery/data-sources/apic_data-sources_clear"}}');var r=s(474848),n=s(28453);const i={tags:["group: data-sources"]},a="apic data-sources",c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsx)(t.h1,{id:"apic-data-sources",children:"apic data-sources"})}),"\n",(0,r.jsx)(t.p,{children:"Data Sources operations"}),"\n",(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"Data Sources operations"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic data-sources --mode discovery [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --collector_type string   Optional collector_type to use to filter the list of Datasources\n      --fields string           List of field names to return\n      --format string           Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                    Help for data-sources\n      --limit int32             Maximum number of items to return\n      --offset int32            Offset item number from list to begin return\n  -o, --org string              Organization name or id (required)\n      --output string           Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string           management server endpoint (required)\n      --state string            Optional state to use to filter Discovered API lists\n'})}),"\n",(0,r.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}}}]);