"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[48356],{95476:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>p,contentTitle:()=>r,default:()=>l,frontMatter:()=>s,metadata:()=>a,toc:()=>c});var t=n(74848),o=n(28453);const s={},r="apic apis",a={id:"v1005/apim/apic_apis",title:"apic apis",description:"Apis operations",source:"@site/docs/v1005/apim/apic_apis.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_apis",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_apis",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_apis.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic api-keys:list",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_api-keys_list"},next:{title:"apic apis:clone",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_apis_clone"}},p={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.h1,{id:"apic-apis",children:"apic apis"}),"\n",(0,t.jsx)(i.p,{children:"Apis operations"}),"\n",(0,t.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(i.p,{children:"Apis operations"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic apis [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --api_type string    The type of api (asyncapi, rest, graphql, wsdl_to_rest, or wsdl)\n      --base_path string   Base path of the API\n  -c, --catalog string     Catalog name or id (required)\n      --enforced           Whether the API is enforced or not\n      --expand string      List of transient field to expand\n      --fields string      List of field names to return\n      --format string      Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help               Help for apis\n      --limit int32        Maximum number of items to return\n      --metadata string    List of metadata fields in the api to filter on\n      --offset int32       Offset item number from list to begin return\n  -o, --org string         Organization name or id (required)\n      --output string      Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string       scope\n  -s, --server string      management server endpoint (required)\n      --space string       Space name or id (required)\n'})}),"\n",(0,t.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>a});var t=n(96540);const o={},s=t.createContext(o);function r(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);