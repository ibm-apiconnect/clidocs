"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[846511],{28453:(i,e,n)=>{n.d(e,{R:()=>r,x:()=>a});var t=n(296540);const o={},s=t.createContext(o);function r(i){const e=t.useContext(s);return t.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function a(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(o):i.components||o:r(i.components),t.createElement(s.Provider,{value:e},i.children)}},176131:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>c,contentTitle:()=>a,default:()=>l,frontMatter:()=>r,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"v1005/apim/apic_invitations","title":"apic invitations","description":"Invitations operations","source":"@site/docs/v1005/apim/apic_invitations.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_invitations","permalink":"/clidocs/docs/v1005/apim/apic_invitations","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_invitations.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic integrations:update","permalink":"/clidocs/docs/v1005/apim/apic_integrations_update"},"next":{"title":"apic invitations:clear","permalink":"/clidocs/docs/v1005/apim/apic_invitations_clear"}}');var o=n(474848),s=n(28453);const r={},a="apic invitations",c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(i){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...i.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(e.header,{children:(0,o.jsx)(e.h1,{id:"apic-invitations",children:"apic invitations"})}),"\n",(0,o.jsx)(e.p,{children:"Invitations operations"}),"\n",(0,o.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(e.p,{children:"Invitations operations"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:"apic invitations [flags]\n"})}),"\n",(0,o.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'  -c, --catalog string    Catalog name or id (required)\n      --fields string     List of field names to return\n      --format string     Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help              Help for invitations\n      --limit int32       Maximum number of items to return\n      --offset int32      Offset item number from list to begin return\n  -o, --org string        Organization name or id (required)\n      --output string     Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string      scope\n  -s, --server string     management server endpoint (required)\n      --space string      Space name or id (required)\n      --space-initiated   space-initiated\n'})}),"\n",(0,o.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(e.pre,{children:(0,o.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(i={}){const{wrapper:e}={...(0,s.R)(),...i.components};return e?(0,o.jsx)(e,{...i,children:(0,o.jsx)(d,{...i})}):d(i)}}}]);