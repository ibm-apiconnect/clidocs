"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[39947],{53159:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>a,toc:()=>p});var s=i(74848),n=i(28453);const o={tags:["group: sites"]},r="apic sites",a={id:"v1008/portaladmin/sites/apic_sites",title:"apic sites",description:"Sites operations",source:"@site/docs/v1008/portaladmin/sites/apic_sites.md",sourceDirName:"v1008/portaladmin/sites",slug:"/v1008/portaladmin/sites/apic_sites",permalink:"/clidocs/docs/v1008/portaladmin/sites/apic_sites",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/sites/apic_sites.md",tags:[{inline:!0,label:"group: sites",permalink:"/clidocs/docs/tags/group-sites"}],version:"current",frontMatter:{tags:["group: sites"]},sidebar:"tutorialSidebar",previous:{title:"apic site-config:get-import-status",permalink:"/clidocs/docs/v1008/portaladmin/site-config/apic_site-config_get-import-status"},next:{title:"apic sites:check",permalink:"/clidocs/docs/v1008/portaladmin/sites/apic_sites_check"}},c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"apic-sites",children:"apic sites"})}),"\n",(0,s.jsx)(t.p,{children:"Sites operations"}),"\n",(0,s.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(t.p,{children:"Sites operations"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic sites --mode portaladmin [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                         Help for sites\n      --portal_service_name string   The name of the Portal Service (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>a});var s=i(96540);const n={},o=s.createContext(n);function r(e){const t=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),s.createElement(o.Provider,{value:t},e.children)}}}]);