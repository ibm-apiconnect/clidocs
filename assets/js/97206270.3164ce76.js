"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[78272],{95969:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>r,contentTitle:()=>a,default:()=>l,frontMatter:()=>i,metadata:()=>c,toc:()=>p});var t=s(74848),o=s(28453);const i={},a="apic scans",c={id:"v1008/governance/apic_scans_update",title:"apic scans:update",description:"Scans update operations",source:"@site/docs/v1008/governance/apic_scans_update.md",sourceDirName:"v1008/governance",slug:"/v1008/governance/apic_scans_update",permalink:"/ibm-apiconnect/clidocs/docs/v1008/governance/apic_scans_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/governance/apic_scans_update.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic scans:list",permalink:"/ibm-apiconnect/clidocs/docs/v1008/governance/apic_scans_list"},next:{title:"apic test",permalink:"/ibm-apiconnect/clidocs/docs/v1008/governance/apic_test"}},r={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"apic-scans",children:["apic scans",":update"]}),"\n",(0,t.jsx)(n.p,{children:"Scans update operations"}),"\n",(0,t.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:"Scans update operations"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apic scans:update --mode governance [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"      apic scans:update --mode governance [flags] --scope space SCAN SCAN_FILE\n      apic scans:update --mode governance [flags] --scope org SCAN SCAN_FILE\n      apic scans:update --mode governance [flags] --scope catalog SCAN SCAN_FILE\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for scans:update\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n      --space string     Space name or id (required)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>a,x:()=>c});var t=s(96540);const o={},i=t.createContext(o);function a(e){const n=t.useContext(i);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:a(e.components),t.createElement(i.Provider,{value:n},e.children)}}}]);