"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[297633],{28453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>s});var a=t(296540);const n={},o=a.createContext(n);function r(e){const i=a.useContext(o);return a.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function s(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(o.Provider,{value:i},e.children)}},331192:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>p,contentTitle:()=>s,default:()=>d,frontMatter:()=>r,metadata:()=>a,toc:()=>c});const a=JSON.parse('{"id":"v1008/portaladmin/api/apic_api_get","title":"apic api:get","description":"Get a specific api from a developer portal.","source":"@site/docs/v1008/portaladmin/api/apic_api_get.md","sourceDirName":"v1008/portaladmin/api","slug":"/v1008/portaladmin/api/apic_api_get","permalink":"/clidocs/docs/v1008/portaladmin/api/apic_api_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/api/apic_api_get.md","tags":[{"inline":true,"label":"group: api","permalink":"/clidocs/docs/tags/group-api"}],"version":"current","frontMatter":{"tags":["group: api"]},"sidebar":"tutorialSidebar","previous":{"title":"apic api:get-document","permalink":"/clidocs/docs/v1008/portaladmin/api/apic_api_get-document"},"next":{"title":"apic api:list","permalink":"/clidocs/docs/v1008/portaladmin/api/apic_api_list"}}');var n=t(474848),o=t(28453);const r={tags:["group: api"]},s="apic api",p={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsxs)(i.h1,{id:"apic-api",children:["apic api",":get"]})}),"\n",(0,n.jsx)(i.p,{children:"Get a specific api from a developer portal."}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsxs)(i.p,{children:["Get a specific api from the developer portal of the provided org and catalog. The id or name",":version"," of a specific api needs to be provided. e.g. 'id-of-api-called-example-3' or 'example:3.0.0'."]}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic api:get --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic api:get --mode portaladmin [flags] API\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);