"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[91177],{37290:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>r,toc:()=>d});var a=n(74848),o=n(28453);const i={},s="apic drupal-state",r={id:"v1005/portaladmin/apic_drupal-state_set",title:"apic drupal-state:set",description:"Set a state key value.",source:"@site/docs/v1005/portaladmin/apic_drupal-state_set.md",sourceDirName:"v1005/portaladmin",slug:"/v1005/portaladmin/apic_drupal-state_set",permalink:"/clidocs/docs/v1005/portaladmin/apic_drupal-state_set",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_drupal-state_set.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic drupal-state:get",permalink:"/clidocs/docs/v1005/portaladmin/apic_drupal-state_get"},next:{title:"apic entity",permalink:"/clidocs/docs/v1005/portaladmin/apic_entity"}},l={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsxs)(t.h1,{id:"apic-drupal-state",children:["apic drupal-state",":set"]}),"\n",(0,a.jsx)(t.p,{children:"Set a state key value."}),"\n",(0,a.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(t.p,{children:"Can set a new state value or update an already existing key-value."}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"apic drupal-state:set --mode portaladmin [flags]\n"})}),"\n",(0,a.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'  -c, --catalog string        Name or ID of the Catalog that the site belongs to. (required)\n      --format string         Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                  Help for drupal-state:set\n      --input_format string   The input format of the value for the state key. Values: string, integer, float, boolean, json, yaml. [default: auto]\n  -o, --org string            Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string         management server endpoint (required)\n      --state_key string      The state key, for example "system.cron_last". (required)\n      --state_value string    The value to assign to the state key. (required)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>s,x:()=>r});var a=n(96540);const o={},i=a.createContext(o);function s(e){const t=a.useContext(i);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),a.createElement(i.Provider,{value:t},e.children)}}}]);