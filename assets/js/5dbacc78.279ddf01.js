"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[956432],{28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var t=i(296540);const c={},o=t.createContext(c);function s(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:s(e.components),t.createElement(o.Provider,{value:n},e.children)}},834879:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>t,toc:()=>r});const t=JSON.parse('{"id":"v1005/analytics/apic_config_get","title":"apic config:get","description":"Get a configuration variable","source":"@site/docs/v1005/analytics/apic_config_get.md","sourceDirName":"v1005/analytics","slug":"/v1005/analytics/apic_config_get","permalink":"/clidocs/docs/v1005/analytics/apic_config_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/analytics/apic_config_get.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic config:delete","permalink":"/clidocs/docs/v1005/analytics/apic_config_delete"},"next":{"title":"apic config:list","permalink":"/clidocs/docs/v1005/analytics/apic_config_list"}}');var c=i(474848),o=i(28453);const s={},a="apic config",l={},r=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(n.header,{children:(0,c.jsxs)(n.h1,{id:"apic-config",children:["apic config",":get"]})}),"\n",(0,c.jsx)(n.p,{children:"Get a configuration variable"}),"\n",(0,c.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,c.jsx)(n.p,{children:"config_topic_longanalytics"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"apic config:get NAME --mode analytics [flags]\n"})}),"\n",(0,c.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"cmd_config_get_examplesanalytics\n"})}),"\n",(0,c.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:"  -g, --global   list the global configuration variables\n  -h, --help     Help for config:get\n  -l, --local    list the local application configuration variables\n"})}),"\n",(0,c.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,c.jsx)(n.pre,{children:(0,c.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,c.jsx)(n,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}}}]);