"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[70240],{29625:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>n,metadata:()=>s,toc:()=>l});var r=i(74848),t=i(28453);const n={},a="apic global-policy-errors",s={id:"v1005/apim/apic_global-policy-errors_update",title:"apic global-policy-errors:update",description:"Global Policy Errors update operations",source:"@site/docs/v1005/apim/apic_global-policy-errors_update.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_global-policy-errors_update",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_global-policy-errors_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_global-policy-errors_update.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic global-policy-errors:get",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_global-policy-errors_get"},next:{title:"apic global-policy-posthooks",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_global-policy-posthooks"}},c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const o={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(o.h1,{id:"apic-global-policy-errors",children:["apic global-policy-errors",":update"]}),"\n",(0,r.jsx)(o.p,{children:"Global Policy Errors update operations"}),"\n",(0,r.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(o.p,{children:"Global Policy Errors update operations"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:"apic global-policy-errors:update [flags]\n"})}),"\n",(0,r.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for global-policy-errors:update\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n'})}),"\n",(0,r.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(o.pre,{children:(0,r.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,r.jsx)(o,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,o,i)=>{i.d(o,{R:()=>a,x:()=>s});var r=i(96540);const t={},n=r.createContext(t);function a(e){const o=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function s(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:a(e.components),r.createElement(n.Provider,{value:o},e.children)}}}]);