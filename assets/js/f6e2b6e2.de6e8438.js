"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[229987],{28453:(e,r,s)=>{s.d(r,{R:()=>t,x:()=>l});var i=s(296540);const n={},a=i.createContext(n);function t(e){const r=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function l(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),i.createElement(a.Provider,{value:r},e.children)}},719647:(e,r,s)=>{s.r(r),s.d(r,{assets:()=>o,contentTitle:()=>l,default:()=>p,frontMatter:()=>t,metadata:()=>i,toc:()=>c});const i=JSON.parse('{"id":"v1009/apim/mail-servers/apic_mail-servers_create","title":"apic mail-servers:create","description":"Create a Mail Server object","source":"@site/docs/v1009/apim/mail-servers/apic_mail-servers_create.md","sourceDirName":"v1009/apim/mail-servers","slug":"/v1009/apim/mail-servers/apic_mail-servers_create","permalink":"/clidocs/docs/v1009/apim/mail-servers/apic_mail-servers_create","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/mail-servers/apic_mail-servers_create.md","tags":[{"inline":true,"label":"group: mail-servers","permalink":"/clidocs/docs/tags/group-mail-servers"}],"version":"current","frontMatter":{"tags":["group: mail-servers"]},"sidebar":"tutorialSidebar","previous":{"title":"apic mail-servers:clear","permalink":"/clidocs/docs/v1009/apim/mail-servers/apic_mail-servers_clear"},"next":{"title":"apic mail-servers:delete","permalink":"/clidocs/docs/v1009/apim/mail-servers/apic_mail-servers_delete"}}');var n=s(474848),a=s(28453);const t={tags:["group: mail-servers"]},l="apic mail-servers",o={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"Example of mail server creation.",id:"example-of-mail-server-creation",level:4},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(r.header,{children:(0,n.jsxs)(r.h1,{id:"apic-mail-servers",children:["apic mail-servers",":create"]})}),"\n",(0,n.jsx)(r.p,{children:"Create a Mail Server object"}),"\n",(0,n.jsx)(r.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(r.p,{children:"Create a Mail Server object"}),"\n",(0,n.jsx)(r.p,{children:"Fields allowed but ignored:"}),"\n",(0,n.jsxs)(r.ul,{children:["\n",(0,n.jsx)(r.li,{children:"id"}),"\n",(0,n.jsx)(r.li,{children:"type"}),"\n",(0,n.jsx)(r.li,{children:"api_version"}),"\n",(0,n.jsx)(r.li,{children:"scope"}),"\n",(0,n.jsx)(r.li,{children:"created_at"}),"\n",(0,n.jsx)(r.li,{children:"updated_at"}),"\n",(0,n.jsx)(r.li,{children:"url"}),"\n"]}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"apic mail-servers:create [flags]\n"})}),"\n",(0,n.jsx)(r.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"apic mail-servers:create [flags] MAIL_SERVER_FILE\n"})}),"\n",(0,n.jsx)(r.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.h4,{id:"example-of-mail-server-creation",children:"Example of mail server creation."}),"\n",(0,n.jsx)(r.hr,{}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:"credentials:\n  password: Passw0rd123\n  username: acmeuser\nhost: acme.example.com\nname: acme-mailserver\nport: 25\nsecure: true\ntitle: acme mail server\ntls_client_profile_url: https://acme-apim.example.com/api/orgs/org1/tls-client-profiles/tls-client-profile1\n"})}),"\n",(0,n.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,n.jsx)(r.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(r.pre,{children:(0,n.jsx)(r.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:r}={...(0,a.R)(),...e.components};return r?(0,n.jsx)(r,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);