"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[32910],{93950:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>i,toc:()=>g});const i=JSON.parse('{"id":"v1009/apim/user-registry-settings/apic_user-registry-settings_get","title":"apic user-registry-settings:get","description":"Get the User Registry Setting object","source":"@site/docs/v1009/apim/user-registry-settings/apic_user-registry-settings_get.md","sourceDirName":"v1009/apim/user-registry-settings","slug":"/v1009/apim/user-registry-settings/apic_user-registry-settings_get","permalink":"/clidocs/docs/v1009/apim/user-registry-settings/apic_user-registry-settings_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/user-registry-settings/apic_user-registry-settings_get.md","tags":[{"inline":true,"label":"group: user-registry-settings","permalink":"/clidocs/docs/tags/group-user-registry-settings"}],"version":"current","frontMatter":{"tags":["group: user-registry-settings"]},"sidebar":"tutorialSidebar","previous":{"title":"apic user-registry-settings","permalink":"/clidocs/docs/v1009/apim/user-registry-settings/apic_user-registry-settings"},"next":{"title":"apic user-registry-settings:update","permalink":"/clidocs/docs/v1009/apim/user-registry-settings/apic_user-registry-settings_update"}}');var r=s(74848),n=s(28453);const o={tags:["group: user-registry-settings"]},c="apic user-registry-settings",a={},g=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"apic-user-registry-settings",children:["apic user-registry-settings",":get"]})}),"\n",(0,r.jsx)(t.p,{children:"Get the User Registry Setting object"}),"\n",(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"Get the User Registry Setting object"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic user-registry-settings:get [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic user-registry-settings:get [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var i=s(96540);const r={},n=i.createContext(r);function o(e){const t=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),i.createElement(n.Provider,{value:t},e.children)}}}]);