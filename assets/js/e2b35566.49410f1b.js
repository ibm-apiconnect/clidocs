"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[172349],{28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>l});var n=s(296540);const r={},o=n.createContext(r);function i(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function l(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:i(e.components),n.createElement(o.Provider,{value:t},e.children)}},131488:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>l,default:()=>u,frontMatter:()=>i,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"v10010/governance/rulesets/apic_rulesets_get","title":"apic rulesets:get","description":"Download the Ruleset object as a file to the current directory by name or id","source":"@site/docs/v10010/governance/rulesets/apic_rulesets_get.md","sourceDirName":"v10010/governance/rulesets","slug":"/v10010/governance/rulesets/apic_rulesets_get","permalink":"/clidocs/docs/v10010/governance/rulesets/apic_rulesets_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/governance/rulesets/apic_rulesets_get.md","tags":[{"inline":true,"label":"group: rulesets","permalink":"/clidocs/docs/tags/group-rulesets"}],"version":"current","frontMatter":{"tags":["group: rulesets"]},"sidebar":"tutorialSidebar","previous":{"title":"apic rulesets:delete","permalink":"/clidocs/docs/v10010/governance/rulesets/apic_rulesets_delete"},"next":{"title":"apic rulesets:list","permalink":"/clidocs/docs/v10010/governance/rulesets/apic_rulesets_list"}}');var r=s(474848),o=s(28453);const i={tags:["group: rulesets"]},l="apic rulesets",c={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(t.header,{children:(0,r.jsxs)(t.h1,{id:"apic-rulesets",children:["apic rulesets",":get"]})}),"\n",(0,r.jsx)(t.p,{children:"Download the Ruleset object as a file to the current directory by name or id"}),"\n",(0,r.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(t.p,{children:"Download the Ruleset object as a file to the current directory by name or id"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic rulesets:get --mode governance [flags]\n"})}),"\n",(0,r.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"apic rulesets:get --mode governance [flags] RULESET\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:"      --fields string            List of field names to return\n      --format string            Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string               Organization name or id (required)\n      --output string            Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --ruleset_version string   Specify an explicit Ruleset version\n  -s, --server string            management server endpoint (required)\n"})}),"\n",(0,r.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(t.pre,{children:(0,r.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,r.jsx)(t,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}}}]);