"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[70646],{28453:(e,i,t)=>{t.d(i,{R:()=>r,x:()=>o});var n=t(96540);const l={},s=n.createContext(l);function r(e){const i=n.useContext(s);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(l):e.components||l:r(e.components),n.createElement(s.Provider,{value:i},e.children)}},77877:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>d,frontMatter:()=>r,metadata:()=>n,toc:()=>a});const n=JSON.parse('{"id":"v1008/apim/tls-client-profiles/apic_tls-client-profiles_create","title":"apic tls-client-profiles:create","description":"Create a TLS Client Profile object","source":"@site/docs/v1008/apim/tls-client-profiles/apic_tls-client-profiles_create.md","sourceDirName":"v1008/apim/tls-client-profiles","slug":"/v1008/apim/tls-client-profiles/apic_tls-client-profiles_create","permalink":"/clidocs/docs/v1008/apim/tls-client-profiles/apic_tls-client-profiles_create","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/tls-client-profiles/apic_tls-client-profiles_create.md","tags":[{"inline":true,"label":"group: tls-client-profiles","permalink":"/clidocs/docs/tags/group-tls-client-profiles"}],"version":"current","frontMatter":{"tags":["group: tls-client-profiles"]},"sidebar":"tutorialSidebar","previous":{"title":"apic tls-client-profiles:clear","permalink":"/clidocs/docs/v1008/apim/tls-client-profiles/apic_tls-client-profiles_clear"},"next":{"title":"apic tls-client-profiles:delete","permalink":"/clidocs/docs/v1008/apim/tls-client-profiles/apic_tls-client-profiles_delete"}}');var l=t(74848),s=t(28453);const r={tags:["group: tls-client-profiles"]},o="apic tls-client-profiles",c={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsxs)(i.h1,{id:"apic-tls-client-profiles",children:["apic tls-client-profiles",":create"]})}),"\n",(0,l.jsx)(i.p,{children:"Create a TLS Client Profile object"}),"\n",(0,l.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,l.jsx)(i.p,{children:"Create a TLS Client Profile object"}),"\n",(0,l.jsx)(i.p,{children:"Fields not allowed:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"owned"}),"\n"]}),"\n",(0,l.jsx)(i.p,{children:"Fields allowed but ignored:"}),"\n",(0,l.jsxs)(i.ul,{children:["\n",(0,l.jsx)(i.li,{children:"id"}),"\n",(0,l.jsx)(i.li,{children:"type"}),"\n",(0,l.jsx)(i.li,{children:"api_version"}),"\n",(0,l.jsx)(i.li,{children:"scope"}),"\n",(0,l.jsx)(i.li,{children:"created_at"}),"\n",(0,l.jsx)(i.li,{children:"updated_at"}),"\n",(0,l.jsx)(i.li,{children:"url"}),"\n",(0,l.jsx)(i.li,{children:"org_url"}),"\n"]}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"apic tls-client-profiles:create [flags]\n"})}),"\n",(0,l.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"\n      apic tls-client-profiles:create [flags] TLS_CLIENT_PROFILE_FILE\n\n"})}),"\n",(0,l.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,l.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(p,{...e})}):p(e)}}}]);