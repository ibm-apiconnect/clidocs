"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[529137],{28453:(e,n,s)=>{s.d(n,{R:()=>p,x:()=>r});var t=s(296540);const i={},o=t.createContext(i);function p(e){const n=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:p(e.components),t.createElement(o.Provider,{value:n},e.children)}},906330:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>a,contentTitle:()=>r,default:()=>l,frontMatter:()=>p,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"v1008/consumer/apps/apic_apps_get","title":"apic apps:get","description":"Get the Application object by name or id","source":"@site/docs/v1008/consumer/apps/apic_apps_get.md","sourceDirName":"v1008/consumer/apps","slug":"/v1008/consumer/apps/apic_apps_get","permalink":"/clidocs/docs/v1008/consumer/apps/apic_apps_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/consumer/apps/apic_apps_get.md","tags":[{"inline":true,"label":"group: apps","permalink":"/clidocs/docs/tags/group-apps"}],"version":"current","frontMatter":{"tags":["group: apps"]},"sidebar":"tutorialSidebar","previous":{"title":"apic apps:delete","permalink":"/clidocs/docs/v1008/consumer/apps/apic_apps_delete"},"next":{"title":"apic apps:list","permalink":"/clidocs/docs/v1008/consumer/apps/apic_apps_list"}}');var i=s(474848),o=s(28453);const p={tags:["group: apps"]},r="apic apps",a={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"apic-apps",children:["apic apps",":get"]})}),"\n",(0,i.jsx)(n.p,{children:"Get the Application object by name or id"}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Get the Application object by name or id"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic apps:get --mode consumer [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic apps:get --mode consumer [flags] APP\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"      --fields string   field name\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);