"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[44768],{28453:(e,i,t)=>{t.d(i,{R:()=>a,x:()=>r});var n=t(296540);const s={},o=n.createContext(s);function a(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(o.Provider,{value:i},e.children)}},310088:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v1009/portaladmin/site/apic_site_cache-rebuild","title":"apic site:cache-rebuild","description":"Rebuilds the cache of a specific Portal site.","source":"@site/docs/v1009/portaladmin/site/apic_site_cache-rebuild.md","sourceDirName":"v1009/portaladmin/site","slug":"/v1009/portaladmin/site/apic_site_cache-rebuild","permalink":"/clidocs/docs/v1009/portaladmin/site/apic_site_cache-rebuild","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/portaladmin/site/apic_site_cache-rebuild.md","tags":[{"inline":true,"label":"group: site","permalink":"/clidocs/docs/tags/group-site"}],"version":"current","frontMatter":{"tags":["group: site"]},"sidebar":"tutorialSidebar","previous":{"title":"apic site","permalink":"/clidocs/docs/v1009/portaladmin/site/apic_site"},"next":{"title":"apic site:check","permalink":"/clidocs/docs/v1009/portaladmin/site/apic_site_check"}}');var s=t(474848),o=t(28453);const a={tags:["group: site"]},r="apic site",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsxs)(i.h1,{id:"apic-site",children:["apic site",":cache-rebuild"]})}),"\n",(0,s.jsx)(i.p,{children:"Rebuilds the cache of a specific Portal site."}),"\n",(0,s.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(i.p,{children:"Clears the existing cache and rebuilds a new one for a specific Portal site."}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"apic site:cache-rebuild --mode portaladmin [flags]\n"})}),"\n",(0,s.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"apic site:cache-rebuild --mode portaladmin [flags]\n"})}),"\n",(0,s.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,s.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);