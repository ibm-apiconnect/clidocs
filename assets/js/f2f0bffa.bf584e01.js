"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[24462],{86346:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>a,contentTitle:()=>o,default:()=>l,frontMatter:()=>r,metadata:()=>c,toc:()=>d});var n=i(74848),s=i(28453);const r={},o="apic user-registry-settings",c={id:"v1005/apim/apic_user-registry-settings_update",title:"apic user-registry-settings:update",description:"Update the User Registry Setting object",source:"@site/docs/v1005/apim/apic_user-registry-settings_update.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_user-registry-settings_update",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_user-registry-settings_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_user-registry-settings_update.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic user-registry-settings:get",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_user-registry-settings_get"},next:{title:"apic users",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_users"}},a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h1,{id:"apic-user-registry-settings",children:["apic user-registry-settings",":update"]}),"\n",(0,n.jsx)(t.p,{children:"Update the User Registry Setting object"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Update the User Registry Setting object"}),"\n",(0,n.jsx)(t.p,{children:"Fields allowed but ignored:"}),"\n",(0,n.jsxs)(t.ul,{children:["\n",(0,n.jsx)(t.li,{children:"name"}),"\n",(0,n.jsx)(t.li,{children:"type"}),"\n",(0,n.jsx)(t.li,{children:"api_version"}),"\n",(0,n.jsx)(t.li,{children:"scope"}),"\n",(0,n.jsx)(t.li,{children:"created_at"}),"\n",(0,n.jsx)(t.li,{children:"updated_at"}),"\n",(0,n.jsx)(t.li,{children:"url"}),"\n"]}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic user-registry-settings:update [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for user-registry-settings:update\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>o,x:()=>c});var n=i(96540);const s={},r=n.createContext(s);function o(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);