"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[463545],{28453:(e,i,s)=>{s.d(i,{R:()=>c,x:()=>o});var t=s(296540);const n={},r=t.createContext(n);function c(e){const i=t.useContext(r);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),t.createElement(r.Provider,{value:i},e.children)}},746558:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>a,contentTitle:()=>o,default:()=>p,frontMatter:()=>c,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"v1009/apim/services/apic_services_get","title":"apic services:get","description":"Services get operations","source":"@site/docs/v1009/apim/services/apic_services_get.md","sourceDirName":"v1009/apim/services","slug":"/v1009/apim/services/apic_services_get","permalink":"/clidocs/docs/v1009/apim/services/apic_services_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/services/apic_services_get.md","tags":[{"inline":true,"label":"group: services","permalink":"/clidocs/docs/tags/group-services"}],"version":"current","frontMatter":{"tags":["group: services"]},"sidebar":"tutorialSidebar","previous":{"title":"apic services:delete","permalink":"/clidocs/docs/v1009/apim/services/apic_services_delete"},"next":{"title":"apic services:list-all","permalink":"/clidocs/docs/v1009/apim/services/apic_services_list-all"}}');var n=s(474848),r=s(28453);const c={tags:["group: services"]},o="apic services",a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsxs)(i.h1,{id:"apic-services",children:["apic services",":get"]})}),"\n",(0,n.jsx)(i.p,{children:"Services get operations"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Services get operations"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic services:get [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic services:get [flags] --id --space-initiated ID\napic services:get [flags] --space-initiated NAME:VERSION\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --fields string                       List of field names to return\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for services:get\n      --id                                  id\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n      --space-initiated                     space-initiated\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,r.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}}}]);