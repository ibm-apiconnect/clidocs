"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[4709],{28453:(e,i,s)=>{s.d(i,{R:()=>n,x:()=>c});var r=s(96540);const o={},d=r.createContext(o);function n(e){const i=r.useContext(d);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:n(e.components),r.createElement(d.Provider,{value:i},e.children)}},41515:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>t,contentTitle:()=>c,default:()=>p,frontMatter:()=>n,metadata:()=>r,toc:()=>a});const r=JSON.parse('{"id":"v1009/discovery/discovered-apis/apic_discovered-apis_create","title":"apic discovered-apis:create","description":"Create a Discovered API object","source":"@site/docs/v1009/discovery/discovered-apis/apic_discovered-apis_create.md","sourceDirName":"v1009/discovery/discovered-apis","slug":"/v1009/discovery/discovered-apis/apic_discovered-apis_create","permalink":"/clidocs/docs/v1009/discovery/discovered-apis/apic_discovered-apis_create","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/discovery/discovered-apis/apic_discovered-apis_create.md","tags":[{"inline":true,"label":"group: discovered-apis","permalink":"/clidocs/docs/tags/group-discovered-apis"}],"version":"current","frontMatter":{"tags":["group: discovered-apis"]},"sidebar":"tutorialSidebar","previous":{"title":"apic discovered-apis:copy-to-draft","permalink":"/clidocs/docs/v1009/discovery/discovered-apis/apic_discovered-apis_copy-to-draft"},"next":{"title":"apic discovered-apis:delete","permalink":"/clidocs/docs/v1009/discovery/discovered-apis/apic_discovered-apis_delete"}}');var o=s(74848),d=s(28453);const n={tags:["group: discovered-apis"]},c="apic discovered-apis",t={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",li:"li",p:"p",pre:"pre",ul:"ul",...(0,d.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsxs)(i.h1,{id:"apic-discovered-apis",children:["apic discovered-apis",":create"]})}),"\n",(0,o.jsx)(i.p,{children:"Create a Discovered API object"}),"\n",(0,o.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(i.p,{children:"Create a Discovered API object"}),"\n",(0,o.jsx)(i.p,{children:"Fields allowed but ignored:"}),"\n",(0,o.jsxs)(i.ul,{children:["\n",(0,o.jsx)(i.li,{children:"id"}),"\n",(0,o.jsx)(i.li,{children:"type"}),"\n",(0,o.jsx)(i.li,{children:"api_version"}),"\n",(0,o.jsx)(i.li,{children:"scope"}),"\n",(0,o.jsx)(i.li,{children:"created_at"}),"\n",(0,o.jsx)(i.li,{children:"updated_at"}),"\n",(0,o.jsx)(i.li,{children:"url"}),"\n"]}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"apic discovered-apis:create --mode discovery [flags]\n"})}),"\n",(0,o.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"apic discovered-apis:create --mode discovery [flags] DISCOVERED_API_FILE\n"})}),"\n",(0,o.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,o.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(l,{...e})}):l(e)}}}]);