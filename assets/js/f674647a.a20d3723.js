"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[28792],{36049:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>r,contentTitle:()=>n,default:()=>p,frontMatter:()=>o,metadata:()=>a,toc:()=>c});var l=s(74848),t=s(28453);const o={tags:["group: service-ip-allowlist"]},n="apic service-ip-allowlist",a={id:"v1008/portaladmin/service-ip-allowlist/apic_service-ip-allowlist_add",title:"apic service-ip-allowlist:add",description:"Add IP(s) to the allowlist.",source:"@site/docs/v1008/portaladmin/service-ip-allowlist/apic_service-ip-allowlist_add.md",sourceDirName:"v1008/portaladmin/service-ip-allowlist",slug:"/v1008/portaladmin/service-ip-allowlist/apic_service-ip-allowlist_add",permalink:"/clidocs/docs/v1008/portaladmin/service-ip-allowlist/apic_service-ip-allowlist_add",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/service-ip-allowlist/apic_service-ip-allowlist_add.md",tags:[{inline:!0,label:"group: service-ip-allowlist",permalink:"/clidocs/docs/tags/group-service-ip-allowlist"}],version:"current",frontMatter:{tags:["group: service-ip-allowlist"]},sidebar:"tutorialSidebar",previous:{title:"apic service-ip-allowlist",permalink:"/clidocs/docs/v1008/portaladmin/service-ip-allowlist/apic_service-ip-allowlist"},next:{title:"apic service-ip-allowlist:delete",permalink:"/clidocs/docs/v1008/portaladmin/service-ip-allowlist/apic_service-ip-allowlist_delete"}},r={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,l.jsxs)(l.Fragment,{children:[(0,l.jsx)(i.header,{children:(0,l.jsxs)(i.h1,{id:"apic-service-ip-allowlist",children:["apic service-ip-allowlist",":add"]})}),"\n",(0,l.jsx)(i.p,{children:"Add IP(s) to the allowlist."}),"\n",(0,l.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,l.jsx)(i.p,{children:"Add IP(s) to the allowlist"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"apic service-ip-allowlist:add --mode portaladmin [flags]\n"})}),"\n",(0,l.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"\n      apic service-ip-allowlist:add --mode portaladmin [flags]\n\n"})}),"\n",(0,l.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:"      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --ips string                   Comma seperated list of IPs. (required)\n      --portal_service_name string   The name of the Portal Service (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,l.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,l.jsx)(i.pre,{children:(0,l.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,l.jsx)(i,{...e,children:(0,l.jsx)(d,{...e})}):d(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>n,x:()=>a});var l=s(96540);const t={},o=l.createContext(t);function n(e){const i=l.useContext(o);return l.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:n(e.components),l.createElement(o.Provider,{value:i},e.children)}}}]);