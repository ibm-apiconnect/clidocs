"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[44211],{20673:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>r,metadata:()=>o,toc:()=>d});var n=t(74848),a=t(28453);const r={},s="apic draft-apis",o={id:"v1008/apim/apic_draft-apis_clear",title:"apic draft-apis:clear",description:"Clear the Draft API objects",source:"@site/docs/v1008/apim/apic_draft-apis_clear.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_draft-apis_clear",permalink:"/clidocs/docs/v1008/apim/apic_draft-apis_clear",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_draft-apis_clear.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic draft-apis:clear-all",permalink:"/clidocs/docs/v1008/apim/apic_draft-apis_clear-all"},next:{title:"apic draft-apis:clone",permalink:"/clidocs/docs/v1008/apim/apic_draft-apis_clone"}},c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(i.h1,{id:"apic-draft-apis",children:["apic draft-apis",":clear"]}),"\n",(0,n.jsx)(i.p,{children:"Clear the Draft API objects"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Clear the Draft API objects"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic draft-apis:clear [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"      apic draft-apis:clear [flags] DRAFT_API_NAME\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --confirm string   Confirmation for critical updates (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>o});var n=t(96540);const a={},r=n.createContext(a);function s(e){const i=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function o(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(r.Provider,{value:i},e.children)}}}]);