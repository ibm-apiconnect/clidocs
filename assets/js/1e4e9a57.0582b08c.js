"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[75390],{28453:(e,n,r)=>{r.d(n,{R:()=>t,x:()=>l});var s=r(96540);const i={},o=s.createContext(i);function t(e){const n=s.useContext(o);return s.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function l(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:t(e.components),s.createElement(o.Provider,{value:n},e.children)}},66506:(e,n,r)=>{r.r(n),r.d(n,{assets:()=>a,contentTitle:()=>l,default:()=>d,frontMatter:()=>t,metadata:()=>s,toc:()=>c});const s=JSON.parse('{"id":"v1008/governance/rules/apic_rules_clear","title":"apic rules:clear","description":"Delete all versions of a Rule by name for a single version of a Ruleset","source":"@site/docs/v1008/governance/rules/apic_rules_clear.md","sourceDirName":"v1008/governance/rules","slug":"/v1008/governance/rules/apic_rules_clear","permalink":"/clidocs/docs/v1008/governance/rules/apic_rules_clear","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/governance/rules/apic_rules_clear.md","tags":[{"inline":true,"label":"group: rules","permalink":"/clidocs/docs/tags/group-rules"}],"version":"current","frontMatter":{"tags":["group: rules"]},"sidebar":"tutorialSidebar","previous":{"title":"apic rules","permalink":"/clidocs/docs/v1008/governance/rules/apic_rules"},"next":{"title":"apic rules:create","permalink":"/clidocs/docs/v1008/governance/rules/apic_rules_create"}}');var i=r(74848),o=r(28453);const t={tags:["group: rules"]},l="apic rules",a={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function u(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"apic-rules",children:["apic rules",":clear"]})}),"\n",(0,i.jsx)(n.p,{children:"Delete all versions of a Rule by name for a single version of a Ruleset"}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Delete all versions of a Rule by name for a single version of a Ruleset"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic rules:clear --mode governance [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic rules:clear --mode governance [flags] RULE_NAME\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --confirm string           Confirmation for critical updates (required)\n      --format string            Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string               Organization name or id (required)\n      --output string            Write file(s) to directory, instead of STDOUT (default "-")\n      --ruleset string           Ruleset name or id (required)\n      --ruleset_version string   Specify an explicit Ruleset version\n  -s, --server string            management server endpoint (required)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(u,{...e})}):u(e)}}}]);