"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[668264],{28453:(e,i,t)=>{t.d(i,{R:()=>o,x:()=>r});var n=t(296540);const s={},a=n.createContext(s);function o(e){const i=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),n.createElement(a.Provider,{value:i},e.children)}},293243:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>p,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"v1005/apim/apic_apis_update","title":"apic apis:update","description":"Apis update operations","source":"@site/docs/v1005/apim/apic_apis_update.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_apis_update","permalink":"/clidocs/docs/v1005/apim/apic_apis_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_apis_update.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic apis:list","permalink":"/clidocs/docs/v1005/apim/apic_apis_list"},"next":{"title":"apic apis:wsdl","permalink":"/clidocs/docs/v1005/apim/apic_apis_wsdl"}}');var s=t(474848),a=t(28453);const o={},r="apic apis",p={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsxs)(i.h1,{id:"apic-apis",children:["apic apis",":update"]})}),"\n",(0,s.jsx)(i.p,{children:"Apis update operations"}),"\n",(0,s.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(i.p,{children:"Apis update operations"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"apic apis:update [flags]\n"})}),"\n",(0,s.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for apis:update\n      --id               id\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n      --space string     Space name or id (required)\n'})}),"\n",(0,s.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:i}={...(0,a.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(d,{...e})}):d(e)}}}]);