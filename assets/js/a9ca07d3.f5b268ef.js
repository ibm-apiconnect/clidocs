"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[38229],{83417:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>d,frontMatter:()=>o,metadata:()=>r,toc:()=>l});const r=JSON.parse('{"id":"v1008/portaladmin/service/apic_service","title":"apic service","description":"Service operations","source":"@site/docs/v1008/portaladmin/service/apic_service.md","sourceDirName":"v1008/portaladmin/service","slug":"/v1008/portaladmin/service/apic_service","permalink":"/clidocs/docs/v1008/portaladmin/service/apic_service","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/service/apic_service.md","tags":[{"inline":true,"label":"group: service","permalink":"/clidocs/docs/tags/group-service"}],"version":"current","frontMatter":{"tags":["group: service"]},"sidebar":"tutorialSidebar","previous":{"title":"apic security:clear-bans","permalink":"/clidocs/docs/v1008/portaladmin/security/apic_security_clear-bans"},"next":{"title":"apic service:list","permalink":"/clidocs/docs/v1008/portaladmin/service/apic_service_list"}}');var t=n(74848),s=n(28453);const o={tags:["group: service"]},c="apic service",a={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(i.header,{children:(0,t.jsx)(i.h1,{id:"apic-service",children:"apic service"})}),"\n",(0,t.jsx)(i.p,{children:"Service operations"}),"\n",(0,t.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(i.p,{children:"Service operations"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic service --mode portaladmin [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                         Help for service\n      --portal_service_name string   The name of the Portal Service (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>o,x:()=>c});var r=n(96540);const t={},s=r.createContext(t);function o(e){const i=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(s.Provider,{value:i},e.children)}}}]);