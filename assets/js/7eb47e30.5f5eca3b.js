"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[48476],{96893:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>i,metadata:()=>o,toc:()=>p});const o=JSON.parse('{"id":"v1008/portaladmin/platforms/apic_platforms_list","title":"apic platforms:list","description":"List the platforms present on the portal service.","source":"@site/docs/v1008/portaladmin/platforms/apic_platforms_list.md","sourceDirName":"v1008/portaladmin/platforms","slug":"/v1008/portaladmin/platforms/apic_platforms_list","permalink":"/clidocs/docs/v1008/portaladmin/platforms/apic_platforms_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/platforms/apic_platforms_list.md","tags":[{"inline":true,"label":"group: platforms","permalink":"/clidocs/docs/tags/group-platforms"}],"version":"current","frontMatter":{"tags":["group: platforms"]},"sidebar":"tutorialSidebar","previous":{"title":"apic platforms","permalink":"/clidocs/docs/v1008/portaladmin/platforms/apic_platforms"},"next":{"title":"apic product","permalink":"/clidocs/docs/v1008/portaladmin/product/apic_product"}}');var n=s(74848),r=s(28453);const i={tags:["group: platforms"]},a="apic platforms",l={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"apic-platforms",children:["apic platforms",":list"]})}),"\n",(0,n.jsx)(t.p,{children:"List the platforms present on the portal service."}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Lists all the platforms that are currently present on the Portal service."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic platforms:list --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"\n      apic platforms:list --mode portaladmin [flags]\n\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --portal_service_name string   The name of the Portal Service (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(c,{...e})}):c(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>i,x:()=>a});var o=s(96540);const n={},r=o.createContext(n);function i(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:i(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);