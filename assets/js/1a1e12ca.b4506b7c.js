"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[32394],{28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>r});var n=s(96540);const i={},o=n.createContext(i);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(o.Provider,{value:t},e.children)}},57679:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>u,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>n,toc:()=>c});const n=JSON.parse('{"id":"v1008/apim/task-queues/apic_task-queues","title":"apic task-queues","description":"Task Queues operations","source":"@site/docs/v1008/apim/task-queues/apic_task-queues.md","sourceDirName":"v1008/apim/task-queues","slug":"/v1008/apim/task-queues/apic_task-queues","permalink":"/clidocs/docs/v1008/apim/task-queues/apic_task-queues","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/task-queues/apic_task-queues.md","tags":[{"inline":true,"label":"group: task-queues","permalink":"/clidocs/docs/tags/group-task-queues"}],"version":"current","frontMatter":{"tags":["group: task-queues"]},"sidebar":"tutorialSidebar","previous":{"title":"apic task-histories:list","permalink":"/clidocs/docs/v1008/apim/task-histories/apic_task-histories_list"},"next":{"title":"apic task-queues:get","permalink":"/clidocs/docs/v1008/apim/task-queues/apic_task-queues_get"}}');var i=s(74848),o=s(28453);const a={tags:["group: task-queues"]},r="apic task-queues",u={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"apic-task-queues",children:"apic task-queues"})}),"\n",(0,i.jsx)(t.p,{children:"Task Queues operations"}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:"Task Queues operations"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic task-queues [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --apply_filter    Filter tasks\n      --cascade         Cascade the behavior\n      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for task-queues\n      --kind string     kind of item\n      --limit int32     Maximum number of items to return\n      --offset int32    Offset item number from list to begin return\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n      --query string    Add query to request\n      --scope string    scope\n  -s, --server string   management server endpoint (required)\n      --state string    State for a webhook event in subscriber queue\n      --target string   target for the task\n'})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);