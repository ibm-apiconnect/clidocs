"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[90608],{60392:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>c,default:()=>p,frontMatter:()=>a,metadata:()=>o,toc:()=>d});const o=JSON.parse('{"id":"v1005/portaladmin/apic_drupal-config_get","title":"apic drupal-config:get","description":"Get the Config object","source":"@site/docs/v1005/portaladmin/apic_drupal-config_get.md","sourceDirName":"v1005/portaladmin","slug":"/v1005/portaladmin/apic_drupal-config_get","permalink":"/clidocs/docs/v1005/portaladmin/apic_drupal-config_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_drupal-config_get.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic drupal-config:delete","permalink":"/clidocs/docs/v1005/portaladmin/apic_drupal-config_delete"},"next":{"title":"apic drupal-config:list","permalink":"/clidocs/docs/v1005/portaladmin/apic_drupal-config_list"}}');var i=t(74848),r=t(28453);const a={},c="apic drupal-config",s={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"apic-drupal-config",children:["apic drupal-config",":get"]})}),"\n",(0,i.jsx)(n.p,{children:"Get the Config object"}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Get the Config object or a specific config key value."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic drupal-config:get --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'  -c, --catalog string       Name or ID of the Catalog that the site belongs to. (required)\n      --config_key string    A config key, for example "page.front".\n      --config_name string   The config object name, for example "system.site". (required)\n      --format string        Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                 Help for drupal-config:get\n  -o, --org string           Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string        management server endpoint (required)\n'})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,r.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>a,x:()=>c});var o=t(96540);const i={},r=o.createContext(i);function a(e){const n=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),o.createElement(r.Provider,{value:n},e.children)}}}]);