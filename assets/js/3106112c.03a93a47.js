"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[66482],{14098:(e,t,r)=>{r.r(t),r.d(t,{assets:()=>c,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>l});var n=r(74848),o=r(28453);const i={},s="apic factory-reset",a={id:"v1008/portaladmin/apic_factory-reset_delete",title:"apic factory-reset:delete",description:"Factory resets the Developer Portal.",source:"@site/docs/v1008/portaladmin/apic_factory-reset_delete.md",sourceDirName:"v1008/portaladmin",slug:"/v1008/portaladmin/apic_factory-reset_delete",permalink:"/ibm-apiconnect/clidocs/docs/v1008/portaladmin/apic_factory-reset_delete",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/apic_factory-reset_delete.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic factory-reset",permalink:"/ibm-apiconnect/clidocs/docs/v1008/portaladmin/apic_factory-reset"},next:{title:"apic forums",permalink:"/ibm-apiconnect/clidocs/docs/v1008/portaladmin/apic_forums"}},c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(t.h1,{id:"apic-factory-reset",children:["apic factory-reset",":delete"]}),"\n",(0,n.jsx)(t.p,{children:"Factory resets the Developer Portal."}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Performs a factory reset of the Developer Portal, deleting the portal service and all portal sites. WARNING: This command is irreversible - please ensure you have backups configured."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic factory-reset:delete --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"      apic factory-reset:delete --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"      --execute_reset string             Set to true to trigger the Developer Portal reset\n      --format string                    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --portal_service_endpoint string   The URL endpoint of the Portal Service (required)\n  -s, --server string                    management server endpoint (required)\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,r)=>{r.d(t,{R:()=>s,x:()=>a});var n=r(96540);const o={},i=n.createContext(o);function s(e){const t=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),n.createElement(i.Provider,{value:t},e.children)}}}]);