"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[85951],{28453:(t,e,o)=>{o.d(e,{R:()=>i,x:()=>r});var n=o(296540);const a={},s=n.createContext(a);function i(t){const e=n.useContext(s);return n.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function r(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(a):t.components||a:i(t.components),n.createElement(s.Provider,{value:e},t.children)}},947080:(t,e,o)=>{o.r(e),o.d(e,{assets:()=>c,contentTitle:()=>r,default:()=>m,frontMatter:()=>i,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v10010/portaladmin/custom-translation/apic_custom-translation_create-import","title":"apic custom-translation:create-import","description":"Create a task that imports an archive that contains the custom translations of a site.","source":"@site/docs/v10010/portaladmin/custom-translation/apic_custom-translation_create-import.md","sourceDirName":"v10010/portaladmin/custom-translation","slug":"/v10010/portaladmin/custom-translation/apic_custom-translation_create-import","permalink":"/clidocs/docs/v10010/portaladmin/custom-translation/apic_custom-translation_create-import","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/portaladmin/custom-translation/apic_custom-translation_create-import.md","tags":[{"inline":true,"label":"group: custom-translation","permalink":"/clidocs/docs/tags/group-custom-translation"}],"version":"current","frontMatter":{"tags":["group: custom-translation"]},"sidebar":"tutorialSidebar","previous":{"title":"apic custom-translation:create-export","permalink":"/clidocs/docs/v10010/portaladmin/custom-translation/apic_custom-translation_create-export"},"next":{"title":"apic custom-translation:delete-export","permalink":"/clidocs/docs/v10010/portaladmin/custom-translation/apic_custom-translation_delete-export"}}');var a=o(474848),s=o(28453);const i={tags:["group: custom-translation"]},r="apic custom-translation",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...t.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsxs)(e.h1,{id:"apic-custom-translation",children:["apic custom-translation",":create-import"]})}),"\n",(0,a.jsx)(e.p,{children:"Create a task that imports an archive that contains the custom translations of a site."}),"\n",(0,a.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(e.p,{children:"You can create a task to import an archive of the custom translations of a site. You can use the imported archive to simply override the custom translations for the specified site. This command may take several minutes to complete."}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"apic custom-translation:create-import --mode portaladmin [flags]\n"})}),"\n",(0,a.jsx)(e.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"apic custom-translation:create-import --mode portaladmin [flags] CUSTOM_TRANSLATION_FILE\n"})}),"\n",(0,a.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --no-poll          Do not poll the created task and just return the task ID\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,a.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function m(t={}){const{wrapper:e}={...(0,s.R)(),...t.components};return e?(0,a.jsx)(e,{...t,children:(0,a.jsx)(p,{...t})}):p(t)}}}]);