"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[46627],{49996:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>o,contentTitle:()=>c,default:()=>p,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v1005/apim/apic_gateway-services_clear","title":"apic gateway-services:clear","description":"Clear the Gateway Service objects","source":"@site/docs/v1005/apim/apic_gateway-services_clear.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_gateway-services_clear","permalink":"/clidocs/docs/v1005/apim/apic_gateway-services_clear","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_gateway-services_clear.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic gateway-services","permalink":"/clidocs/docs/v1005/apim/apic_gateway-services"},"next":{"title":"apic gateway-services:create","permalink":"/clidocs/docs/v1005/apim/apic_gateway-services_create"}}');var a=i(74848),r=i(28453);const s={},c="apic gateway-services",o={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(t.header,{children:(0,a.jsxs)(t.h1,{id:"apic-gateway-services",children:["apic gateway-services",":clear"]})}),"\n",(0,a.jsx)(t.p,{children:"Clear the Gateway Service objects"}),"\n",(0,a.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(t.p,{children:"Clear the Gateway Service objects"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:"apic gateway-services:clear [flags]\n"})}),"\n",(0,a.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'      --availability-zone string   Availability Zone name or id (required)\n      --confirm string             Confirmation for critical updates (required)\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                       Help for gateway-services:clear\n  -o, --org string                 Organization name or id (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,a.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(t.pre,{children:(0,a.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,a.jsx)(t,{...e,children:(0,a.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>s,x:()=>c});var n=i(96540);const a={},r=n.createContext(a);function s(e){const t=n.useContext(r);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(r.Provider,{value:t},e.children)}}}]);