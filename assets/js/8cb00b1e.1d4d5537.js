"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[46366],{28453:(e,a,i)=>{i.d(a,{R:()=>r,x:()=>d});var t=i(96540);const s={},n=t.createContext(s);function r(e){const a=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function d(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(n.Provider,{value:a},e.children)}},33290:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>o,contentTitle:()=>d,default:()=>c,frontMatter:()=>r,metadata:()=>t,toc:()=>p});const t=JSON.parse('{"id":"v1008/apim/draft-apis/apic_draft-apis_validate","title":"apic draft-apis:validate","description":"Validate the draft API","source":"@site/docs/v1008/apim/draft-apis/apic_draft-apis_validate.md","sourceDirName":"v1008/apim/draft-apis","slug":"/v1008/apim/draft-apis/apic_draft-apis_validate","permalink":"/clidocs/docs/v1008/apim/draft-apis/apic_draft-apis_validate","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/draft-apis/apic_draft-apis_validate.md","tags":[{"inline":true,"label":"group: draft-apis","permalink":"/clidocs/docs/tags/group-draft-apis"}],"version":"current","frontMatter":{"tags":["group: draft-apis"]},"sidebar":"tutorialSidebar","previous":{"title":"apic draft-apis:update","permalink":"/clidocs/docs/v1008/apim/draft-apis/apic_draft-apis_update"},"next":{"title":"apic draft-apis:wsdl","permalink":"/clidocs/docs/v1008/apim/draft-apis/apic_draft-apis_wsdl"}}');var s=i(74848),n=i(28453);const r={tags:["group: draft-apis"]},d="apic draft-apis",o={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(a.header,{children:(0,s.jsxs)(a.h1,{id:"apic-draft-apis",children:["apic draft-apis",":validate"]})}),"\n",(0,s.jsx)(a.p,{children:"Validate the draft API"}),"\n",(0,s.jsx)(a.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(a.p,{children:"Validate the draft API"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"apic draft-apis:validate [flags]\n"})}),"\n",(0,s.jsx)(a.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"\n      apic draft-apis:validate [flags] --id ID\n      apic draft-apis:validate [flags] NAME:VERSION\n\n"})}),"\n",(0,s.jsx)(a.h2,{id:"examples",children:"Examples"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:"Online Draft API validation\n  $ apic draft-apis:validate --org <provider-org-name-or-id> --server mgmnthost.com globalweather:1.0.0\n"})}),"\n",(0,s.jsx)(a.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:'      --catalog_name string            Name of a catalog\n      --format string                  Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --gateway_service_names string   Names of Gateway Services\n  -o, --org string                     Organization name or id (required)\n      --output string                  Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                   scope\n  -s, --server string                  management server endpoint (required)\n      --space_name string              Name of a space\n'})}),"\n",(0,s.jsx)(a.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(a.pre,{children:(0,s.jsx)(a.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function c(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,s.jsx)(a,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}}}]);