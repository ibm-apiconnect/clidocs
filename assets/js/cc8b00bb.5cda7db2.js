"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[19395],{54711:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>d,contentTitle:()=>c,default:()=>u,frontMatter:()=>s,metadata:()=>a,toc:()=>l});var i=n(74848),o=n(28453);const s={tags:["group: cloud-settings"]},c="apic cloud-settings",a={id:"v1008/apim/cloud-settings/apic_cloud-settings_about",title:"apic cloud-settings:about",description:"Return information about the cloud",source:"@site/docs/v1008/apim/cloud-settings/apic_cloud-settings_about.md",sourceDirName:"v1008/apim/cloud-settings",slug:"/v1008/apim/cloud-settings/apic_cloud-settings_about",permalink:"/clidocs/docs/v1008/apim/cloud-settings/apic_cloud-settings_about",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/cloud-settings/apic_cloud-settings_about.md",tags:[{inline:!0,label:"group: cloud-settings",permalink:"/clidocs/docs/tags/group-cloud-settings"}],version:"current",frontMatter:{tags:["group: cloud-settings"]},sidebar:"tutorialSidebar",previous:{title:"apic cloud-settings",permalink:"/clidocs/docs/v1008/apim/cloud-settings/apic_cloud-settings"},next:{title:"apic cloud-settings:audit-endpoint-test-connection",permalink:"/clidocs/docs/v1008/apim/cloud-settings/apic_cloud-settings_audit-endpoint-test-connection"}},d={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function r(t){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(e.header,{children:(0,i.jsxs)(e.h1,{id:"apic-cloud-settings",children:["apic cloud-settings",":about"]})}),"\n",(0,i.jsx)(e.p,{children:"Return information about the cloud"}),"\n",(0,i.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(e.p,{children:"Return public information about the cloud. You MUST supply the --format option when using this command from the API Connect toolkit."}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"apic cloud-settings:about [flags]\n"})}),"\n",(0,i.jsx)(e.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"\n      apic cloud-settings:about [flags]\n\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,i.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(r,{...t})}):r(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>c,x:()=>a});var i=n(96540);const o={},s=i.createContext(o);function c(t){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function a(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:c(t.components),i.createElement(s.Provider,{value:e},t.children)}}}]);