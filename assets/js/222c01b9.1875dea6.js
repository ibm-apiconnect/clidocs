"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[71116],{42571:(e,n,s)=>{s.r(n),s.d(n,{assets:()=>p,contentTitle:()=>r,default:()=>l,frontMatter:()=>o,metadata:()=>c,toc:()=>a});var i=s(74848),t=s(28453);const o={},r="apic permissions",c={id:"v1005/consumer/apic_permissions_get",title:"apic permissions:get",description:"Permissions get operations",source:"@site/docs/v1005/consumer/apic_permissions_get.md",sourceDirName:"v1005/consumer",slug:"/v1005/consumer/apic_permissions_get",permalink:"/clidocs/docs/v1005/consumer/apic_permissions_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/consumer/apic_permissions_get.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic permissions",permalink:"/clidocs/docs/v1005/consumer/apic_permissions"},next:{title:"apic permissions:list-all",permalink:"/clidocs/docs/v1005/consumer/apic_permissions_list-all"}},p={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(n.header,{children:(0,i.jsxs)(n.h1,{id:"apic-permissions",children:["apic permissions",":get"]})}),"\n",(0,i.jsx)(n.p,{children:"Permissions get operations"}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Permissions get operations"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic permissions:get --mode consumer [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"      --fields string          field name\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                   Help for permissions:get\n      --output string          Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string          management server endpoint (required)\n      --subcollection string   subcollection\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:n}={...(0,t.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,n,s)=>{s.d(n,{R:()=>r,x:()=>c});var i=s(96540);const t={},o=i.createContext(t);function r(e){const n=i.useContext(o);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),i.createElement(o.Provider,{value:n},e.children)}}}]);