"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[704825],{28453:(e,n,t)=>{t.d(n,{R:()=>l,x:()=>o});var i=t(296540);const r={},s=i.createContext(r);function l(e){const n=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function o(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:l(e.components),i.createElement(s.Provider,{value:n},e.children)}},295845:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>l,metadata:()=>i,toc:()=>p});const i=JSON.parse('{"id":"v10010/apim/opentelemetries/apic_opentelemetries_create","title":"apic opentelemetries:create","description":"Create a Opentelemetry object","source":"@site/docs/v10010/apim/opentelemetries/apic_opentelemetries_create.md","sourceDirName":"v10010/apim/opentelemetries","slug":"/v10010/apim/opentelemetries/apic_opentelemetries_create","permalink":"/clidocs/docs/v10010/apim/opentelemetries/apic_opentelemetries_create","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/opentelemetries/apic_opentelemetries_create.md","tags":[{"inline":true,"label":"group: opentelemetries","permalink":"/clidocs/docs/tags/group-opentelemetries"}],"version":"current","frontMatter":{"tags":["group: opentelemetries"]},"sidebar":"tutorialSidebar","previous":{"title":"apic opentelemetries:clear","permalink":"/clidocs/docs/v10010/apim/opentelemetries/apic_opentelemetries_clear"},"next":{"title":"apic opentelemetries:delete","permalink":"/clidocs/docs/v10010/apim/opentelemetries/apic_opentelemetries_delete"}}');var r=t(474848),s=t(28453);const l={tags:["group: opentelemetries"]},o="apic opentelemetries",a={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"Example of opentelemetry creation.",id:"example-of-opentelemetry-creation",level:4},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(n.header,{children:(0,r.jsxs)(n.h1,{id:"apic-opentelemetries",children:["apic opentelemetries",":create"]})}),"\n",(0,r.jsx)(n.p,{children:"Create a Opentelemetry object"}),"\n",(0,r.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(n.p,{children:"Create a Opentelemetry object"}),"\n",(0,r.jsx)(n.p,{children:"Fields not allowed:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"gateway_service_urls"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Required fields:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"endpoints"}),"\n"]}),"\n",(0,r.jsx)(n.p,{children:"Fields allowed but ignored:"}),"\n",(0,r.jsxs)(n.ul,{children:["\n",(0,r.jsx)(n.li,{children:"id"}),"\n",(0,r.jsx)(n.li,{children:"type"}),"\n",(0,r.jsx)(n.li,{children:"api_version"}),"\n",(0,r.jsx)(n.li,{children:"scope"}),"\n",(0,r.jsx)(n.li,{children:"created_at"}),"\n",(0,r.jsx)(n.li,{children:"updated_at"}),"\n",(0,r.jsx)(n.li,{children:"url"}),"\n"]}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apic opentelemetries:create [flags]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apic opentelemetries:create [flags] OPENTELEMETRY_FILE\n"})}),"\n",(0,r.jsx)(n.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.h4,{id:"example-of-opentelemetry-creation",children:"Example of opentelemetry creation."}),"\n",(0,r.jsx)(n.hr,{}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"attributes:\n- name: env\n  value: production\nbatching:\n  batch-size: 500\n  export-interval: 3000\n  export-timeout: 50000\n  max-queue-size: 1000\n  max-threads: 3\nendpoints:\n- endpoint: https://open_telemetry.com\n  protocol: grpc\n  signals:\n  - logs\n  tls_client_profile_url: https://acme-apim.example.com/api/orgs/org1/tls-client-profiles/tls-client-profile1\nheaders:\n- name: Authorization\n  value: Bearer\nname: opentelemetry\nsampling:\n  parent-based: true\n  sampler-ratio: 50\n  sampler-type: always_on\ntitle: Opentelemetry\n"})}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(c,{...e})}):c(e)}}}]);