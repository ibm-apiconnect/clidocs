"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[57820],{34320:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>n,metadata:()=>d,toc:()=>a});var t=s(74848),o=s(28453);const n={},r="apic discovered-apis",d={id:"v1008/discovery/apic_discovered-apis_get",title:"apic discovered-apis:get",description:"Get the Discovered API object by name and version",source:"@site/docs/v1008/discovery/apic_discovered-apis_get.md",sourceDirName:"v1008/discovery",slug:"/v1008/discovery/apic_discovered-apis_get",permalink:"/clidocs/docs/v1008/discovery/apic_discovered-apis_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/discovery/apic_discovered-apis_get.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic discovered-apis:delete",permalink:"/clidocs/docs/v1008/discovery/apic_discovered-apis_delete"},next:{title:"apic discovered-apis:list-all",permalink:"/clidocs/docs/v1008/discovery/apic_discovered-apis_list-all"}},c={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.h1,{id:"apic-discovered-apis",children:["apic discovered-apis",":get"]}),"\n",(0,t.jsx)(i.p,{children:"Get the Discovered API object by name and version"}),"\n",(0,t.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(i.p,{children:"Get the Discovered API object by name and version"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic discovered-apis:get --mode discovery [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"      apic discovered-apis:get --mode discovery [flags] --id ID\n      apic discovered-apis:get --mode discovery [flags] NAME:VERSION\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>r,x:()=>d});var t=s(96540);const o={},n=t.createContext(o);function r(e){const i=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function d(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:r(e.components),t.createElement(n.Provider,{value:i},e.children)}}}]);