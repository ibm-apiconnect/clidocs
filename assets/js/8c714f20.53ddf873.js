"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[97572],{28337:(e,i,o)=>{o.r(i),o.d(i,{assets:()=>c,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>r});var t=o(74848),n=o(28453);const s={},l="apic global-policies",a={id:"v1008/apim/apic_global-policies_list",title:"apic global-policies:list",description:"Global Policies list operations",source:"@site/docs/v1008/apim/apic_global-policies_list.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_global-policies_list",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_global-policies_list",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_global-policies_list.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic global-policies:list-all",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_global-policies_list-all"},next:{title:"apic global-policies:update",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_global-policies_update"}},c={},r=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.h1,{id:"apic-global-policies",children:["apic global-policies",":list"]}),"\n",(0,t.jsx)(i.p,{children:"Global Policies list operations"}),"\n",(0,t.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(i.p,{children:"Global Policies list operations"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic global-policies:list [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"      apic global-policies:list [flags] --scope space GLOBAL_POLICY_NAME\n      apic global-policies:list [flags] --scope catalog GLOBAL_POLICY_NAME\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --fields string                       List of field names to return\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for global-policies:list\n      --limit int32                         Maximum number of items to return\n      --offset int32                        Offset item number from list to begin return\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n'})}),"\n",(0,t.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(p,{...e})}):p(e)}},28453:(e,i,o)=>{o.d(i,{R:()=>l,x:()=>a});var t=o(96540);const n={},s=t.createContext(n);function l(e){const i=t.useContext(s);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:l(e.components),t.createElement(s.Provider,{value:i},e.children)}}}]);