"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[59321],{52400:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>p,frontMatter:()=>n,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"v1009/analytics/service/apic_service_catalogServicestatus","title":"apic service:catalogServicestatus","description":"Used by the UI to get the analytics service status","source":"@site/docs/v1009/analytics/service/apic_service_catalogServicestatus.md","sourceDirName":"v1009/analytics/service","slug":"/v1009/analytics/service/apic_service_catalogServicestatus","permalink":"/clidocs/docs/v1009/analytics/service/apic_service_catalogServicestatus","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/analytics/service/apic_service_catalogServicestatus.md","tags":[{"inline":true,"label":"group: service","permalink":"/clidocs/docs/tags/group-service"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"}],"version":"current","frontMatter":{"tags":["group: service","scope: catalog"]},"sidebar":"tutorialSidebar","previous":{"title":"apic service","permalink":"/clidocs/docs/v1009/analytics/service/apic_service"},"next":{"title":"apic service:cloudServicestatus","permalink":"/clidocs/docs/v1009/analytics/service/apic_service_cloudServicestatus"}}');var c=s(74848),a=s(28453);const n={tags:["group: service","scope: catalog"]},r="apic service",o={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,a.R)(),...e.components};return(0,c.jsxs)(c.Fragment,{children:[(0,c.jsx)(t.header,{children:(0,c.jsxs)(t.h1,{id:"apic-service",children:["apic service",":catalogServicestatus"]})}),"\n",(0,c.jsx)(t.p,{children:"Used by the UI to get the analytics service status"}),"\n",(0,c.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,c.jsx)(t.p,{children:"Used by the UI to get the analytics service status."}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{children:"apic service:catalogServicestatus --mode analytics [flags]\n"})}),"\n",(0,c.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{children:"apic service:catalogServicestatus --mode analytics [flags]\n"})}),"\n",(0,c.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n  -c, --catalog string             Catalog name or ID. (required)\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string                 Provider organization name or ID. (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,c.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,c.jsx)(t.pre,{children:(0,c.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,a.R)(),...e.components};return t?(0,c.jsx)(t,{...e,children:(0,c.jsx)(d,{...e})}):d(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>n,x:()=>r});var i=s(96540);const c={},a=i.createContext(c);function n(e){const t=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:n(e.components),i.createElement(a.Provider,{value:t},e.children)}}}]);