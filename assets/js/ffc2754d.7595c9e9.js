"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[58560],{51164:(t,i,e)=>{e.r(i),e.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>m,frontMatter:()=>s,metadata:()=>a,toc:()=>p});var o=e(74848),n=e(28453);const s={},c="apic notification-templates",a={id:"v1008/apim/apic_notification-templates_list",title:"apic notification-templates:list",description:"Notification Templates list operations",source:"@site/docs/v1008/apim/apic_notification-templates_list.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_notification-templates_list",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_notification-templates_list",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_notification-templates_list.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic notification-templates:list-all",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_notification-templates_list-all"},next:{title:"apic notification-templates:update",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_notification-templates_update"}},l={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function r(t){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,n.R)(),...t.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsxs)(i.h1,{id:"apic-notification-templates",children:["apic notification-templates",":list"]}),"\n",(0,o.jsx)(i.p,{children:"Notification Templates list operations"}),"\n",(0,o.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(i.p,{children:"Notification Templates list operations"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"apic notification-templates:list [flags]\n"})}),"\n",(0,o.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"      apic notification-templates:list [flags] --scope space --subcollection space\n      apic notification-templates:list [flags] --scope space --subcollection consumer\n      apic notification-templates:list [flags] --scope org --subcollection space\n      apic notification-templates:list [flags] --scope org --subcollection provider\n      apic notification-templates:list [flags] --scope org --subcollection consumer\n      apic notification-templates:list [flags] --scope org --subcollection catalog\n      apic notification-templates:list [flags] --scope org --subcollection admin\n      apic notification-templates:list [flags] --scope cloud --subcollection space\n      apic notification-templates:list [flags] --scope cloud --subcollection provider\n      apic notification-templates:list [flags] --scope cloud --subcollection consumer\n      apic notification-templates:list [flags] --scope cloud --subcollection cloud\n      apic notification-templates:list [flags] --scope cloud --subcollection catalog\n      apic notification-templates:list [flags] --scope cloud --subcollection admin\n      apic notification-templates:list [flags] --scope catalog --subcollection space\n      apic notification-templates:list [flags] --scope catalog --subcollection consumer\n      apic notification-templates:list [flags] --scope catalog --subcollection catalog\n"})}),"\n",(0,o.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'  -c, --catalog string         Catalog name or id (required)\n      --fields string          List of field names to return\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                   Help for notification-templates:list\n      --limit int32            Maximum number of items to return\n      --offset int32           Offset item number from list to begin return\n  -o, --org string             Organization name or id (required)\n      --output string          Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string           scope\n  -s, --server string          management server endpoint (required)\n      --space string           Space name or id (required)\n      --subcollection string   subcollection\n'})}),"\n",(0,o.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function m(t={}){const{wrapper:i}={...(0,n.R)(),...t.components};return i?(0,o.jsx)(i,{...t,children:(0,o.jsx)(r,{...t})}):r(t)}},28453:(t,i,e)=>{e.d(i,{R:()=>c,x:()=>a});var o=e(96540);const n={},s=o.createContext(n);function c(t){const i=o.useContext(s);return o.useMemo((function(){return"function"==typeof t?t(i):{...i,...t}}),[i,t])}function a(t){let i;return i=t.disableParentContext?"function"==typeof t.components?t.components(n):t.components||n:c(t.components),o.createElement(s.Provider,{value:i},t.children)}}}]);