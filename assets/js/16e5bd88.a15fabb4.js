"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[26846],{23084:(e,r,n)=>{n.r(r),n.d(r,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"v1008/portaladmin/service/apic_service_content-refresh","title":"apic service:content-refresh","description":"Triggers a cloud level content refresh of the Developer Portal Service configuration from API Manager.","source":"@site/docs/v1008/portaladmin/service/apic_service_content-refresh.md","sourceDirName":"v1008/portaladmin/service","slug":"/v1008/portaladmin/service/apic_service_content-refresh","permalink":"/clidocs/docs/v1008/portaladmin/service/apic_service_content-refresh","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/service/apic_service_content-refresh.md","tags":[{"inline":true,"label":"group: service","permalink":"/clidocs/docs/tags/group-service"}],"version":"current","frontMatter":{"tags":["group: service"]},"sidebar":"tutorialSidebar","previous":{"title":"apic service","permalink":"/clidocs/docs/v1008/portaladmin/service/apic_service"},"next":{"title":"apic service:list","permalink":"/clidocs/docs/v1008/portaladmin/service/apic_service_list"}}');var t=n(74848),s=n(28453);const o={tags:["group: service"]},c="apic service",a={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsxs)(r.h1,{id:"apic-service",children:["apic service",":content-refresh"]})}),"\n",(0,t.jsx)(r.p,{children:"Triggers a cloud level content refresh of the Developer Portal Service configuration from API Manager."}),"\n",(0,t.jsx)(r.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(r.p,{children:"Triggers a cloud level content refresh of the Developer Portal Service configuration from API Manager."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"apic service:content-refresh --mode portaladmin [flags]\n"})}),"\n",(0,t.jsx)(r.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"apic service:content-refresh --mode portaladmin [flags]\n"})}),"\n",(0,t.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --portal_service_name string   The name of the Portal Service (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,t.jsx)(r.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,r,n)=>{n.d(r,{R:()=>o,x:()=>c});var i=n(96540);const t={},s=i.createContext(t);function o(e){const r=i.useContext(s);return i.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function c(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),i.createElement(s.Provider,{value:r},e.children)}}}]);