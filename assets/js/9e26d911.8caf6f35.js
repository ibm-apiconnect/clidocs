"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[47930],{28093:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>o,toc:()=>p});var n=i(74848),s=i(28453);const a={tags:["group: gateway-services"]},r="apic gateway-services",o={id:"v1008/apim/gateway-services/apic_gateway-services",title:"apic gateway-services",description:"Gateway Services operations",source:"@site/docs/v1008/apim/gateway-services/apic_gateway-services.md",sourceDirName:"v1008/apim/gateway-services",slug:"/v1008/apim/gateway-services/apic_gateway-services",permalink:"/clidocs/docs/v1008/apim/gateway-services/apic_gateway-services",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/gateway-services/apic_gateway-services.md",tags:[{inline:!0,label:"group: gateway-services",permalink:"/clidocs/docs/tags/group-gateway-services"}],version:"current",frontMatter:{tags:["group: gateway-services"]},sidebar:"tutorialSidebar",previous:{title:"apic gateway-extensions:update",permalink:"/clidocs/docs/v1008/apim/gateway-extensions/apic_gateway-extensions_update"},next:{title:"apic gateway-services:clear",permalink:"/clidocs/docs/v1008/apim/gateway-services/apic_gateway-services_clear"}},c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsx)(t.h1,{id:"apic-gateway-services",children:"apic gateway-services"})}),"\n",(0,n.jsx)(t.p,{children:"Gateway Services operations"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Gateway Services operations"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic gateway-services [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --availability-zone string   Availability Zone name or id (required)\n      --fields string              List of field names to return\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                       Help for gateway-services\n      --limit int32                Maximum number of items to return\n      --offset int32               Offset item number from list to begin return\n  -o, --org string                 Organization name or id (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string               scope\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var n=i(96540);const s={},a=n.createContext(s);function r(e){const t=n.useContext(a);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),n.createElement(a.Provider,{value:t},e.children)}}}]);