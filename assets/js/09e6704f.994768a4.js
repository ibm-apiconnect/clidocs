"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[3368],{36436:(e,i,r)=>{r.r(i),r.d(i,{assets:()=>c,contentTitle:()=>a,default:()=>d,frontMatter:()=>o,metadata:()=>t,toc:()=>g});const t=JSON.parse('{"id":"v1009/apim/configured-catalog-user-registries/apic_configured-catalog-user-registries","title":"apic configured-catalog-user-registries","description":"Configured Catalog User Registries operations","source":"@site/docs/v1009/apim/configured-catalog-user-registries/apic_configured-catalog-user-registries.md","sourceDirName":"v1009/apim/configured-catalog-user-registries","slug":"/v1009/apim/configured-catalog-user-registries/apic_configured-catalog-user-registries","permalink":"/clidocs/docs/v1009/apim/configured-catalog-user-registries/apic_configured-catalog-user-registries","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/configured-catalog-user-registries/apic_configured-catalog-user-registries.md","tags":[{"inline":true,"label":"group: configured-catalog-user-registries","permalink":"/clidocs/docs/tags/group-configured-catalog-user-registries"}],"version":"current","frontMatter":{"tags":["group: configured-catalog-user-registries"]},"sidebar":"tutorialSidebar","previous":{"title":"apic configured-billings:list","permalink":"/clidocs/docs/v1009/apim/configured-billings/apic_configured-billings_list"},"next":{"title":"apic configured-catalog-user-registries:create","permalink":"/clidocs/docs/v1009/apim/configured-catalog-user-registries/apic_configured-catalog-user-registries_create"}}');var s=r(74848),n=r(28453);const o={tags:["group: configured-catalog-user-registries"]},a="apic configured-catalog-user-registries",c={},g=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(i.header,{children:(0,s.jsx)(i.h1,{id:"apic-configured-catalog-user-registries",children:"apic configured-catalog-user-registries"})}),"\n",(0,s.jsx)(i.p,{children:"Configured Catalog User Registries operations"}),"\n",(0,s.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(i.p,{children:"Configured Catalog User Registries operations"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:"apic configured-catalog-user-registries [flags]\n"})}),"\n",(0,s.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for configured-catalog-user-registries\n      --limit int32      Maximum number of items to return\n      --offset int32     Offset item number from list to begin return\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,s.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(i.pre,{children:(0,s.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,s.jsx)(i,{...e,children:(0,s.jsx)(l,{...e})}):l(e)}},28453:(e,i,r)=>{r.d(i,{R:()=>o,x:()=>a});var t=r(96540);const s={},n=t.createContext(s);function o(e){const i=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:o(e.components),t.createElement(n.Provider,{value:i},e.children)}}}]);