"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[32561],{35668:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>c,metadata:()=>o,toc:()=>r});const o=JSON.parse('{"id":"v1009/apim/notification-styles/apic_notification-styles_get","title":"apic notification-styles:get","description":"Notification Styles get operations","source":"@site/docs/v1009/apim/notification-styles/apic_notification-styles_get.md","sourceDirName":"v1009/apim/notification-styles","slug":"/v1009/apim/notification-styles/apic_notification-styles_get","permalink":"/clidocs/docs/v1009/apim/notification-styles/apic_notification-styles_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/apim/notification-styles/apic_notification-styles_get.md","tags":[{"inline":true,"label":"group: notification-styles","permalink":"/clidocs/docs/tags/group-notification-styles"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: cloud","permalink":"/clidocs/docs/tags/scope-cloud"},{"inline":true,"label":"scope: consumer","permalink":"/clidocs/docs/tags/scope-consumer"},{"inline":true,"label":"scope: org","permalink":"/clidocs/docs/tags/scope-org"}],"version":"current","frontMatter":{"tags":["group: notification-styles","scope: catalog","scope: cloud","scope: consumer","scope: org"]},"sidebar":"tutorialSidebar","previous":{"title":"apic notification-styles","permalink":"/clidocs/docs/v1009/apim/notification-styles/apic_notification-styles"},"next":{"title":"apic notification-styles:update","permalink":"/clidocs/docs/v1009/apim/notification-styles/apic_notification-styles_update"}}');var n=i(74848),s=i(28453);const c={tags:["group: notification-styles","scope: catalog","scope: cloud","scope: consumer","scope: org"]},a="apic notification-styles",l={},r=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"apic-notification-styles",children:["apic notification-styles",":get"]})}),"\n",(0,n.jsx)(t.p,{children:"Notification Styles get operations"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Notification Styles get operations"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic notification-styles:get [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic notification-styles:get [flags] --scope org\napic notification-styles:get [flags] --scope consumer\napic notification-styles:get [flags] --scope cloud\napic notification-styles:get [flags] --scope catalog\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for notification-styles:get\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>c,x:()=>a});var o=i(96540);const n={},s=o.createContext(n);function c(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);