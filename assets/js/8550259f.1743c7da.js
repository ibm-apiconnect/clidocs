"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[765335],{28453:(e,s,n)=>{n.d(s,{R:()=>r,x:()=>c});var i=n(296540);const a={},t=i.createContext(a);function r(e){const s=i.useContext(t);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function c(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:r(e.components),i.createElement(t.Provider,{value:s},e.children)}},383278:(e,s,n)=>{n.r(s),n.d(s,{assets:()=>p,contentTitle:()=>c,default:()=>d,frontMatter:()=>r,metadata:()=>i,toc:()=>o});const i=JSON.parse('{"id":"v1008/apim/spaces/apic_spaces_update","title":"apic spaces:update","description":"Update the Space object by name or id","source":"@site/docs/v1008/apim/spaces/apic_spaces_update.md","sourceDirName":"v1008/apim/spaces","slug":"/v1008/apim/spaces/apic_spaces_update","permalink":"/clidocs/docs/v1008/apim/spaces/apic_spaces_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/spaces/apic_spaces_update.md","tags":[{"inline":true,"label":"group: spaces","permalink":"/clidocs/docs/tags/group-spaces"}],"version":"current","frontMatter":{"tags":["group: spaces"]},"sidebar":"tutorialSidebar","previous":{"title":"apic spaces:transfer-owner","permalink":"/clidocs/docs/v1008/apim/spaces/apic_spaces_transfer-owner"},"next":{"title":"apic subscriber-events","permalink":"/clidocs/docs/v1008/apim/subscriber-events/apic_subscriber-events"}}');var a=n(474848),t=n(28453);const r={tags:["group: spaces"]},c="apic spaces",p={},o=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"Example of space update.",id:"example-of-space-update",level:4},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const s={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,t.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(s.header,{children:(0,a.jsxs)(s.h1,{id:"apic-spaces",children:["apic spaces",":update"]})}),"\n",(0,a.jsx)(s.p,{children:"Update the Space object by name or id"}),"\n",(0,a.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(s.p,{children:"Update the Space object by name or id"}),"\n",(0,a.jsx)(s.p,{children:"Fields allowed but ignored:"}),"\n",(0,a.jsxs)(s.ul,{children:["\n",(0,a.jsx)(s.li,{children:"id"}),"\n",(0,a.jsx)(s.li,{children:"type"}),"\n",(0,a.jsx)(s.li,{children:"api_version"}),"\n",(0,a.jsx)(s.li,{children:"scope"}),"\n",(0,a.jsx)(s.li,{children:"created_at"}),"\n",(0,a.jsx)(s.li,{children:"updated_at"}),"\n",(0,a.jsx)(s.li,{children:"url"}),"\n",(0,a.jsx)(s.li,{children:"org_url"}),"\n",(0,a.jsx)(s.li,{children:"catalog_url"}),"\n"]}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"apic spaces:update [flags]\n"})}),"\n",(0,a.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"apic spaces:update [flags] SPACE SPACE_FILE\n"})}),"\n",(0,a.jsx)(s.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.h4,{id:"example-of-space-update",children:"Example of space update."}),"\n",(0,a.jsx)(s.hr,{}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:"summary: An example space updation\ntitle: Acme space\n"})}),"\n",(0,a.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,a.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(s.pre,{children:(0,a.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:s}={...(0,t.R)(),...e.components};return s?(0,a.jsx)(s,{...e,children:(0,a.jsx)(l,{...e})}):l(e)}}}]);