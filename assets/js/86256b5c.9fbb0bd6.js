"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[1566],{25220:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>l,contentTitle:()=>r,default:()=>u,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var o=n(74848),s=n(28453);const i={tags:["group: queue"]},r="apic queue",a={id:"v1008/portaladmin/queue/apic_queue_list",title:"apic queue:list",description:"Shows queued and locked platform related tasks across all Developer Portals.",source:"@site/docs/v1008/portaladmin/queue/apic_queue_list.md",sourceDirName:"v1008/portaladmin/queue",slug:"/v1008/portaladmin/queue/apic_queue_list",permalink:"/clidocs/docs/v1008/portaladmin/queue/apic_queue_list",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/queue/apic_queue_list.md",tags:[{inline:!0,label:"group: queue",permalink:"/clidocs/docs/tags/group-queue"}],version:"current",frontMatter:{tags:["group: queue"]},sidebar:"tutorialSidebar",previous:{title:"apic queue:get",permalink:"/clidocs/docs/v1008/portaladmin/queue/apic_queue_get"},next:{title:"apic role",permalink:"/clidocs/docs/v1008/portaladmin/role/apic_role"}},l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsxs)(t.h1,{id:"apic-queue",children:["apic queue",":list"]})}),"\n",(0,o.jsx)(t.p,{children:"Shows queued and locked platform related tasks across all Developer Portals."}),"\n",(0,o.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(t.p,{children:"Shows queued and locked platform related tasks across all Developer Portal, including Developer Portal creates, restores, upgrades, snapshots, crons etc."}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"apic queue:list --mode portaladmin [flags]\n"})}),"\n",(0,o.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"\n      apic queue:list --mode portaladmin [flags]\n\n"})}),"\n",(0,o.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"      --format string                Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --portal_service_name string   The name of the Portal Service (required)\n  -s, --server string                management server endpoint (required)\n"})}),"\n",(0,o.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>r,x:()=>a});var o=n(96540);const s={},i=o.createContext(s);function r(e){const t=o.useContext(i);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),o.createElement(i.Provider,{value:t},e.children)}}}]);