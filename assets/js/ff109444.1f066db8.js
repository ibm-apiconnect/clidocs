"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[23427],{83e3:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>s,toc:()=>p});const s=JSON.parse('{"id":"v1009/consumer/test/apic_test","title":"apic test","description":"Runs a test and returns","source":"@site/docs/v1009/consumer/test/apic_test.md","sourceDirName":"v1009/consumer/test","slug":"/v1009/consumer/test/apic_test","permalink":"/clidocs/docs/v1009/consumer/test/apic_test","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1009/consumer/test/apic_test.md","tags":[{"inline":true,"label":"group: test","permalink":"/clidocs/docs/tags/group-test"}],"version":"current","frontMatter":{"tags":["group: test"]},"sidebar":"tutorialSidebar","previous":{"title":"apic subscriptions:update","permalink":"/clidocs/docs/v1009/consumer/subscriptions/apic_subscriptions_update"},"next":{"title":"apic user-registries","permalink":"/clidocs/docs/v1009/consumer/user-registries/apic_user-registries"}}');var i=n(74848),r=n(28453);const o={tags:["group: test"]},c="apic test",a={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"apic-test",children:"apic test"})}),"\n",(0,i.jsx)(t.p,{children:"Runs a test and returns"}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:"apic-test is a CLI for testing your APIs"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic test --mode consumer [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"      --certPath string      cert path\n  -c, --config-file string   Give external configuration file path\n  -h, --help                 Help for test\n  -k, --insecureSkipVerify   Skip certificate checks\n  -j, --junit                Output in junit format\n      --mTLS                 Enable mTLS\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>o,x:()=>c});var s=n(96540);const i={},r=s.createContext(i);function o(e){const t=s.useContext(r);return s.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),s.createElement(r.Provider,{value:t},e.children)}}}]);