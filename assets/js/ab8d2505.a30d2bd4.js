"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[54708],{66577:(t,e,n)=>{n.r(e),n.d(e,{assets:()=>r,contentTitle:()=>a,default:()=>p,frontMatter:()=>s,metadata:()=>c,toc:()=>l});var i=n(74848),o=n(28453);const s={},a="apic catalog-settings",c={id:"v1005/apim/apic_catalog-settings_get",title:"apic catalog-settings:get",description:"Get the Catalog Setting object",source:"@site/docs/v1005/apim/apic_catalog-settings_get.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_catalog-settings_get",permalink:"/clidocs/docs/v1005/apim/apic_catalog-settings_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_catalog-settings_get.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic catalog-settings",permalink:"/clidocs/docs/v1005/apim/apic_catalog-settings"},next:{title:"apic catalog-settings:update",permalink:"/clidocs/docs/v1005/apim/apic_catalog-settings_update"}},r={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(t){const e={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...t.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(e.h1,{id:"apic-catalog-settings",children:["apic catalog-settings",":get"]}),"\n",(0,i.jsx)(e.p,{children:"Get the Catalog Setting object"}),"\n",(0,i.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(e.p,{children:"Get the Catalog Setting object"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"apic catalog-settings:get [flags]\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:"  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for catalog-settings:get\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,i.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(e.pre,{children:(0,i.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(t={}){const{wrapper:e}={...(0,o.R)(),...t.components};return e?(0,i.jsx)(e,{...t,children:(0,i.jsx)(d,{...t})}):d(t)}},28453:(t,e,n)=>{n.d(e,{R:()=>a,x:()=>c});var i=n(96540);const o={},s=i.createContext(o);function a(t){const e=i.useContext(s);return i.useMemo((function(){return"function"==typeof t?t(e):{...e,...t}}),[e,t])}function c(t){let e;return e=t.disableParentContext?"function"==typeof t.components?t.components(o):t.components||o:a(t.components),i.createElement(s.Provider,{value:e},t.children)}}}]);