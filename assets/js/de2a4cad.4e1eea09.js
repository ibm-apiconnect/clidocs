"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[72725],{73768:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>n,metadata:()=>a,toc:()=>l});var r=s(74848),t=s(28453);const n={tags:["group: queries","scope: org"]},o="apic queries",a={id:"v1008/analytics/queries/apic_queries_orgListShared",title:"apic queries:orgListShared",description:"List shared queries at org scope",source:"@site/docs/v1008/analytics/queries/apic_queries_orgListShared.md",sourceDirName:"v1008/analytics/queries",slug:"/v1008/analytics/queries/apic_queries_orgListShared",permalink:"/clidocs/docs/v1008/analytics/queries/apic_queries_orgListShared",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/analytics/queries/apic_queries_orgListShared.md",tags:[{inline:!0,label:"group: queries",permalink:"/clidocs/docs/tags/group-queries"},{inline:!0,label:"scope: org",permalink:"/clidocs/docs/tags/scope-org"}],version:"current",frontMatter:{tags:["group: queries","scope: org"]},sidebar:"tutorialSidebar",previous:{title:"apic queries:orgList",permalink:"/clidocs/docs/v1008/analytics/queries/apic_queries_orgList"},next:{title:"apic queries:orgShare",permalink:"/clidocs/docs/v1008/analytics/queries/apic_queries_orgShare"}},c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsxs)(i.h1,{id:"apic-queries",children:["apic queries",":orgListShared"]})}),"\n",(0,r.jsx)(i.p,{children:"List shared queries at org scope"}),"\n",(0,r.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(i.p,{children:"Return a list of saved queries shared by others at org scope."}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"apic queries:orgListShared --mode analytics [flags]\n"})}),"\n",(0,r.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"\n      apic queries:orgListShared --mode analytics [flags]\n\n"})}),"\n",(0,r.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --limit string               If set, the number of items to return when requesting a list. Maximum: 500\n      --offset string              If set, the offset to be applied when requesting a list. e.g. return events starting from the 100th result\n  -o, --org string                 Provider organization name or ID. (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n      --search string              Search for a saved query by either title, description or query_string.\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,r.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(d,{...e})}):d(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>a});var r=s(96540);const t={},n=r.createContext(t);function o(e){const i=r.useContext(n);return r.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:o(e.components),r.createElement(n.Provider,{value:i},e.children)}}}]);