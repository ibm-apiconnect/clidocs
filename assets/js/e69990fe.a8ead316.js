"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[74280],{10467:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>c,metadata:()=>a,toc:()=>r});var t=i(74848),o=i(28453);const c={},s="apic config",a={id:"v1005/analytics/apic_config_set",title:"apic config:set",description:"Set or update configuration variables",source:"@site/docs/v1005/analytics/apic_config_set.md",sourceDirName:"v1005/analytics",slug:"/v1005/analytics/apic_config_set",permalink:"/clidocs/docs/v1005/analytics/apic_config_set",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/analytics/apic_config_set.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic config:list",permalink:"/clidocs/docs/v1005/analytics/apic_config_list"},next:{title:"apic dashboards",permalink:"/clidocs/docs/v1005/analytics/apic_dashboards"}},l={},r=[{value:"Synopsis",id:"synopsis",level:2},{value:"Examples",id:"examples",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(n.h1,{id:"apic-config",children:["apic config",":set"]}),"\n",(0,t.jsx)(n.p,{children:"Set or update configuration variables"}),"\n",(0,t.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:"config_topic_longanalytics"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apic config:set NAME=VALUE ... --mode analytics [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"examples",children:"Examples"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"cmd_config_set_examplesanalytics\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"  -g, --global   list the global configuration variables\n  -h, --help     Help for config:set\n  -l, --local    list the local application configuration variables\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,o.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}},28453:(e,n,i)=>{i.d(n,{R:()=>s,x:()=>a});var t=i(96540);const o={},c=t.createContext(o);function s(e){const n=t.useContext(c);return t.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function a(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(o):e.components||o:s(e.components),t.createElement(c.Provider,{value:n},e.children)}}}]);