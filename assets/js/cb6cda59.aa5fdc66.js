"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[35618],{72026:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>s,contentTitle:()=>o,default:()=>p,frontMatter:()=>a,metadata:()=>r,toc:()=>l});var i=t(74848),c=t(28453);const a={},o="apic memcache",r={id:"v1005/portaladmin/apic_memcache_enable",title:"apic memcache:enable",description:"Enables memcache on a specific Developer Portal site.",source:"@site/docs/v1005/portaladmin/apic_memcache_enable.md",sourceDirName:"v1005/portaladmin",slug:"/v1005/portaladmin/apic_memcache_enable",permalink:"/ibm-apiconnect/clidocs/docs/v1005/portaladmin/apic_memcache_enable",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/portaladmin/apic_memcache_enable.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic memcache:disable",permalink:"/ibm-apiconnect/clidocs/docs/v1005/portaladmin/apic_memcache_disable"},next:{title:"apic memcache:get",permalink:"/ibm-apiconnect/clidocs/docs/v1005/portaladmin/apic_memcache_get"}},s={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function m(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsxs)(n.h1,{id:"apic-memcache",children:["apic memcache",":enable"]}),"\n",(0,i.jsx)(n.p,{children:"Enables memcache on a specific Developer Portal site."}),"\n",(0,i.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(n.p,{children:"Enables memcache on a specific Developer Portal site. This sets Drupal to use RAM for it's cache."}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"apic memcache:enable --mode portaladmin [flags]\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for memcache:enable\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,i.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(n.pre,{children:(0,i.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:n}={...(0,c.R)(),...e.components};return n?(0,i.jsx)(n,{...e,children:(0,i.jsx)(m,{...e})}):m(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>r});var i=t(96540);const c={},a=i.createContext(c);function o(e){const n=i.useContext(a);return i.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:o(e.components),i.createElement(a.Provider,{value:n},e.children)}}}]);