"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[377822],{28453:(e,o,t)=>{t.d(o,{R:()=>a,x:()=>r});var n=t(296540);const s={},i=n.createContext(s);function a(e){const o=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function r(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),n.createElement(i.Provider,{value:o},e.children)}},999846:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>r,default:()=>p,frontMatter:()=>a,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"v10010/portaladmin/modules/apic_modules","title":"apic modules","description":"Modules operations","source":"@site/docs/v10010/portaladmin/modules/apic_modules.md","sourceDirName":"v10010/portaladmin/modules","slug":"/v10010/portaladmin/modules/apic_modules","permalink":"/clidocs/docs/v10010/portaladmin/modules/apic_modules","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/portaladmin/modules/apic_modules.md","tags":[{"inline":true,"label":"group: modules","permalink":"/clidocs/docs/tags/group-modules"}],"version":"current","frontMatter":{"tags":["group: modules"]},"sidebar":"tutorialSidebar","previous":{"title":"apic memcache:get","permalink":"/clidocs/docs/v10010/portaladmin/memcache/apic_memcache_get"},"next":{"title":"apic modules:delete","permalink":"/clidocs/docs/v10010/portaladmin/modules/apic_modules_delete"}}');var s=t(474848),i=t(28453);const a={tags:["group: modules"]},r="apic modules",l={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsx)(o.h1,{id:"apic-modules",children:"apic modules"})}),"\n",(0,s.jsx)(o.p,{children:"Modules operations"}),"\n",(0,s.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(o.p,{children:"Modules operations"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"apic modules --mode portaladmin [flags]\n"})}),"\n",(0,s.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --core             Filter out extensions that are not in Drupal Core.\n      --custom           Filter to only custom modules or themes\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for modules\n      --no-core          Filter out extensions that are provided by Drupal Core.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n      --package string   Filter by project packages. You can use multiple comma-separated values.\n  -s, --server string    management server endpoint (required)\n      --status string    Filter by extension status. Choices _ enabled, disabled and/or 'not installed'. You can use multiple comma-separated values.\n"})}),"\n",(0,s.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:o}={...(0,i.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);