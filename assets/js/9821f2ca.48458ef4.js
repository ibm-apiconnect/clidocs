"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[28163],{28453:(e,i,s)=>{s.d(i,{R:()=>o,x:()=>c});var n=s(96540);const r={},t=n.createContext(r);function o(e){const i=n.useContext(t);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:o(e.components),n.createElement(t.Provider,{value:i},e.children)}},57312:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>a,contentTitle:()=>c,default:()=>l,frontMatter:()=>o,metadata:()=>n,toc:()=>d});const n=JSON.parse('{"id":"v1008/apim/services/apic_services","title":"apic services","description":"Services operations","source":"@site/docs/v1008/apim/services/apic_services.md","sourceDirName":"v1008/apim/services","slug":"/v1008/apim/services/apic_services","permalink":"/clidocs/docs/v1008/apim/services/apic_services","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/services/apic_services.md","tags":[{"inline":true,"label":"group: services","permalink":"/clidocs/docs/tags/group-services"}],"version":"current","frontMatter":{"tags":["group: services"]},"sidebar":"tutorialSidebar","previous":{"title":"apic roles:update","permalink":"/clidocs/docs/v1008/apim/roles/apic_roles_update"},"next":{"title":"apic services:clear-all","permalink":"/clidocs/docs/v1008/apim/services/apic_services_clear-all"}}');var r=s(74848),t=s(28453);const o={tags:["group: services"]},c="apic services",a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(i.header,{children:(0,r.jsx)(i.h1,{id:"apic-services",children:"apic services"})}),"\n",(0,r.jsx)(i.p,{children:"Services operations"}),"\n",(0,r.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(i.p,{children:"Services operations"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:"apic services [flags]\n"})}),"\n",(0,r.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --fields string                       List of field names to return\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for services\n      --limit int32                         Maximum number of items to return\n      --offset int32                        Offset item number from list to begin return\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n      --space-initiated                     space-initiated\n'})}),"\n",(0,r.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(i.pre,{children:(0,r.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:i}={...(0,t.R)(),...e.components};return i?(0,r.jsx)(i,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);