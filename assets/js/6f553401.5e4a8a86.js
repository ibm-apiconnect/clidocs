"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[57585],{27399:(e,s,t)=>{t.r(s),t.d(s,{assets:()=>o,contentTitle:()=>r,default:()=>u,frontMatter:()=>n,metadata:()=>a,toc:()=>l});var i=t(74848),c=t(28453);const n={tags:["group: service","scope: cloud"]},r="apic service",a={id:"v1008/analytics/service/apic_service_cloudServicestatus",title:"apic service:cloudServicestatus",description:"Used by the UI to get the analytics service status",source:"@site/docs/v1008/analytics/service/apic_service_cloudServicestatus.md",sourceDirName:"v1008/analytics/service",slug:"/v1008/analytics/service/apic_service_cloudServicestatus",permalink:"/clidocs/docs/v1008/analytics/service/apic_service_cloudServicestatus",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/analytics/service/apic_service_cloudServicestatus.md",tags:[{inline:!0,label:"group: service",permalink:"/clidocs/docs/tags/group-service"},{inline:!0,label:"scope: cloud",permalink:"/clidocs/docs/tags/scope-cloud"}],version:"current",frontMatter:{tags:["group: service","scope: cloud"]},sidebar:"tutorialSidebar",previous:{title:"apic service:catalogServicestatus",permalink:"/clidocs/docs/v1008/analytics/service/apic_service_catalogServicestatus"},next:{title:"apic service:orgServicestatus",permalink:"/clidocs/docs/v1008/analytics/service/apic_service_orgServicestatus"}},o={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const s={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(s.header,{children:(0,i.jsxs)(s.h1,{id:"apic-service",children:["apic service",":cloudServicestatus"]})}),"\n",(0,i.jsx)(s.p,{children:"Used by the UI to get the analytics service status"}),"\n",(0,i.jsx)(s.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(s.p,{children:"Used by the UI to get the analytics service status."}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"apic service:cloudServicestatus --mode analytics [flags]\n"})}),"\n",(0,i.jsx)(s.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:"\n      apic service:cloudServicestatus --mode analytics [flags]\n\n"})}),"\n",(0,i.jsx)(s.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,i.jsx)(s.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(s.pre,{children:(0,i.jsx)(s.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:s}={...(0,c.R)(),...e.components};return s?(0,i.jsx)(s,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}},28453:(e,s,t)=>{t.d(s,{R:()=>r,x:()=>a});var i=t(96540);const c={},n=i.createContext(c);function r(e){const s=i.useContext(n);return i.useMemo((function(){return"function"==typeof e?e(s):{...s,...e}}),[s,e])}function a(e){let s;return s=e.disableParentContext?"function"==typeof e.components?e.components(c):e.components||c:r(e.components),i.createElement(n.Provider,{value:s},e.children)}}}]);