"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[33781],{80118:(e,r,o)=>{o.r(r),o.d(r,{assets:()=>l,contentTitle:()=>i,default:()=>p,frontMatter:()=>n,metadata:()=>a,toc:()=>d});var t=o(74848),s=o(28453);const n={tags:["group: user"]},i="apic user",a={id:"v1008/portaladmin/user/apic_user_add-role",title:"apic user:add-role",description:"Add a singular or multiple roles to the specified Drupal User accounts.",source:"@site/docs/v1008/portaladmin/user/apic_user_add-role.md",sourceDirName:"v1008/portaladmin/user",slug:"/v1008/portaladmin/user/apic_user_add-role",permalink:"/clidocs/docs/v1008/portaladmin/user/apic_user_add-role",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/user/apic_user_add-role.md",tags:[{inline:!0,label:"group: user",permalink:"/clidocs/docs/tags/group-user"}],version:"current",frontMatter:{tags:["group: user"]},sidebar:"tutorialSidebar",previous:{title:"apic user",permalink:"/clidocs/docs/v1008/portaladmin/user/apic_user"},next:{title:"apic user:block",permalink:"/clidocs/docs/v1008/portaladmin/user/apic_user_block"}},l={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const r={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(r.header,{children:(0,t.jsxs)(r.h1,{id:"apic-user",children:["apic user",":add-role"]})}),"\n",(0,t.jsx)(r.p,{children:"Add a singular or multiple roles to the specified Drupal User accounts."}),"\n",(0,t.jsx)(r.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(r.p,{children:"Add a singular or multiple roles to the specified Drupal User accounts. You need to provide either the mail, username, or the UID of the Drupal User account."}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"apic user:add-role --mode portaladmin [flags]\n"})}),"\n",(0,t.jsx)(r.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"\n      apic user:add-role --mode portaladmin [flags]\n\n"})}),"\n",(0,t.jsx)(r.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --mail string      A comma-separated list of Drupal User Email addresses to perform the action on.\n      --names string     A comma-separated list of names of Drupal Users to perform the action on.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n      --role string      The name of the Drupal User Role. (required)\n  -s, --server string    management server endpoint (required)\n      --uid string       A comma-separated list of UIDs of Drupal Users to perform the action on.\n"})}),"\n",(0,t.jsx)(r.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(r.pre,{children:(0,t.jsx)(r.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:r}={...(0,s.R)(),...e.components};return r?(0,t.jsx)(r,{...e,children:(0,t.jsx)(c,{...e})}):c(e)}},28453:(e,r,o)=>{o.d(r,{R:()=>i,x:()=>a});var t=o(96540);const s={},n=t.createContext(s);function i(e){const r=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(r):{...r,...e}}),[r,e])}function a(e){let r;return r=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:i(e.components),t.createElement(n.Provider,{value:r},e.children)}}}]);