"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[73752],{2709:(e,i,s)=>{s.r(i),s.d(i,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>t,metadata:()=>o,toc:()=>a});const o=JSON.parse('{"id":"v1008/discovery/discovered-apis/apic_discovered-apis_get","title":"apic discovered-apis:get","description":"Get the Discovered API object by name and version","source":"@site/docs/v1008/discovery/discovered-apis/apic_discovered-apis_get.md","sourceDirName":"v1008/discovery/discovered-apis","slug":"/v1008/discovery/discovered-apis/apic_discovered-apis_get","permalink":"/clidocs/docs/v1008/discovery/discovered-apis/apic_discovered-apis_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/discovery/discovered-apis/apic_discovered-apis_get.md","tags":[{"inline":true,"label":"group: discovered-apis","permalink":"/clidocs/docs/tags/group-discovered-apis"}],"version":"current","frontMatter":{"tags":["group: discovered-apis"]},"sidebar":"tutorialSidebar","previous":{"title":"apic discovered-apis:delete","permalink":"/clidocs/docs/v1008/discovery/discovered-apis/apic_discovered-apis_delete"},"next":{"title":"apic discovered-apis:list-all","permalink":"/clidocs/docs/v1008/discovery/discovered-apis/apic_discovered-apis_list-all"}}');var n=s(74848),d=s(28453);const t={tags:["group: discovered-apis"]},r="apic discovered-apis",c={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,d.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(i.header,{children:(0,n.jsxs)(i.h1,{id:"apic-discovered-apis",children:["apic discovered-apis",":get"]})}),"\n",(0,n.jsx)(i.p,{children:"Get the Discovered API object by name and version"}),"\n",(0,n.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(i.p,{children:"Get the Discovered API object by name and version"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"apic discovered-apis:get --mode discovery [flags]\n"})}),"\n",(0,n.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"\n      apic discovered-apis:get --mode discovery [flags] --id ID\n      apic discovered-apis:get --mode discovery [flags] NAME:VERSION\n\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:"      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, use - for STDOUT. (default: cwd)\n  -s, --server string   management server endpoint (required)\n"})}),"\n",(0,n.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(i.pre,{children:(0,n.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:i}={...(0,d.R)(),...e.components};return i?(0,n.jsx)(i,{...e,children:(0,n.jsx)(p,{...e})}):p(e)}},28453:(e,i,s)=>{s.d(i,{R:()=>t,x:()=>r});var o=s(96540);const n={},d=o.createContext(n);function t(e){const i=o.useContext(d);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:t(e.components),o.createElement(d.Provider,{value:i},e.children)}}}]);