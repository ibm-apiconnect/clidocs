"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[8809],{92831:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>s,contentTitle:()=>c,default:()=>l,frontMatter:()=>r,metadata:()=>a,toc:()=>p});var o=n(74848),i=n(28453);const r={},c="apic content",a={id:"v1008/portaladmin/apic_content",title:"apic content",description:"Content operations",source:"@site/docs/v1008/portaladmin/apic_content.md",sourceDirName:"v1008/portaladmin",slug:"/v1008/portaladmin/apic_content",permalink:"/clidocs/docs/v1008/portaladmin/apic_content",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/apic_content.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic consumer-org:list",permalink:"/clidocs/docs/v1008/portaladmin/apic_consumer-org_list"},next:{title:"apic content:create-export",permalink:"/clidocs/docs/v1008/portaladmin/apic_content_create-export"}},s={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsx)(t.h1,{id:"apic-content",children:"apic content"})}),"\n",(0,o.jsx)(t.p,{children:"Content operations"}),"\n",(0,o.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(t.p,{children:"Content operations"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"apic content --mode portaladmin [flags]\n"})}),"\n",(0,o.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --bundle string        The Bundle type for a given Entity type. E.g. "page" for the "node" Entity type.\n  -c, --catalog string       Name or ID of the Catalog that the site belongs to. (required)\n      --entity_type string   Type of entity you want to perform this operation on. To find out entity/content types see the content list-types route. (required)\n      --format string        Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                 Help for content\n  -o, --org string           Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string        management server endpoint (required)\n'})}),"\n",(0,o.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,i.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(d,{...e})}):d(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>c,x:()=>a});var o=n(96540);const i={},r=o.createContext(i);function c(e){const t=o.useContext(r);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function a(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:c(e.components),o.createElement(r.Provider,{value:t},e.children)}}}]);