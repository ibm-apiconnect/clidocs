"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[13562],{13660:(e,i,n)=>{n.r(i),n.d(i,{assets:()=>a,contentTitle:()=>r,default:()=>u,frontMatter:()=>o,metadata:()=>c,toc:()=>d});var t=n(74848),s=n(28453);const o={},r="apic cloud-settings",c={id:"v1008/apim/apic_cloud-settings_mail-server-configured",title:"apic cloud-settings:mail-server-configured",description:"Return true or false based on if mail server is configured or not",source:"@site/docs/v1008/apim/apic_cloud-settings_mail-server-configured.md",sourceDirName:"v1008/apim",slug:"/v1008/apim/apic_cloud-settings_mail-server-configured",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_cloud-settings_mail-server-configured",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/apic_cloud-settings_mail-server-configured.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic cloud-settings:info",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_cloud-settings_info"},next:{title:"apic cloud-settings:oauth2-certs",permalink:"/ibm-apiconnect/clidocs/docs/v1008/apim/apic_cloud-settings_oauth2-certs"}},a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const i={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsxs)(i.h1,{id:"apic-cloud-settings",children:["apic cloud-settings",":mail-server-configured"]}),"\n",(0,t.jsx)(i.p,{children:"Return true or false based on if mail server is configured or not"}),"\n",(0,t.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(i.p,{children:"Return true or false based on if mail server is configured or not. You MUST supply the --format option when using this command from the API Connect toolkit."}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"apic cloud-settings:mail-server-configured [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:"      apic cloud-settings:mail-server-configured [flags]\n"})}),"\n",(0,t.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,t.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(i.pre,{children:(0,t.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:i}={...(0,s.R)(),...e.components};return i?(0,t.jsx)(i,{...e,children:(0,t.jsx)(l,{...e})}):l(e)}},28453:(e,i,n)=>{n.d(i,{R:()=>r,x:()=>c});var t=n(96540);const s={},o=t.createContext(s);function r(e){const i=t.useContext(o);return t.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function c(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:r(e.components),t.createElement(o.Provider,{value:i},e.children)}}}]);