"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[589161],{28453:(e,t,i)=>{i.d(t,{R:()=>r,x:()=>o});var a=i(296540);const n={},s=a.createContext(n);function r(e){const t=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:r(e.components),a.createElement(s.Provider,{value:t},e.children)}},267868:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>c,contentTitle:()=>o,default:()=>u,frontMatter:()=>r,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"v10010/analytics/audit/apic_audit_cloudGetFilterParameters","title":"apic audit:cloudGetFilterParameters","description":"List audit filter parameters at cloud scope","source":"@site/docs/v10010/analytics/audit/apic_audit_cloudGetFilterParameters.md","sourceDirName":"v10010/analytics/audit","slug":"/v10010/analytics/audit/apic_audit_cloudGetFilterParameters","permalink":"/clidocs/docs/v10010/analytics/audit/apic_audit_cloudGetFilterParameters","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/analytics/audit/apic_audit_cloudGetFilterParameters.md","tags":[{"inline":true,"label":"group: audit","permalink":"/clidocs/docs/tags/group-audit"},{"inline":true,"label":"scope: cloud","permalink":"/clidocs/docs/tags/scope-cloud"}],"version":"current","frontMatter":{"tags":["group: audit","scope: cloud"]},"sidebar":"tutorialSidebar","previous":{"title":"apic audit:cloudGet","permalink":"/clidocs/docs/v10010/analytics/audit/apic_audit_cloudGet"},"next":{"title":"apic audit:cloudList","permalink":"/clidocs/docs/v10010/analytics/audit/apic_audit_cloudList"}}');var n=i(474848),s=i(28453);const r={tags:["group: audit","scope: cloud"]},o="apic audit",c={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"apic-audit",children:["apic audit",":cloudGetFilterParameters"]})}),"\n",(0,n.jsx)(t.p,{children:"List audit filter parameters at cloud scope"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"Return the list of audit filter parameters supported at cloud scope."}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic audit:cloudGetFilterParameters --mode analytics [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic audit:cloudGetFilterParameters --mode analytics [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-language string     Natural language and locale that the client prefers.\n      --analytics-service string   Analytics service name or ID. (required)\n      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function u(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}}}]);