"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[914285],{28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>o});var r=n(296540);const i={},s=r.createContext(i);function a(e){const t=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function o(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),r.createElement(s.Provider,{value:t},e.children)}},525633:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>d,contentTitle:()=>o,default:()=>l,frontMatter:()=>a,metadata:()=>r,toc:()=>c});const r=JSON.parse('{"id":"v10010/apim/drafts/apic_drafts","title":"apic drafts","description":"Drafts operations","source":"@site/docs/v10010/apim/drafts/apic_drafts.md","sourceDirName":"v10010/apim/drafts","slug":"/v10010/apim/drafts/apic_drafts","permalink":"/clidocs/docs/v10010/apim/drafts/apic_drafts","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/drafts/apic_drafts.md","tags":[{"inline":true,"label":"group: drafts","permalink":"/clidocs/docs/tags/group-drafts"}],"version":"current","frontMatter":{"tags":["group: drafts"]},"sidebar":"tutorialSidebar","previous":{"title":"apic draft-products:validate","permalink":"/clidocs/docs/v10010/apim/draft-products/apic_draft-products_validate"},"next":{"title":"apic drafts:clear","permalink":"/clidocs/docs/v10010/apim/drafts/apic_drafts_clear"}}');var i=n(474848),s=n(28453);const a={tags:["group: drafts"]},o="apic drafts",d={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,s.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsx)(t.h1,{id:"apic-drafts",children:"apic drafts"})}),"\n",(0,i.jsx)(t.p,{children:"Drafts operations"}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:"Drafts operations"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic drafts [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for drafts\n      --limit int32     Maximum number of items to return\n      --offset int32    Offset item number from list to begin return\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,s.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(p,{...e})}):p(e)}}}]);