"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[81543],{66052:(e,o,t)=>{t.r(o),t.d(o,{assets:()=>l,contentTitle:()=>s,default:()=>p,frontMatter:()=>i,metadata:()=>a,toc:()=>c});var n=t(74848),r=t(28453);const i={},s="apic user",a={id:"v1008/portaladmin/apic_user_add-role",title:"apic user:add-role",description:"Add a singular or multiple roles to the specified Drupal User accounts.",source:"@site/docs/v1008/portaladmin/apic_user_add-role.md",sourceDirName:"v1008/portaladmin",slug:"/v1008/portaladmin/apic_user_add-role",permalink:"/ibm-apiconnect/clidocs/docs/v1008/portaladmin/apic_user_add-role",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/portaladmin/apic_user_add-role.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic user",permalink:"/ibm-apiconnect/clidocs/docs/v1008/portaladmin/apic_user"},next:{title:"apic user:block",permalink:"/ibm-apiconnect/clidocs/docs/v1008/portaladmin/apic_user_block"}},l={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const o={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsxs)(o.h1,{id:"apic-user",children:["apic user",":add-role"]}),"\n",(0,n.jsx)(o.p,{children:"Add a singular or multiple roles to the specified Drupal User accounts."}),"\n",(0,n.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(o.p,{children:"Add a singular or multiple roles to the specified Drupal User accounts. You need to provide either the mail, username, or the UID of the Drupal User account."}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:"apic user:add-role --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(o.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:"      apic user:add-role --mode portaladmin [flags]\n"})}),"\n",(0,n.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n      --mail string      A comma-separated list of Drupal User Email addresses to perform the action on.\n      --names string     A comma-separated list of names of Drupal Users to perform the action on.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n      --role string      The name of the Drupal User Role. (required)\n  -s, --server string    management server endpoint (required)\n      --uid string       A comma-separated list of UIDs of Drupal Users to perform the action on.\n"})}),"\n",(0,n.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(o.pre,{children:(0,n.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:o}={...(0,r.R)(),...e.components};return o?(0,n.jsx)(o,{...e,children:(0,n.jsx)(d,{...e})}):d(e)}},28453:(e,o,t)=>{t.d(o,{R:()=>s,x:()=>a});var n=t(96540);const r={},i=n.createContext(r);function s(e){const o=n.useContext(i);return n.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),n.createElement(i.Provider,{value:o},e.children)}}}]);