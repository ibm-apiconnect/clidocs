"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[66135],{28453:(e,o,i)=>{i.d(o,{R:()=>t,x:()=>a});var l=i(96540);const s={},n=l.createContext(s);function t(e){const o=l.useContext(n);return l.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function a(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:t(e.components),l.createElement(n.Provider,{value:o},e.children)}},57021:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>r,contentTitle:()=>a,default:()=>d,frontMatter:()=>t,metadata:()=>l,toc:()=>p});const l=JSON.parse('{"id":"v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_get","title":"apic global-policy-prehooks:get","description":"Global Policy Prehooks get operations","source":"@site/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_get.md","sourceDirName":"v1008/apim/global-policy-prehooks","slug":"/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_get","permalink":"/clidocs/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_get","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_get.md","tags":[{"inline":true,"label":"group: global-policy-prehooks","permalink":"/clidocs/docs/tags/group-global-policy-prehooks"},{"inline":true,"label":"scope: catalog","permalink":"/clidocs/docs/tags/scope-catalog"},{"inline":true,"label":"scope: space","permalink":"/clidocs/docs/tags/scope-space"}],"version":"current","frontMatter":{"tags":["group: global-policy-prehooks","scope: catalog","scope: space"]},"sidebar":"tutorialSidebar","previous":{"title":"apic global-policy-prehooks:delete","permalink":"/clidocs/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_delete"},"next":{"title":"apic global-policy-prehooks:update","permalink":"/clidocs/docs/v1008/apim/global-policy-prehooks/apic_global-policy-prehooks_update"}}');var s=i(74848),n=i(28453);const t={tags:["group: global-policy-prehooks","scope: catalog","scope: space"]},a="apic global-policy-prehooks",r={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const o={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(o.header,{children:(0,s.jsxs)(o.h1,{id:"apic-global-policy-prehooks",children:["apic global-policy-prehooks",":get"]})}),"\n",(0,s.jsx)(o.p,{children:"Global Policy Prehooks get operations"}),"\n",(0,s.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(o.p,{children:"Global Policy Prehooks get operations"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"apic global-policy-prehooks:get [flags]\n"})}),"\n",(0,s.jsx)(o.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"\n      apic global-policy-prehooks:get [flags] --scope space\n      apic global-policy-prehooks:get [flags] --scope catalog\n\n"})}),"\n",(0,s.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"  -c, --catalog string                      Catalog name or id (required)\n      --configured-gateway-service string   Configured Gateway Service name or id (required)\n      --fields string                       List of field names to return\n      --format string                       Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                                Help for global-policy-prehooks:get\n  -o, --org string                          Organization name or id (required)\n      --output string                       Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --scope string                        scope\n  -s, --server string                       management server endpoint (required)\n      --space string                        Space name or id (required)\n"})}),"\n",(0,s.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:o}={...(0,n.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(c,{...e})}):c(e)}}}]);