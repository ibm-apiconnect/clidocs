"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[845571],{28453:(i,e,n)=>{n.d(e,{R:()=>s,x:()=>l});var t=n(296540);const a={},o=t.createContext(a);function s(i){const e=t.useContext(o);return t.useMemo((function(){return"function"==typeof i?i(e):{...e,...i}}),[e,i])}function l(i){let e;return e=i.disableParentContext?"function"==typeof i.components?i.components(a):i.components||a:s(i.components),t.createElement(o.Provider,{value:e},i.children)}},549028:(i,e,n)=>{n.r(e),n.d(e,{assets:()=>r,contentTitle:()=>l,default:()=>d,frontMatter:()=>s,metadata:()=>t,toc:()=>c});const t=JSON.parse('{"id":"v10010/apim/availability-zones/apic_availability-zones","title":"apic availability-zones","description":"Availability Zones operations","source":"@site/docs/v10010/apim/availability-zones/apic_availability-zones.md","sourceDirName":"v10010/apim/availability-zones","slug":"/v10010/apim/availability-zones/apic_availability-zones","permalink":"/clidocs/docs/v10010/apim/availability-zones/apic_availability-zones","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/availability-zones/apic_availability-zones.md","tags":[{"inline":true,"label":"group: availability-zones","permalink":"/clidocs/docs/tags/group-availability-zones"}],"version":"current","frontMatter":{"tags":["group: availability-zones"]},"sidebar":"tutorialSidebar","previous":{"title":"apic associates:list","permalink":"/clidocs/docs/v10010/apim/associates/apic_associates_list"},"next":{"title":"apic availability-zones:clear","permalink":"/clidocs/docs/v10010/apim/availability-zones/apic_availability-zones_clear"}}');var a=n(474848),o=n(28453);const s={tags:["group: availability-zones"]},l="apic availability-zones",r={},c=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(i){const e={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...i.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(e.header,{children:(0,a.jsx)(e.h1,{id:"apic-availability-zones",children:"apic availability-zones"})}),"\n",(0,a.jsx)(e.p,{children:"Availability Zones operations"}),"\n",(0,a.jsx)(e.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(e.p,{children:"Availability Zones operations"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:"apic availability-zones [flags]\n"})}),"\n",(0,a.jsx)(e.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'      --fields string   List of field names to return\n      --format string   Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help            Help for availability-zones\n      --limit int32     Maximum number of items to return\n      --offset int32    Offset item number from list to begin return\n  -o, --org string      Organization name or id (required)\n      --output string   Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string   management server endpoint (required)\n'})}),"\n",(0,a.jsx)(e.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(e.pre,{children:(0,a.jsx)(e.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(i={}){const{wrapper:e}={...(0,o.R)(),...i.components};return e?(0,a.jsx)(e,{...i,children:(0,a.jsx)(p,{...i})}):p(i)}}}]);