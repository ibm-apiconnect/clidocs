"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[59848],{20945:(e,t,n)=>{n.r(t),n.d(t,{assets:()=>o,contentTitle:()=>r,default:()=>d,frontMatter:()=>a,metadata:()=>i,toc:()=>l});const i=JSON.parse('{"id":"v1008/analytics/test/apic_test","title":"apic test","description":"Runs a test and returns","source":"@site/docs/v1008/analytics/test/apic_test.md","sourceDirName":"v1008/analytics/test","slug":"/v1008/analytics/test/apic_test","permalink":"/clidocs/docs/v1008/analytics/test/apic_test","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/analytics/test/apic_test.md","tags":[{"inline":true,"label":"group: test","permalink":"/clidocs/docs/tags/group-test"}],"version":"current","frontMatter":{"tags":["group: test"]},"sidebar":"tutorialSidebar","previous":{"title":"apic service:spaceServicestatus","permalink":"/clidocs/docs/v1008/analytics/service/apic_service_spaceServicestatus"},"next":{"title":"apic validate","permalink":"/clidocs/docs/v1008/analytics/validate/apic_validate"}}');var s=n(74848),c=n(28453);const a={tags:["group: test"]},r="apic test",o={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,c.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsx)(t.header,{children:(0,s.jsx)(t.h1,{id:"apic-test",children:"apic test"})}),"\n",(0,s.jsx)(t.p,{children:"Runs a test and returns"}),"\n",(0,s.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(t.p,{children:"apic-test is a CLI for testing your APIs"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"apic test --mode analytics [flags]\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:"      --certPath string      cert path\n  -c, --config-file string   Give external cinfiguration file path\n  -h, --help                 Help for test\n  -k, --insecureSkipVerify   Skip certificate checks\n  -j, --junit                Output in junit format\n      --mTLS                 Enable mTLS\n"})}),"\n",(0,s.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(t.pre,{children:(0,s.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:t}={...(0,c.R)(),...e.components};return t?(0,s.jsx)(t,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,t,n)=>{n.d(t,{R:()=>a,x:()=>r});var i=n(96540);const s={},c=i.createContext(s);function a(e){const t=i.useContext(c);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(s):e.components||s:a(e.components),i.createElement(c.Provider,{value:t},e.children)}}}]);