"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[82322],{82987:(e,o,i)=>{i.r(o),i.d(o,{assets:()=>d,contentTitle:()=>r,default:()=>l,frontMatter:()=>n,metadata:()=>c,toc:()=>a});var s=i(74848),t=i(28453);const n={},r="apic discovered-apis",c={id:"v1008/discovery/apic_discovered-apis_copy-to-draft",title:"apic discovered-apis:copy-to-draft",description:"Copy a Discovered API to API Manager as a Draft API by name and version",source:"@site/docs/v1008/discovery/apic_discovered-apis_copy-to-draft.md",sourceDirName:"v1008/discovery",slug:"/v1008/discovery/apic_discovered-apis_copy-to-draft",permalink:"/clidocs/docs/v1008/discovery/apic_discovered-apis_copy-to-draft",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/discovery/apic_discovered-apis_copy-to-draft.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic discovered-apis:clear",permalink:"/clidocs/docs/v1008/discovery/apic_discovered-apis_clear"},next:{title:"apic discovered-apis:create",permalink:"/clidocs/docs/v1008/discovery/apic_discovered-apis_create"}},d={},a=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const o={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,t.R)(),...e.components};return(0,s.jsxs)(s.Fragment,{children:[(0,s.jsxs)(o.h1,{id:"apic-discovered-apis",children:["apic discovered-apis",":copy-to-draft"]}),"\n",(0,s.jsx)(o.p,{children:"Copy a Discovered API to API Manager as a Draft API by name and version"}),"\n",(0,s.jsx)(o.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,s.jsx)(o.p,{children:"Copy a Discovered API to API Manager as a Draft API by name and version"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"apic discovered-apis:copy-to-draft --mode discovery [flags]\n"})}),"\n",(0,s.jsx)(o.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:"      apic discovered-apis:copy-to-draft --mode discovery [flags] --id ID\n      apic discovered-apis:copy-to-draft --mode discovery [flags] NAME:VERSION\n"})}),"\n",(0,s.jsx)(o.h2,{id:"options",children:"Options"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'      --format string              Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string                 Organization name or id (required)\n      --output string              Write file(s) to directory, instead of STDOUT (default "-")\n      --promotion_title string     Optional custom name to be used for promotion to Draft API\n      --promotion_version string   Optional custom version to be used for promotion to Draft API\n  -s, --server string              management server endpoint (required)\n'})}),"\n",(0,s.jsx)(o.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,s.jsx)(o.pre,{children:(0,s.jsx)(o.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:o}={...(0,t.R)(),...e.components};return o?(0,s.jsx)(o,{...e,children:(0,s.jsx)(p,{...e})}):p(e)}},28453:(e,o,i)=>{i.d(o,{R:()=>r,x:()=>c});var s=i(96540);const t={},n=s.createContext(t);function r(e){const o=s.useContext(n);return s.useMemo((function(){return"function"==typeof e?e(o):{...o,...e}}),[o,e])}function c(e){let o;return o=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:r(e.components),s.createElement(n.Provider,{value:o},e.children)}}}]);