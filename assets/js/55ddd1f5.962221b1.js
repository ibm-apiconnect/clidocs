"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[690879],{28453:(e,t,s)=>{s.d(t,{R:()=>a,x:()=>r});var n=s(296540);const i={},o=n.createContext(i);function a(e){const t=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function r(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:a(e.components),n.createElement(o.Provider,{value:t},e.children)}},282390:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>c,contentTitle:()=>r,default:()=>l,frontMatter:()=>a,metadata:()=>n,toc:()=>p});const n=JSON.parse('{"id":"v10010/apim/watsonx-settings/apic_watsonx-settings_update","title":"apic watsonx-settings:update","description":"Watsonx Settings update operations","source":"@site/docs/v10010/apim/watsonx-settings/apic_watsonx-settings_update.md","sourceDirName":"v10010/apim/watsonx-settings","slug":"/v10010/apim/watsonx-settings/apic_watsonx-settings_update","permalink":"/clidocs/docs/v10010/apim/watsonx-settings/apic_watsonx-settings_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/watsonx-settings/apic_watsonx-settings_update.md","tags":[{"inline":true,"label":"group: watsonx-settings","permalink":"/clidocs/docs/tags/group-watsonx-settings"},{"inline":true,"label":"scope: org","permalink":"/clidocs/docs/tags/scope-org"}],"version":"current","frontMatter":{"tags":["group: watsonx-settings","scope: org"]},"sidebar":"tutorialSidebar","previous":{"title":"apic watsonx-settings:test-connection","permalink":"/clidocs/docs/v10010/apim/watsonx-settings/apic_watsonx-settings_test-connection"},"next":{"title":"apic webhooks","permalink":"/clidocs/docs/v10010/apim/webhooks/apic_webhooks"}}');var i=s(474848),o=s(28453);const a={tags:["group: watsonx-settings","scope: org"]},r="apic watsonx-settings",c={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,i.jsxs)(i.Fragment,{children:[(0,i.jsx)(t.header,{children:(0,i.jsxs)(t.h1,{id:"apic-watsonx-settings",children:["apic watsonx-settings",":update"]})}),"\n",(0,i.jsx)(t.p,{children:"Watsonx Settings update operations"}),"\n",(0,i.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,i.jsx)(t.p,{children:"Watsonx Settings update operations"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic watsonx-settings:update [flags]\n"})}),"\n",(0,i.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:"apic watsonx-settings:update [flags] --scope org WATSONX_SETTINGS_FILE\n"})}),"\n",(0,i.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --format string             Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                      Help for watsonx-settings:update\n  -o, --org string                Organization name or id (required)\n      --output string             Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string              scope\n  -s, --server string             management server endpoint (required)\n      --watsonx-settings string   Watsonx Settings name or id (required)\n'})}),"\n",(0,i.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,i.jsx)(t.pre,{children:(0,i.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:t}={...(0,o.R)(),...e.components};return t?(0,i.jsx)(t,{...e,children:(0,i.jsx)(d,{...e})}):d(e)}}}]);