"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[37300],{34618:(e,t,s)=>{s.r(t),s.d(t,{assets:()=>a,contentTitle:()=>c,default:()=>p,frontMatter:()=>o,metadata:()=>i,toc:()=>d});const i=JSON.parse('{"id":"v1005/apim/apic_users_list","title":"apic users:list","description":"List the User objects","source":"@site/docs/v1005/apim/apic_users_list.md","sourceDirName":"v1005/apim","slug":"/v1005/apim/apic_users_list","permalink":"/clidocs/docs/v1005/apim/apic_users_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_users_list.md","tags":[],"version":"current","frontMatter":{},"sidebar":"tutorialSidebar","previous":{"title":"apic users:get","permalink":"/clidocs/docs/v1005/apim/apic_users_get"},"next":{"title":"apic users:request-password-reset","permalink":"/clidocs/docs/v1005/apim/apic_users_request-password-reset"}}');var n=s(74848),r=s(28453);const o={},c="apic users",a={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,r.R)(),...e.components};return(0,n.jsxs)(n.Fragment,{children:[(0,n.jsx)(t.header,{children:(0,n.jsxs)(t.h1,{id:"apic-users",children:["apic users",":list"]})}),"\n",(0,n.jsx)(t.p,{children:"List the User objects"}),"\n",(0,n.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,n.jsx)(t.p,{children:"List the User objects"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:"apic users:list [flags]\n"})}),"\n",(0,n.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --fields string          List of field names to return\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                   Help for users:list\n      --limit int32            Maximum number of items to return\n      --offset int32           Offset item number from list to begin return\n  -o, --org string             Organization name or id (required)\n      --output string          Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string          management server endpoint (required)\n      --user-registry string   User Registry name or id (required)\n'})}),"\n",(0,n.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,n.jsx)(t.pre,{children:(0,n.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function p(e={}){const{wrapper:t}={...(0,r.R)(),...e.components};return t?(0,n.jsx)(t,{...e,children:(0,n.jsx)(l,{...e})}):l(e)}},28453:(e,t,s)=>{s.d(t,{R:()=>o,x:()=>c});var i=s(96540);const n={},r=i.createContext(n);function o(e){const t=i.useContext(r);return i.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:o(e.components),i.createElement(r.Provider,{value:t},e.children)}}}]);