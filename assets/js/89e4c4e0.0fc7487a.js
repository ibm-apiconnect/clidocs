"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[41755],{28453:(e,i,t)=>{t.d(i,{R:()=>s,x:()=>r});var n=t(296540);const a={},o=n.createContext(a);function s(e){const i=n.useContext(o);return n.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function r(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(a):e.components||a:s(e.components),n.createElement(o.Provider,{value:i},e.children)}},377404:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>p,contentTitle:()=>r,default:()=>d,frontMatter:()=>s,metadata:()=>n,toc:()=>l});const n=JSON.parse('{"id":"v10010/portaladmin/api/apic_api_list","title":"apic api:list","description":"Shows a list of apis from a site.","source":"@site/docs/v10010/portaladmin/api/apic_api_list.md","sourceDirName":"v10010/portaladmin/api","slug":"/v10010/portaladmin/api/apic_api_list","permalink":"/clidocs/docs/v10010/portaladmin/api/apic_api_list","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/portaladmin/api/apic_api_list.md","tags":[{"inline":true,"label":"group: api","permalink":"/clidocs/docs/tags/group-api"}],"version":"current","frontMatter":{"tags":["group: api"]},"sidebar":"tutorialSidebar","previous":{"title":"apic api:get","permalink":"/clidocs/docs/v10010/portaladmin/api/apic_api_get"},"next":{"title":"apic api:set-icon","permalink":"/clidocs/docs/v10010/portaladmin/api/apic_api_set-icon"}}');var a=t(474848),o=t(28453);const s={tags:["group: api"]},r="apic api",p={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function c(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,o.R)(),...e.components};return(0,a.jsxs)(a.Fragment,{children:[(0,a.jsx)(i.header,{children:(0,a.jsxs)(i.h1,{id:"apic-api",children:["apic api",":list"]})}),"\n",(0,a.jsx)(i.p,{children:"Shows a list of apis from a site."}),"\n",(0,a.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,a.jsx)(i.p,{children:"Show a list of apis of the provided org and catalog."}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"apic api:list --mode portaladmin [flags]\n"})}),"\n",(0,a.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"apic api:list --mode portaladmin [flags]\n"})}),"\n",(0,a.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:"  -c, --catalog string   Name or ID of the Catalog that the site belongs to. (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Name or ID of the organization that the catalog belongs to. (required)\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,a.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,a.jsx)(i.pre,{children:(0,a.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,o.R)(),...e.components};return i?(0,a.jsx)(i,{...e,children:(0,a.jsx)(c,{...e})}):c(e)}}}]);