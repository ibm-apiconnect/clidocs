"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[507166],{28453:(e,n,i)=>{i.d(n,{R:()=>p,x:()=>r});var a=i(296540);const t={},s=a.createContext(t);function p(e){const n=a.useContext(s);return a.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function r(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(t):e.components||t:p(e.components),a.createElement(s.Provider,{value:n},e.children)}},377102:(e,n,i)=>{i.r(n),i.d(n,{assets:()=>o,contentTitle:()=>r,default:()=>c,frontMatter:()=>p,metadata:()=>a,toc:()=>l});const a=JSON.parse('{"id":"v10010/apim/apps/apic_apps_update","title":"apic apps:update","description":"Update the Application object by name or id","source":"@site/docs/v10010/apim/apps/apic_apps_update.md","sourceDirName":"v10010/apim/apps","slug":"/v10010/apim/apps/apic_apps_update","permalink":"/clidocs/docs/v10010/apim/apps/apic_apps_update","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v10010/apim/apps/apic_apps_update.md","tags":[{"inline":true,"label":"group: apps","permalink":"/clidocs/docs/tags/group-apps"}],"version":"current","frontMatter":{"tags":["group: apps"]},"sidebar":"tutorialSidebar","previous":{"title":"apic apps:list","permalink":"/clidocs/docs/v10010/apim/apps/apic_apps_list"},"next":{"title":"apic associates","permalink":"/clidocs/docs/v10010/apim/associates/apic_associates"}}');var t=i(474848),s=i(28453);const p={tags:["group: apps"]},r="apic apps",o={},l=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Request examples",id:"request-examples",level:2},{value:"Example of app update with state enabled.",id:"example-of-app-update-with-state-enabled",level:4},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function d(e){const n={code:"code",h1:"h1",h2:"h2",h4:"h4",header:"header",hr:"hr",li:"li",p:"p",pre:"pre",ul:"ul",...(0,s.R)(),...e.components};return(0,t.jsxs)(t.Fragment,{children:[(0,t.jsx)(n.header,{children:(0,t.jsxs)(n.h1,{id:"apic-apps",children:["apic apps",":update"]})}),"\n",(0,t.jsx)(n.p,{children:"Update the Application object by name or id"}),"\n",(0,t.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,t.jsx)(n.p,{children:"Update the Application object by name or id"}),"\n",(0,t.jsx)(n.p,{children:"Fields allowed but ignored:"}),"\n",(0,t.jsxs)(n.ul,{children:["\n",(0,t.jsx)(n.li,{children:"id"}),"\n",(0,t.jsx)(n.li,{children:"type"}),"\n",(0,t.jsx)(n.li,{children:"api_version"}),"\n",(0,t.jsx)(n.li,{children:"scope"}),"\n",(0,t.jsx)(n.li,{children:"created_at"}),"\n",(0,t.jsx)(n.li,{children:"updated_at"}),"\n",(0,t.jsx)(n.li,{children:"url"}),"\n",(0,t.jsx)(n.li,{children:"org_url"}),"\n",(0,t.jsx)(n.li,{children:"catalog_url"}),"\n",(0,t.jsx)(n.li,{children:"consumer_org_url"}),"\n"]}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apic apps:update [flags]\n"})}),"\n",(0,t.jsx)(n.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"apic apps:update [flags] --space-initiated APP APP_FILE\napic apps:update [flags] APP APP_FILE\n"})}),"\n",(0,t.jsx)(n.h2,{id:"request-examples",children:"Request examples"}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.h4,{id:"example-of-app-update-with-state-enabled",children:"Example of app update with state enabled."}),"\n",(0,t.jsx)(n.hr,{}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:"name: updated-acme-app\nstate: enabled\nsummary: An example app update\ntitle: Updated ACME App\n"})}),"\n",(0,t.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'  -c, --catalog string        Catalog name or id (required)\n      --consumer-org string   Consumer Organization name or id (required)\n      --format string         Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string            Organization name or id (required)\n      --output string         Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string         management server endpoint (required)\n'})}),"\n",(0,t.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,t.jsx)(n.pre,{children:(0,t.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function c(e={}){const{wrapper:n}={...(0,s.R)(),...e.components};return n?(0,t.jsx)(n,{...e,children:(0,t.jsx)(d,{...e})}):d(e)}}}]);