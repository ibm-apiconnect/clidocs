"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[30445],{67943:(e,n,t)=>{t.r(n),t.d(n,{assets:()=>a,contentTitle:()=>o,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var r=t(74848),i=t(28453);const s={},o="apic users",c={id:"v1005/apim/apic_users_clear",title:"apic users:clear",description:"Clear the User objects",source:"@site/docs/v1005/apim/apic_users_clear.md",sourceDirName:"v1005/apim",slug:"/v1005/apim/apic_users_clear",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_users_clear",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1005/apim/apic_users_clear.md",tags:[],version:"current",frontMatter:{},sidebar:"tutorialSidebar",previous:{title:"apic users",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_users"},next:{title:"apic users:create",permalink:"/ibm-apiconnect/clidocs/docs/v1005/apim/apic_users_create"}},a={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function l(e){const n={code:"code",h1:"h1",h2:"h2",p:"p",pre:"pre",...(0,i.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsxs)(n.h1,{id:"apic-users",children:["apic users",":clear"]}),"\n",(0,r.jsx)(n.p,{children:"Clear the User objects"}),"\n",(0,r.jsx)(n.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(n.p,{children:"Clear the User objects"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:"apic users:clear [flags]\n"})}),"\n",(0,r.jsx)(n.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --confirm string         Confirmation for critical updates (required)\n      --format string          Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help                   Help for users:clear\n  -o, --org string             Organization name or id (required)\n      --output string          Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string          management server endpoint (required)\n      --user-registry string   User Registry name or id (required)\n'})}),"\n",(0,r.jsx)(n.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(n.pre,{children:(0,r.jsx)(n.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:n}={...(0,i.R)(),...e.components};return n?(0,r.jsx)(n,{...e,children:(0,r.jsx)(l,{...e})}):l(e)}},28453:(e,n,t)=>{t.d(n,{R:()=>o,x:()=>c});var r=t(96540);const i={},s=r.createContext(i);function o(e){const n=r.useContext(s);return r.useMemo((function(){return"function"==typeof e?e(n):{...n,...e}}),[n,e])}function c(e){let n;return n=e.disableParentContext?"function"==typeof e.components?e.components(i):e.components||i:o(e.components),r.createElement(s.Provider,{value:n},e.children)}}}]);