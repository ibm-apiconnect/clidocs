"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[40063],{21244:(e,i,t)=>{t.r(i),t.d(i,{assets:()=>l,contentTitle:()=>c,default:()=>d,frontMatter:()=>s,metadata:()=>a,toc:()=>r});var o=t(74848),n=t(28453);const s={tags:["group: notification-styles","scope: catalog","scope: cloud","scope: consumer","scope: org"]},c="apic notification-styles",a={id:"v1008/apim/notification-styles/apic_notification-styles_get",title:"apic notification-styles:get",description:"Notification Styles get operations",source:"@site/docs/v1008/apim/notification-styles/apic_notification-styles_get.md",sourceDirName:"v1008/apim/notification-styles",slug:"/v1008/apim/notification-styles/apic_notification-styles_get",permalink:"/clidocs/docs/v1008/apim/notification-styles/apic_notification-styles_get",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/notification-styles/apic_notification-styles_get.md",tags:[{inline:!0,label:"group: notification-styles",permalink:"/clidocs/docs/tags/group-notification-styles"},{inline:!0,label:"scope: catalog",permalink:"/clidocs/docs/tags/scope-catalog"},{inline:!0,label:"scope: cloud",permalink:"/clidocs/docs/tags/scope-cloud"},{inline:!0,label:"scope: consumer",permalink:"/clidocs/docs/tags/scope-consumer"},{inline:!0,label:"scope: org",permalink:"/clidocs/docs/tags/scope-org"}],version:"current",frontMatter:{tags:["group: notification-styles","scope: catalog","scope: cloud","scope: consumer","scope: org"]},sidebar:"tutorialSidebar",previous:{title:"apic notification-styles",permalink:"/clidocs/docs/v1008/apim/notification-styles/apic_notification-styles"},next:{title:"apic notification-styles:update",permalink:"/clidocs/docs/v1008/apim/notification-styles/apic_notification-styles_update"}},l={},r=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const i={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(i.header,{children:(0,o.jsxs)(i.h1,{id:"apic-notification-styles",children:["apic notification-styles",":get"]})}),"\n",(0,o.jsx)(i.p,{children:"Notification Styles get operations"}),"\n",(0,o.jsx)(i.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(i.p,{children:"Notification Styles get operations"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"apic notification-styles:get [flags]\n"})}),"\n",(0,o.jsx)(i.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"\n      apic notification-styles:get [flags] --scope org\n      apic notification-styles:get [flags] --scope consumer\n      apic notification-styles:get [flags] --scope cloud\n      apic notification-styles:get [flags] --scope catalog\n\n"})}),"\n",(0,o.jsx)(i.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:"  -c, --catalog string   Catalog name or id (required)\n      --fields string    List of field names to return\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for notification-styles:get\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, use - for STDOUT. (default: cwd)\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n"})}),"\n",(0,o.jsx)(i.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(i.pre,{children:(0,o.jsx)(i.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:i}={...(0,n.R)(),...e.components};return i?(0,o.jsx)(i,{...e,children:(0,o.jsx)(p,{...e})}):p(e)}},28453:(e,i,t)=>{t.d(i,{R:()=>c,x:()=>a});var o=t(96540);const n={},s=o.createContext(n);function c(e){const i=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(i):{...i,...e}}),[i,e])}function a(e){let i;return i=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:c(e.components),o.createElement(s.Provider,{value:i},e.children)}}}]);