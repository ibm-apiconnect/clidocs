"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[28807],{21531:(e,t,i)=>{i.r(t),i.d(t,{assets:()=>l,contentTitle:()=>a,default:()=>d,frontMatter:()=>s,metadata:()=>c,toc:()=>p});var o=i(74848),n=i(28453);const s={tags:["group: notification-styles","scope: catalog","scope: cloud","scope: consumer","scope: org"]},a="apic notification-styles",c={id:"v1008/apim/notification-styles/apic_notification-styles_update",title:"apic notification-styles:update",description:"Notification Styles update operations",source:"@site/docs/v1008/apim/notification-styles/apic_notification-styles_update.md",sourceDirName:"v1008/apim/notification-styles",slug:"/v1008/apim/notification-styles/apic_notification-styles_update",permalink:"/clidocs/docs/v1008/apim/notification-styles/apic_notification-styles_update",draft:!1,unlisted:!1,editUrl:"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/notification-styles/apic_notification-styles_update.md",tags:[{inline:!0,label:"group: notification-styles",permalink:"/clidocs/docs/tags/group-notification-styles"},{inline:!0,label:"scope: catalog",permalink:"/clidocs/docs/tags/scope-catalog"},{inline:!0,label:"scope: cloud",permalink:"/clidocs/docs/tags/scope-cloud"},{inline:!0,label:"scope: consumer",permalink:"/clidocs/docs/tags/scope-consumer"},{inline:!0,label:"scope: org",permalink:"/clidocs/docs/tags/scope-org"}],version:"current",frontMatter:{tags:["group: notification-styles","scope: catalog","scope: cloud","scope: consumer","scope: org"]},sidebar:"tutorialSidebar",previous:{title:"apic notification-styles:get",permalink:"/clidocs/docs/v1008/apim/notification-styles/apic_notification-styles_get"},next:{title:"apic notification-templates",permalink:"/clidocs/docs/v1008/apim/notification-templates/apic_notification-templates"}},l={},p=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function r(e){const t={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,o.jsxs)(o.Fragment,{children:[(0,o.jsx)(t.header,{children:(0,o.jsxs)(t.h1,{id:"apic-notification-styles",children:["apic notification-styles",":update"]})}),"\n",(0,o.jsx)(t.p,{children:"Notification Styles update operations"}),"\n",(0,o.jsx)(t.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,o.jsx)(t.p,{children:"Notification Styles update operations"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"apic notification-styles:update [flags]\n"})}),"\n",(0,o.jsx)(t.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:"\n      apic notification-styles:update [flags] --scope org NOTIFICATION_STYLE_FILE\n      apic notification-styles:update [flags] --scope consumer NOTIFICATION_STYLE_FILE\n      apic notification-styles:update [flags] --scope cloud NOTIFICATION_STYLE_FILE\n      apic notification-styles:update [flags] --scope catalog NOTIFICATION_STYLE_FILE\n\n"})}),"\n",(0,o.jsx)(t.h2,{id:"options",children:"Options"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'  -c, --catalog string   Catalog name or id (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -h, --help             Help for notification-styles:update\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n      --scope string     scope\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,o.jsx)(t.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,o.jsx)(t.pre,{children:(0,o.jsx)(t.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function d(e={}){const{wrapper:t}={...(0,n.R)(),...e.components};return t?(0,o.jsx)(t,{...e,children:(0,o.jsx)(r,{...e})}):r(e)}},28453:(e,t,i)=>{i.d(t,{R:()=>a,x:()=>c});var o=i(96540);const n={},s=o.createContext(n);function a(e){const t=o.useContext(s);return o.useMemo((function(){return"function"==typeof e?e(t):{...t,...e}}),[t,e])}function c(e){let t;return t=e.disableParentContext?"function"==typeof e.components?e.components(n):e.components||n:a(e.components),o.createElement(s.Provider,{value:t},e.children)}}}]);