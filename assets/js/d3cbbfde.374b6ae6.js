"use strict";(self.webpackChunkclidocs=self.webpackChunkclidocs||[]).push([[70734],{28453:(e,a,i)=>{i.d(a,{R:()=>s,x:()=>o});var t=i(96540);const r={},n=t.createContext(r);function s(e){const a=t.useContext(n);return t.useMemo((function(){return"function"==typeof e?e(a):{...a,...e}}),[a,e])}function o(e){let a;return a=e.disableParentContext?"function"==typeof e.components?e.components(r):e.components||r:s(e.components),t.createElement(n.Provider,{value:a},e.children)}},30566:(e,a,i)=>{i.r(a),i.d(a,{assets:()=>c,contentTitle:()=>o,default:()=>l,frontMatter:()=>s,metadata:()=>t,toc:()=>d});const t=JSON.parse('{"id":"v1008/apim/draft-apis/apic_draft-apis_clear","title":"apic draft-apis:clear","description":"Clear the Draft API objects","source":"@site/docs/v1008/apim/draft-apis/apic_draft-apis_clear.md","sourceDirName":"v1008/apim/draft-apis","slug":"/v1008/apim/draft-apis/apic_draft-apis_clear","permalink":"/clidocs/docs/v1008/apim/draft-apis/apic_draft-apis_clear","draft":false,"unlisted":false,"editUrl":"https://github.com/ibm-apiconnect/clidocs/tree/main/docs/v1008/apim/draft-apis/apic_draft-apis_clear.md","tags":[{"inline":true,"label":"group: draft-apis","permalink":"/clidocs/docs/tags/group-draft-apis"}],"version":"current","frontMatter":{"tags":["group: draft-apis"]},"sidebar":"tutorialSidebar","previous":{"title":"apic draft-apis:clear-all","permalink":"/clidocs/docs/v1008/apim/draft-apis/apic_draft-apis_clear-all"},"next":{"title":"apic draft-apis:clone","permalink":"/clidocs/docs/v1008/apim/draft-apis/apic_draft-apis_clone"}}');var r=i(74848),n=i(28453);const s={tags:["group: draft-apis"]},o="apic draft-apis",c={},d=[{value:"Synopsis",id:"synopsis",level:2},{value:"Possible Usages",id:"possible-usages",level:2},{value:"Options",id:"options",level:2},{value:"Options inherited from parent commands",id:"options-inherited-from-parent-commands",level:2}];function p(e){const a={code:"code",h1:"h1",h2:"h2",header:"header",p:"p",pre:"pre",...(0,n.R)(),...e.components};return(0,r.jsxs)(r.Fragment,{children:[(0,r.jsx)(a.header,{children:(0,r.jsxs)(a.h1,{id:"apic-draft-apis",children:["apic draft-apis",":clear"]})}),"\n",(0,r.jsx)(a.p,{children:"Clear the Draft API objects"}),"\n",(0,r.jsx)(a.h2,{id:"synopsis",children:"Synopsis"}),"\n",(0,r.jsx)(a.p,{children:"Clear the Draft API objects"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"apic draft-apis:clear [flags]\n"})}),"\n",(0,r.jsx)(a.h2,{id:"possible-usages",children:"Possible Usages"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:"\n      apic draft-apis:clear [flags] DRAFT_API_NAME\n\n"})}),"\n",(0,r.jsx)(a.h2,{id:"options",children:"Options"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:'      --confirm string   Confirmation for critical updates (required)\n      --format string    Output format. One of [json yaml octet-stream go-template=... go-template-file=...], defaults to yaml.\n  -o, --org string       Organization name or id (required)\n      --output string    Write file(s) to directory, instead of STDOUT (default "-")\n  -s, --server string    management server endpoint (required)\n'})}),"\n",(0,r.jsx)(a.h2,{id:"options-inherited-from-parent-commands",children:"Options inherited from parent commands"}),"\n",(0,r.jsx)(a.pre,{children:(0,r.jsx)(a.code,{children:'      --accept-license        Accept the license for API Connect\n      --debug                 Enable debug output\n      --debug-output string   Write debug output to file\n      --lang string           Toolkit operation language\n      --live-help             Enable or disable tracking of limited usage information\n  -m, --mode string           Toolkit operation mode (default "apim")\n'})})]})}function l(e={}){const{wrapper:a}={...(0,n.R)(),...e.components};return a?(0,r.jsx)(a,{...e,children:(0,r.jsx)(p,{...e})}):p(e)}}}]);